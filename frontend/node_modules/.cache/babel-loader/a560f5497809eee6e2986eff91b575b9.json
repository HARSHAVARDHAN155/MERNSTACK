{"ast":null,"code":"\"use strict\";\n\nvar to_ascii, to_base64;\n\nif (typeof Buffer == \"undefined\") {\n  to_ascii = atob;\n  to_base64 = btoa;\n} else if (typeof Buffer.alloc == \"undefined\") {\n  to_ascii = function (b64) {\n    return new Buffer(b64, \"base64\").toString();\n  };\n\n  to_base64 = function (str) {\n    return new Buffer(str).toString(\"base64\");\n  };\n} else {\n  to_ascii = function (b64) {\n    return Buffer.from(b64, \"base64\").toString();\n  };\n\n  to_base64 = function (str) {\n    return Buffer.from(str).toString(\"base64\");\n  };\n}\n\nfunction read_source_map(name, toplevel) {\n  var comments = toplevel.end.comments_after;\n\n  for (var i = comments.length; --i >= 0;) {\n    var comment = comments[i];\n    if (comment.type != \"comment1\") break;\n    var match = /^# ([^\\s=]+)=(\\S+)\\s*$/.exec(comment.value);\n    if (!match) break;\n\n    if (match[1] == \"sourceMappingURL\") {\n      match = /^data:application\\/json(;.*?)?;base64,([^,]+)$/.exec(match[2]);\n      if (!match) break;\n      return to_ascii(match[2]);\n    }\n  }\n\n  AST_Node.warn(\"inline source map not found: {name}\", {\n    name: name\n  });\n}\n\nfunction parse_source_map(content) {\n  try {\n    return JSON.parse(content);\n  } catch (ex) {\n    throw new Error(\"invalid input source map: \" + content);\n  }\n}\n\nfunction set_shorthand(name, options, keys) {\n  keys.forEach(function (key) {\n    if (options[key]) {\n      if (typeof options[key] != \"object\") options[key] = {};\n      if (!(name in options[key])) options[key][name] = options[name];\n    }\n  });\n}\n\nfunction init_cache(cache) {\n  if (!cache) return;\n\n  if (!(\"props\" in cache)) {\n    cache.props = new Dictionary();\n  } else if (!(cache.props instanceof Dictionary)) {\n    cache.props = Dictionary.fromObject(cache.props);\n  }\n}\n\nfunction to_json(cache) {\n  return {\n    props: cache.props.toObject()\n  };\n}\n\nfunction minify(files, options) {\n  try {\n    options = defaults(options, {\n      annotations: undefined,\n      compress: {},\n      enclose: false,\n      ie: false,\n      ie8: false,\n      keep_fargs: false,\n      keep_fnames: false,\n      mangle: {},\n      nameCache: null,\n      output: {},\n      parse: {},\n      rename: undefined,\n      sourceMap: false,\n      timings: false,\n      toplevel: false,\n      v8: false,\n      validate: false,\n      warnings: false,\n      webkit: false,\n      wrap: false\n    }, true);\n    if (options.validate) AST_Node.enable_validation();\n    var timings = options.timings && {\n      start: Date.now()\n    };\n    if (options.rename === undefined) options.rename = options.compress && options.mangle;\n    if (options.annotations !== undefined) set_shorthand(\"annotations\", options, [\"compress\", \"output\"]);\n    if (options.ie8) options.ie = options.ie || options.ie8;\n    if (options.ie) set_shorthand(\"ie\", options, [\"compress\", \"mangle\", \"output\"]);\n    if (options.keep_fargs) set_shorthand(\"keep_fargs\", options, [\"compress\", \"mangle\"]);\n    if (options.keep_fnames) set_shorthand(\"keep_fnames\", options, [\"compress\", \"mangle\"]);\n    if (options.toplevel) set_shorthand(\"toplevel\", options, [\"compress\", \"mangle\"]);\n    if (options.v8) set_shorthand(\"v8\", options, [\"mangle\", \"output\"]);\n    if (options.webkit) set_shorthand(\"webkit\", options, [\"compress\", \"mangle\", \"output\"]);\n    var quoted_props;\n\n    if (options.mangle) {\n      options.mangle = defaults(options.mangle, {\n        cache: options.nameCache && (options.nameCache.vars || {}),\n        eval: false,\n        ie: false,\n        keep_fargs: false,\n        keep_fnames: false,\n        properties: false,\n        reserved: [],\n        toplevel: false,\n        v8: false,\n        webkit: false\n      }, true);\n\n      if (options.mangle.properties) {\n        if (typeof options.mangle.properties != \"object\") {\n          options.mangle.properties = {};\n        }\n\n        if (options.mangle.properties.keep_quoted) {\n          quoted_props = options.mangle.properties.reserved;\n          if (!Array.isArray(quoted_props)) quoted_props = [];\n          options.mangle.properties.reserved = quoted_props;\n        }\n\n        if (options.nameCache && !(\"cache\" in options.mangle.properties)) {\n          options.mangle.properties.cache = options.nameCache.props || {};\n        }\n      }\n\n      init_cache(options.mangle.cache);\n      init_cache(options.mangle.properties.cache);\n    }\n\n    if (options.sourceMap) {\n      options.sourceMap = defaults(options.sourceMap, {\n        content: null,\n        filename: null,\n        includeSources: false,\n        names: true,\n        root: null,\n        url: null\n      }, true);\n    }\n\n    var warnings = [];\n    if (options.warnings) AST_Node.log_function(function (warning) {\n      warnings.push(warning);\n    }, options.warnings == \"verbose\");\n    if (timings) timings.parse = Date.now();\n    var toplevel;\n\n    if (files instanceof AST_Toplevel) {\n      toplevel = files;\n    } else {\n      if (typeof files == \"string\") {\n        files = [files];\n      }\n\n      options.parse = options.parse || {};\n      options.parse.toplevel = null;\n      var source_map_content = options.sourceMap && options.sourceMap.content;\n\n      if (typeof source_map_content == \"string\" && source_map_content != \"inline\") {\n        source_map_content = parse_source_map(source_map_content);\n      }\n\n      if (source_map_content) options.sourceMap.orig = Object.create(null);\n\n      for (var name in files) if (HOP(files, name)) {\n        options.parse.filename = name;\n        options.parse.toplevel = toplevel = parse(files[name], options.parse);\n\n        if (source_map_content == \"inline\") {\n          var inlined_content = read_source_map(name, toplevel);\n\n          if (inlined_content) {\n            options.sourceMap.orig[name] = parse_source_map(inlined_content);\n          }\n        } else if (source_map_content) {\n          options.sourceMap.orig[name] = source_map_content;\n        }\n      }\n    }\n\n    if (quoted_props) {\n      reserve_quoted_keys(toplevel, quoted_props);\n    }\n\n    [\"enclose\", \"wrap\"].forEach(function (action) {\n      var option = options[action];\n      if (!option) return;\n      var orig = toplevel.print_to_string().slice(0, -1);\n      toplevel = toplevel[action](option);\n      files[toplevel.start.file] = toplevel.print_to_string().replace(orig, \"\");\n    });\n    if (options.validate) toplevel.validate_ast();\n    if (timings) timings.rename = Date.now();\n\n    if (options.rename) {\n      toplevel.figure_out_scope(options.mangle);\n      toplevel.expand_names(options.mangle);\n    }\n\n    if (timings) timings.compress = Date.now();\n\n    if (options.compress) {\n      toplevel = new Compressor(options.compress).compress(toplevel);\n      if (options.validate) toplevel.validate_ast();\n    }\n\n    if (timings) timings.scope = Date.now();\n    if (options.mangle) toplevel.figure_out_scope(options.mangle);\n    if (timings) timings.mangle = Date.now();\n\n    if (options.mangle) {\n      toplevel.compute_char_frequency(options.mangle);\n      toplevel.mangle_names(options.mangle);\n    }\n\n    if (timings) timings.properties = Date.now();\n    if (options.mangle && options.mangle.properties) mangle_properties(toplevel, options.mangle.properties);\n    if (timings) timings.output = Date.now();\n    var result = {};\n    var output = defaults(options.output, {\n      ast: false,\n      code: true\n    });\n    if (output.ast) result.ast = toplevel;\n\n    if (output.code) {\n      if (options.sourceMap) {\n        output.source_map = SourceMap(options.sourceMap);\n\n        if (options.sourceMap.includeSources) {\n          if (files instanceof AST_Toplevel) {\n            throw new Error(\"original source content unavailable\");\n          } else for (var name in files) if (HOP(files, name)) {\n            output.source_map.setSourceContent(name, files[name]);\n          }\n        }\n      }\n\n      delete output.ast;\n      delete output.code;\n      var stream = OutputStream(output);\n      toplevel.print(stream);\n      result.code = stream.get();\n\n      if (options.sourceMap) {\n        result.map = output.source_map.toString();\n        var url = options.sourceMap.url;\n\n        if (url) {\n          result.code = result.code.replace(/\\n\\/\\/# sourceMappingURL=\\S+\\s*$/, \"\");\n\n          if (url == \"inline\") {\n            result.code += \"\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\" + to_base64(result.map);\n          } else {\n            result.code += \"\\n//# sourceMappingURL=\" + url;\n          }\n        }\n      }\n    }\n\n    if (options.nameCache && options.mangle) {\n      if (options.mangle.cache) options.nameCache.vars = to_json(options.mangle.cache);\n\n      if (options.mangle.properties && options.mangle.properties.cache) {\n        options.nameCache.props = to_json(options.mangle.properties.cache);\n      }\n    }\n\n    if (timings) {\n      timings.end = Date.now();\n      result.timings = {\n        parse: 1e-3 * (timings.rename - timings.parse),\n        rename: 1e-3 * (timings.compress - timings.rename),\n        compress: 1e-3 * (timings.scope - timings.compress),\n        scope: 1e-3 * (timings.mangle - timings.scope),\n        mangle: 1e-3 * (timings.properties - timings.mangle),\n        properties: 1e-3 * (timings.output - timings.properties),\n        output: 1e-3 * (timings.end - timings.output),\n        total: 1e-3 * (timings.end - timings.start)\n      };\n    }\n\n    if (warnings.length) {\n      result.warnings = warnings;\n    }\n\n    return result;\n  } catch (ex) {\n    return {\n      error: ex\n    };\n  } finally {\n    AST_Node.log_function();\n    AST_Node.disable_validation();\n  }\n}","map":{"version":3,"sources":["/home/harsha/Desktop/ug2 spring SEM2/DAss/mongo/frontend/node_modules/uglify-js/lib/minify.js"],"names":["to_ascii","to_base64","Buffer","atob","btoa","alloc","b64","toString","str","from","read_source_map","name","toplevel","comments","end","comments_after","i","length","comment","type","match","exec","value","AST_Node","warn","parse_source_map","content","JSON","parse","ex","Error","set_shorthand","options","keys","forEach","key","init_cache","cache","props","Dictionary","fromObject","to_json","toObject","minify","files","defaults","annotations","undefined","compress","enclose","ie","ie8","keep_fargs","keep_fnames","mangle","nameCache","output","rename","sourceMap","timings","v8","validate","warnings","webkit","wrap","enable_validation","start","Date","now","quoted_props","vars","eval","properties","reserved","keep_quoted","Array","isArray","filename","includeSources","names","root","url","log_function","warning","push","AST_Toplevel","source_map_content","orig","Object","create","HOP","inlined_content","reserve_quoted_keys","action","option","print_to_string","slice","file","replace","validate_ast","figure_out_scope","expand_names","Compressor","scope","compute_char_frequency","mangle_names","mangle_properties","result","ast","code","source_map","SourceMap","setSourceContent","stream","OutputStream","print","get","map","total","error","disable_validation"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar to_ascii, to_base64;\nif (typeof Buffer == \"undefined\") {\n    to_ascii = atob;\n    to_base64 = btoa;\n} else if (typeof Buffer.alloc == \"undefined\") {\n    to_ascii = function(b64) {\n        return new Buffer(b64, \"base64\").toString();\n    };\n    to_base64 = function(str) {\n        return new Buffer(str).toString(\"base64\");\n    };\n} else {\n    to_ascii = function(b64) {\n        return Buffer.from(b64, \"base64\").toString();\n    };\n    to_base64 = function(str) {\n        return Buffer.from(str).toString(\"base64\");\n    };\n}\n\nfunction read_source_map(name, toplevel) {\n    var comments = toplevel.end.comments_after;\n    for (var i = comments.length; --i >= 0;) {\n        var comment = comments[i];\n        if (comment.type != \"comment1\") break;\n        var match = /^# ([^\\s=]+)=(\\S+)\\s*$/.exec(comment.value);\n        if (!match) break;\n        if (match[1] == \"sourceMappingURL\") {\n            match = /^data:application\\/json(;.*?)?;base64,([^,]+)$/.exec(match[2]);\n            if (!match) break;\n            return to_ascii(match[2]);\n        }\n    }\n    AST_Node.warn(\"inline source map not found: {name}\", {\n        name: name,\n    });\n}\n\nfunction parse_source_map(content) {\n    try {\n        return JSON.parse(content);\n    } catch (ex) {\n        throw new Error(\"invalid input source map: \" + content);\n    }\n}\n\nfunction set_shorthand(name, options, keys) {\n    keys.forEach(function(key) {\n        if (options[key]) {\n            if (typeof options[key] != \"object\") options[key] = {};\n            if (!(name in options[key])) options[key][name] = options[name];\n        }\n    });\n}\n\nfunction init_cache(cache) {\n    if (!cache) return;\n    if (!(\"props\" in cache)) {\n        cache.props = new Dictionary();\n    } else if (!(cache.props instanceof Dictionary)) {\n        cache.props = Dictionary.fromObject(cache.props);\n    }\n}\n\nfunction to_json(cache) {\n    return {\n        props: cache.props.toObject()\n    };\n}\n\nfunction minify(files, options) {\n    try {\n        options = defaults(options, {\n            annotations: undefined,\n            compress: {},\n            enclose: false,\n            ie: false,\n            ie8: false,\n            keep_fargs: false,\n            keep_fnames: false,\n            mangle: {},\n            nameCache: null,\n            output: {},\n            parse: {},\n            rename: undefined,\n            sourceMap: false,\n            timings: false,\n            toplevel: false,\n            v8: false,\n            validate: false,\n            warnings: false,\n            webkit: false,\n            wrap: false,\n        }, true);\n        if (options.validate) AST_Node.enable_validation();\n        var timings = options.timings && { start: Date.now() };\n        if (options.rename === undefined) options.rename = options.compress && options.mangle;\n        if (options.annotations !== undefined) set_shorthand(\"annotations\", options, [ \"compress\", \"output\" ]);\n        if (options.ie8) options.ie = options.ie || options.ie8;\n        if (options.ie) set_shorthand(\"ie\", options, [ \"compress\", \"mangle\", \"output\" ]);\n        if (options.keep_fargs) set_shorthand(\"keep_fargs\", options, [ \"compress\", \"mangle\" ]);\n        if (options.keep_fnames) set_shorthand(\"keep_fnames\", options, [ \"compress\", \"mangle\" ]);\n        if (options.toplevel) set_shorthand(\"toplevel\", options, [ \"compress\", \"mangle\" ]);\n        if (options.v8) set_shorthand(\"v8\", options, [ \"mangle\", \"output\" ]);\n        if (options.webkit) set_shorthand(\"webkit\", options, [ \"compress\", \"mangle\", \"output\" ]);\n        var quoted_props;\n        if (options.mangle) {\n            options.mangle = defaults(options.mangle, {\n                cache: options.nameCache && (options.nameCache.vars || {}),\n                eval: false,\n                ie: false,\n                keep_fargs: false,\n                keep_fnames: false,\n                properties: false,\n                reserved: [],\n                toplevel: false,\n                v8: false,\n                webkit: false,\n            }, true);\n            if (options.mangle.properties) {\n                if (typeof options.mangle.properties != \"object\") {\n                    options.mangle.properties = {};\n                }\n                if (options.mangle.properties.keep_quoted) {\n                    quoted_props = options.mangle.properties.reserved;\n                    if (!Array.isArray(quoted_props)) quoted_props = [];\n                    options.mangle.properties.reserved = quoted_props;\n                }\n                if (options.nameCache && !(\"cache\" in options.mangle.properties)) {\n                    options.mangle.properties.cache = options.nameCache.props || {};\n                }\n            }\n            init_cache(options.mangle.cache);\n            init_cache(options.mangle.properties.cache);\n        }\n        if (options.sourceMap) {\n            options.sourceMap = defaults(options.sourceMap, {\n                content: null,\n                filename: null,\n                includeSources: false,\n                names: true,\n                root: null,\n                url: null,\n            }, true);\n        }\n        var warnings = [];\n        if (options.warnings) AST_Node.log_function(function(warning) {\n            warnings.push(warning);\n        }, options.warnings == \"verbose\");\n        if (timings) timings.parse = Date.now();\n        var toplevel;\n        if (files instanceof AST_Toplevel) {\n            toplevel = files;\n        } else {\n            if (typeof files == \"string\") {\n                files = [ files ];\n            }\n            options.parse = options.parse || {};\n            options.parse.toplevel = null;\n            var source_map_content = options.sourceMap && options.sourceMap.content;\n            if (typeof source_map_content == \"string\" && source_map_content != \"inline\") {\n                source_map_content = parse_source_map(source_map_content);\n            }\n            if (source_map_content) options.sourceMap.orig = Object.create(null);\n            for (var name in files) if (HOP(files, name)) {\n                options.parse.filename = name;\n                options.parse.toplevel = toplevel = parse(files[name], options.parse);\n                if (source_map_content == \"inline\") {\n                    var inlined_content = read_source_map(name, toplevel);\n                    if (inlined_content) {\n                        options.sourceMap.orig[name] = parse_source_map(inlined_content);\n                    }\n                } else if (source_map_content) {\n                    options.sourceMap.orig[name] = source_map_content;\n                }\n            }\n        }\n        if (quoted_props) {\n            reserve_quoted_keys(toplevel, quoted_props);\n        }\n        [ \"enclose\", \"wrap\" ].forEach(function(action) {\n            var option = options[action];\n            if (!option) return;\n            var orig = toplevel.print_to_string().slice(0, -1);\n            toplevel = toplevel[action](option);\n            files[toplevel.start.file] = toplevel.print_to_string().replace(orig, \"\");\n        });\n        if (options.validate) toplevel.validate_ast();\n        if (timings) timings.rename = Date.now();\n        if (options.rename) {\n            toplevel.figure_out_scope(options.mangle);\n            toplevel.expand_names(options.mangle);\n        }\n        if (timings) timings.compress = Date.now();\n        if (options.compress) {\n            toplevel = new Compressor(options.compress).compress(toplevel);\n            if (options.validate) toplevel.validate_ast();\n        }\n        if (timings) timings.scope = Date.now();\n        if (options.mangle) toplevel.figure_out_scope(options.mangle);\n        if (timings) timings.mangle = Date.now();\n        if (options.mangle) {\n            toplevel.compute_char_frequency(options.mangle);\n            toplevel.mangle_names(options.mangle);\n        }\n        if (timings) timings.properties = Date.now();\n        if (options.mangle && options.mangle.properties) mangle_properties(toplevel, options.mangle.properties);\n        if (timings) timings.output = Date.now();\n        var result = {};\n        var output = defaults(options.output, {\n            ast: false,\n            code: true,\n        });\n        if (output.ast) result.ast = toplevel;\n        if (output.code) {\n            if (options.sourceMap) {\n                output.source_map = SourceMap(options.sourceMap);\n                if (options.sourceMap.includeSources) {\n                    if (files instanceof AST_Toplevel) {\n                        throw new Error(\"original source content unavailable\");\n                    } else for (var name in files) if (HOP(files, name)) {\n                        output.source_map.setSourceContent(name, files[name]);\n                    }\n                }\n            }\n            delete output.ast;\n            delete output.code;\n            var stream = OutputStream(output);\n            toplevel.print(stream);\n            result.code = stream.get();\n            if (options.sourceMap) {\n                result.map = output.source_map.toString();\n                var url = options.sourceMap.url;\n                if (url) {\n                    result.code = result.code.replace(/\\n\\/\\/# sourceMappingURL=\\S+\\s*$/, \"\");\n                    if (url == \"inline\") {\n                        result.code += \"\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\" + to_base64(result.map);\n                    } else {\n                        result.code += \"\\n//# sourceMappingURL=\" + url;\n                    }\n                }\n            }\n        }\n        if (options.nameCache && options.mangle) {\n            if (options.mangle.cache) options.nameCache.vars = to_json(options.mangle.cache);\n            if (options.mangle.properties && options.mangle.properties.cache) {\n                options.nameCache.props = to_json(options.mangle.properties.cache);\n            }\n        }\n        if (timings) {\n            timings.end = Date.now();\n            result.timings = {\n                parse: 1e-3 * (timings.rename - timings.parse),\n                rename: 1e-3 * (timings.compress - timings.rename),\n                compress: 1e-3 * (timings.scope - timings.compress),\n                scope: 1e-3 * (timings.mangle - timings.scope),\n                mangle: 1e-3 * (timings.properties - timings.mangle),\n                properties: 1e-3 * (timings.output - timings.properties),\n                output: 1e-3 * (timings.end - timings.output),\n                total: 1e-3 * (timings.end - timings.start)\n            };\n        }\n        if (warnings.length) {\n            result.warnings = warnings;\n        }\n        return result;\n    } catch (ex) {\n        return { error: ex };\n    } finally {\n        AST_Node.log_function();\n        AST_Node.disable_validation();\n    }\n}\n"]},"metadata":{},"sourceType":"script"}