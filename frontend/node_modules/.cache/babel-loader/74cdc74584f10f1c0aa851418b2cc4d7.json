{"ast":null,"code":"var _jsxFileName = \"/home/harsha/Desktop/ug2 spring SEM2/DAss/mongo/assignment1/frontend/src/components/common/User_register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserRegister = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contactNumber, setContact] = useState(\" \");\n  const [age, setAge] = useState(\" \");\n  const [batch, setBatch] = useState(\" \");\n  const [date, setDate] = useState(null);\n\n  const onChangeUsername = event => {\n    setName(event.target.value);\n  };\n\n  const onChangeEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const onChangeContact = event => {\n    setContact(event.target.value);\n  };\n\n  const onChangeAge = event => {\n    setAge(event.target.value);\n  };\n\n  const onChangebatch = event => {\n    setBatch(event.target.value);\n  };\n\n  const resetInputs = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setContact(\"\");\n    setAge(\"\");\n    setBatch(\"\");\n    setDate(null);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const NUser = {\n      name: name,\n      email: email,\n      contactNumber: contactNumber,\n      age: age,\n      batch: batch,\n      date: Date.now()\n    };\n    axios.post(\"http://localhost:4000/user/userregister\", NUser).then(response => {\n      alert(\"Created\\t\" + response.data.name);\n      console.log(response.data);\n    });\n    resetInputs();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    align: \"center\",\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        variant: \"outlined\",\n        value: name,\n        onChange: onChangeUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        variant: \"outlined\",\n        value: email,\n        onChange: onChangeEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Contact Number\",\n        variant: \"outlined\",\n        value: contactNumber,\n        onChange: onChangeContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Age\",\n        variant: \"outlined\",\n        value: age,\n        onChange: onChangeAge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Batch\",\n        variant: \"outlined\",\n        value: batch,\n        onChange: onChangebatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: onSubmit,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserRegister, \"Md+fbUnknk0Y3DTPWMMq2bFS2ac=\");\n\n_c = UserRegister;\nexport default UserRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRegister\");","map":{"version":3,"sources":["/home/harsha/Desktop/ug2 spring SEM2/DAss/mongo/assignment1/frontend/src/components/common/User_register.js"],"names":["useState","axios","Grid","TextField","Button","UserRegister","props","name","setName","email","setEmail","contactNumber","setContact","age","setAge","batch","setBatch","date","setDate","onChangeUsername","event","target","value","onChangeEmail","onChangeContact","onChangeAge","onChangebatch","resetInputs","onSubmit","preventDefault","NUser","Date","now","post","then","response","alert","data","console","log"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\n\n\nconst UserRegister = (props) => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [contactNumber, setContact] = useState(\" \");\n    const [age, setAge] = useState(\" \");\n    const [batch, setBatch] = useState(\" \");\n    const [date, setDate] = useState(null);\n\n\n    const onChangeUsername = (event) => {\n        setName(event.target.value);\n    };\n\n    const onChangeEmail = (event) => {\n        setEmail(event.target.value);\n    };\n    const onChangeContact = (event) => {\n        setContact(event.target.value);\n    };\n    const onChangeAge = (event) => {\n        setAge(event.target.value);\n    };\n    const onChangebatch = (event) => {\n        setBatch(event.target.value);\n    };\n   \n\n    const resetInputs = () => {\n        setName(\"\");\n        setEmail(\"\");\n        setContact(\"\");\n        setAge(\"\");\n        setBatch(\"\");\n        setDate(null);\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n\n        const NUser = {\n            name: name,\n            email: email,\n            contactNumber: contactNumber,\n            age: age,\n            batch: batch,\n            date: Date.now(),\n        };\n\n        axios\n            .post(\"http://localhost:4000/user/userregister\", NUser)\n            .then((response) => {\n                alert(\"Created\\t\" + response.data.name);\n                console.log(response.data);\n            });\n\n        resetInputs();\n    };\n\n    return (\n        <Grid container align={\"center\"} spacing={3}>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Name\"\n                    variant=\"outlined\"\n                    value={name}\n                    onChange={onChangeUsername}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Email\"\n                    variant=\"outlined\"\n                    value={email}\n                    onChange={onChangeEmail}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Contact Number\"\n                    variant=\"outlined\"\n                    value={contactNumber}\n                    onChange={onChangeContact}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Age\"\n                    variant=\"outlined\"\n                    value={age}\n                    onChange={onChangeAge}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"Batch\"\n                    variant=\"outlined\"\n                    value={batch}\n                    onChange={onChangebatch}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Button variant=\"contained\" onClick={onSubmit}>\n                    Register\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default UserRegister;\n"]},"metadata":{},"sourceType":"module"}