{"ast":null,"code":"/*!\n * JSHint, by JSHint Community.\n *\n * Licensed under the same slightly modified MIT license that JSLint is.\n * It stops evil-doers everywhere.\n *\n * JSHint is a derivative work of JSLint:\n *\n *   Copyright (c) 2002 Douglas Crockford  (www.JSLint.com)\n *\n *   Permission is hereby granted, free of charge, to any person obtaining\n *   a copy of this software and associated documentation files (the \"Software\"),\n *   to deal in the Software without restriction, including without limitation\n *   the rights to use, copy, modify, merge, publish, distribute, sublicense,\n *   and/or sell copies of the Software, and to permit persons to whom\n *   the Software is furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included\n *   in all copies or substantial portions of the Software.\n *\n *   The Software shall be used for Good, not Evil.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n *   DEALINGS IN THE SOFTWARE.\n *\n * JSHint was forked from the 2010-12-16 edition of JSLint.\n *\n */\n\n/*\n JSHINT is a global function. It takes two parameters.\n\n     var myResult = JSHINT(source, option);\n\n The first parameter is either a string or an array of strings. If it is a\n string, it will be split on '\\n' or '\\r'. If it is an array of strings, it\n is assumed that each string represents one line. The source can be a\n JavaScript text or a JSON text.\n\n The second parameter is an optional object of options which control the\n operation of JSHINT. Most of the options are booleans: They are all\n optional and have a default value of false. One of the options, predef,\n can be an array of names, which will be used to declare global variables,\n or an object whose keys are used as global names, with a boolean value\n that determines if they are assignable.\n\n If it checks out, JSHINT returns true. Otherwise, it returns false.\n\n If false, you can inspect JSHINT.errors to find out the problems.\n JSHINT.errors is an array of objects containing these members:\n\n {\n     line      : The line (relative to 1) at which the lint was found\n     character : The character (relative to 1) at which the lint was found\n     reason    : The problem\n     evidence  : The text line in which the problem occurred\n     raw       : The raw message before the details were inserted\n     a         : The first detail\n     b         : The second detail\n     c         : The third detail\n     d         : The fourth detail\n }\n\n If a fatal error was found, a null will be the last element of the\n JSHINT.errors array.\n\n You can request a data structure which contains JSHint's results.\n\n     var myData = JSHINT.data();\n\n It returns a structure with this form:\n\n {\n     errors: [\n         {\n             line: NUMBER,\n             character: NUMBER,\n             reason: STRING,\n             evidence: STRING\n         }\n     ],\n     functions: [\n         name: STRING,\n         line: NUMBER,\n         character: NUMBER,\n         last: NUMBER,\n         lastcharacter: NUMBER,\n         param: [\n             STRING\n         ],\n         closure: [\n             STRING\n         ],\n         var: [\n             STRING\n         ],\n         exception: [\n             STRING\n         ],\n         outer: [\n             STRING\n         ],\n         unused: [\n             STRING\n         ],\n         global: [\n             STRING\n         ],\n         label: [\n             STRING\n         ]\n     ],\n     globals: [\n         STRING\n     ],\n     member: {\n         STRING: NUMBER\n     },\n     unused: [\n         {\n             name: STRING,\n             line: NUMBER\n         }\n     ],\n     implieds: [\n         {\n             name: STRING,\n             line: NUMBER\n         }\n     ],\n     urls: [\n         STRING\n     ],\n     json: BOOLEAN\n }\n\n Empty arrays will not be included.\n\n*/\n\n/*jshint\n evil: true, nomen: false, onevar: false, regexp: false, strict: true, boss: true,\n undef: true, maxlen: 100, indent: 4, quotmark: double, unused: true\n*/\n\n/*members \"\\b\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"!=\", \"!==\", \"\\\"\", \"%\", \"(begin)\",\n \"(breakage)\", \"(character)\", \"(context)\", \"(error)\", \"(explicitNewcap)\", \"(global)\",\n \"(identifier)\", \"(last)\", \"(lastcharacter)\", \"(line)\", \"(loopage)\", \"(metrics)\",\n \"(name)\", \"(onevar)\", \"(params)\", \"(scope)\", \"(statement)\", \"(verb)\", \"(tokens)\", \"(catch)\",\n \"*\", \"+\", \"++\", \"-\", \"--\", \"\\/\", \"<\", \"<=\", \"==\",\n \"===\", \">\", \">=\", $, $$, $A, $F, $H, $R, $break, $continue, $w, Abstract, Ajax,\n __filename, __dirname, ActiveXObject, Array, ArrayBuffer, ArrayBufferView, Audio,\n Autocompleter, Asset, Boolean, Builder, Buffer, Browser, Blob, COM, CScript, Canvas,\n CustomAnimation, Class, Control, ComplexityCount, Chain, Color, Cookie, Core, DataView, Date,\n Debug, Draggable, Draggables, Droppables, Document, DomReady, DOMEvent, DOMReady, DOMParser,\n Drag, E, Enumerator, Enumerable, Element, Elements, Error, Effect, EvalError, Event,\n Events, FadeAnimation, Field, Flash, Float32Array, Float64Array, Form,\n FormField, Frame, FormData, Function, Fx, GetObject, Group, Hash, HotKey,\n HTMLElement, HTMLAnchorElement, HTMLBaseElement, HTMLBlockquoteElement,\n HTMLBodyElement, HTMLBRElement, HTMLButtonElement, HTMLCanvasElement, HTMLDirectoryElement,\n HTMLDivElement, HTMLDListElement, HTMLFieldSetElement,\n HTMLFontElement, HTMLFormElement, HTMLFrameElement, HTMLFrameSetElement,\n HTMLHeadElement, HTMLHeadingElement, HTMLHRElement, HTMLHtmlElement,\n HTMLIFrameElement, HTMLImageElement, HTMLInputElement, HTMLIsIndexElement,\n HTMLLabelElement, HTMLLayerElement, HTMLLegendElement, HTMLLIElement,\n HTMLLinkElement, HTMLMapElement, HTMLMenuElement, HTMLMetaElement,\n HTMLModElement, HTMLObjectElement, HTMLOListElement, HTMLOptGroupElement,\n HTMLOptionElement, HTMLParagraphElement, HTMLParamElement, HTMLPreElement,\n HTMLQuoteElement, HTMLScriptElement, HTMLSelectElement, HTMLStyleElement,\n HtmlTable, HTMLTableCaptionElement, HTMLTableCellElement, HTMLTableColElement,\n HTMLTableElement, HTMLTableRowElement, HTMLTableSectionElement,\n HTMLTextAreaElement, HTMLTitleElement, HTMLUListElement, HTMLVideoElement,\n Iframe, IframeShim, Image, importScripts, Int16Array, Int32Array, Int8Array,\n Insertion, InputValidator, JSON, Keyboard, Locale, LN10, LN2, LOG10E, LOG2E,\n MAX_VALUE, MIN_VALUE, Map, Mask, Math, MenuItem, MessageChannel, MessageEvent, MessagePort,\n MoveAnimation, MooTools, MutationObserver, NaN, Native, NEGATIVE_INFINITY, Node, NodeFilter,\n Number, Object, ObjectRange,\n Option, Options, OverText, PI, POSITIVE_INFINITY, PeriodicalExecuter, Point, Position, Prototype,\n RangeError, Rectangle, ReferenceError, RegExp, ResizeAnimation, Request, RotateAnimation, Set,\n SQRT1_2, SQRT2, ScrollBar, ScriptEngine, ScriptEngineBuildVersion,\n ScriptEngineMajorVersion, ScriptEngineMinorVersion, Scriptaculous, Scroller,\n Slick, Slider, Selector, SharedWorker, String, Style, SyntaxError, Sortable, Sortables,\n SortableObserver, Sound, Spinner, System, Swiff, Text, TextArea, Template,\n Timer, Tips, Type, TypeError, Toggle, Try, \"use strict\", unescape, URI, URIError, URL,\n VBArray, WeakMap, WSH, WScript, XDomainRequest, Web, Window, XMLDOM, XMLHttpRequest, XMLSerializer,\n XPathEvaluator, XPathException, XPathExpression, XPathNamespace, XPathNSResolver, XPathResult,\n \"\\\\\", a, abs, addEventListener, address, alert, apply, applicationCache, arguments, arity,\n asi, atob, b, basic, basicToken, bitwise, blacklist, block, blur, boolOptions, boss,\n browser, btoa, c, call, callee, caller, camelcase, cases, charAt, charCodeAt, character,\n clearInterval, clearTimeout, close, closed, closure, comment, complexityCount, condition,\n confirm, console, constructor, content, couch, create, css, curly, d, data, datalist, dd, debug,\n decodeURI, decodeURIComponent, defaultStatus, defineClass, deserialize, devel, document,\n dojo, dijit, dojox, define, else, emit, encodeURI, encodeURIComponent, elem,\n eqeq, eqeqeq, eqnull, errors, es5, escape, esnext, eval, event, evidence, evil,\n ex, exception, exec, exps, expr, exports, FileReader, first, floor, focus, forEach,\n forin, fragment, frames, from, fromCharCode, fud, funcscope, funct, function, functions,\n g, gc, getComputedStyle, getRow, getter, getterToken, GLOBAL, global, globals, globalstrict,\n hasOwnProperty, help, history, i, id, identifier, immed, implieds, importPackage, include,\n indent, indexOf, init, ins, internals, instanceOf, isAlpha, isApplicationRunning, isArray,\n isDigit, isFinite, isNaN, iterator, java, join, jshint,\n JSHINT, json, jquery, jQuery, keys, label, labelled, last, lastcharacter, lastsemic, laxbreak,\n laxcomma, latedef, lbp, led, left, length, line, load, loadClass, localStorage, location,\n log, loopfunc, m, match, max, maxcomplexity, maxdepth, maxerr, maxlen, maxstatements, maxparams,\n member, message, meta, module, moveBy, moveTo, mootools, multistr, name, navigator, new, newcap,\n nestedBlockDepth, noarg, node, noempty, nomen, nonew, nonstandard, nud, onbeforeunload, onblur,\n onerror, onevar, onecase, onfocus, onload, onresize, onunload, open, openDatabase, openURL,\n opener, opera, options, outer, param, parent, parseFloat, parseInt, passfail, plusplus,\n postMessage, pop, predef, print, process, prompt, proto, prototype, prototypejs, provides, push,\n quit, quotmark, range, raw, reach, reason, regexp, readFile, readUrl, regexdash,\n removeEventListener, replace, report, require, reserved, resizeBy, resizeTo, resolvePath,\n resumeUpdates, respond, rhino, right, runCommand, scroll, scope, screen, scripturl, scrollBy,\n scrollTo, scrollbar, search, seal, self, send, serialize, sessionStorage, setInterval, setTimeout,\n setter, setterToken, shift, slice, smarttabs, sort, spawn, split, statement, statementCount, stack,\n status, start, strict, sub, substr, supernew, shadow, supplant, sum, sync, test, toLowerCase,\n toString, toUpperCase, toint32, token, tokens, top, trailing, type, typeOf, Uint16Array,\n Uint32Array, Uint8Array, undef, undefs, unused, urls, validthis, value, valueOf, var, vars,\n version, verifyMaxParametersPerFunction, verifyMaxStatementsPerFunction,\n verifyMaxComplexityPerFunction, verifyMaxNestedBlockDepthPerFunction, WebSocket, withstmt, white,\n window, windows, Worker, worker, wsh, yui, YUI, Y, YUI_config*/\n\n/*global exports: false */\n// We build the application inside a function so that we produce only a single\n// global variable. That function will be invoked immediately, and its return\n// value is the JSHINT function itself.\nvar JSHINT = function () {\n  \"use strict\";\n\n  var anonname,\n      // The guessed name for anonymous functions.\n  // These are operators that should not be used with the ! operator.\n  bang = {\n    \"<\": true,\n    \"<=\": true,\n    \"==\": true,\n    \"===\": true,\n    \"!==\": true,\n    \"!=\": true,\n    \">\": true,\n    \">=\": true,\n    \"+\": true,\n    \"-\": true,\n    \"*\": true,\n    \"/\": true,\n    \"%\": true\n  },\n      // These are the JSHint boolean options.\n  boolOptions = {\n    asi: true,\n    // if automatic semicolon insertion should be tolerated\n    bitwise: true,\n    // if bitwise operators should not be allowed\n    boss: true,\n    // if advanced usage of assignments should be allowed\n    browser: true,\n    // if the standard browser globals should be predefined\n    camelcase: true,\n    // if identifiers should be required in camel case\n    couch: true,\n    // if CouchDB globals should be predefined\n    curly: true,\n    // if curly braces around all blocks should be required\n    debug: true,\n    // if debugger statements should be allowed\n    devel: true,\n    // if logging globals should be predefined (console,\n    // alert, etc.)\n    dojo: true,\n    // if Dojo Toolkit globals should be predefined\n    eqeqeq: true,\n    // if === should be required\n    eqnull: true,\n    // if == null comparisons should be tolerated\n    es5: true,\n    // if ES5 syntax should be allowed\n    esnext: true,\n    // if es.next specific syntax should be allowed\n    evil: true,\n    // if eval should be allowed\n    expr: true,\n    // if ExpressionStatement should be allowed as Programs\n    forin: true,\n    // if for in statements must filter\n    funcscope: true,\n    // if only function scope should be used for scope tests\n    globalstrict: true,\n    // if global \"use strict\"; should be allowed (also\n    // enables 'strict')\n    immed: true,\n    // if immediate invocations must be wrapped in parens\n    iterator: true,\n    // if the `__iterator__` property should be allowed\n    jquery: true,\n    // if jQuery globals should be predefined\n    lastsemic: true,\n    // if semicolons may be ommitted for the trailing\n    // statements inside of a one-line blocks.\n    latedef: true,\n    // if the use before definition should not be tolerated\n    laxbreak: true,\n    // if line breaks should not be checked\n    laxcomma: true,\n    // if line breaks should not be checked around commas\n    loopfunc: true,\n    // if functions should be allowed to be defined within\n    // loops\n    mootools: true,\n    // if MooTools globals should be predefined\n    multistr: true,\n    // allow multiline strings\n    newcap: true,\n    // if constructor names must be capitalized\n    noarg: true,\n    // if arguments.caller and arguments.callee should be\n    // disallowed\n    node: true,\n    // if the Node.js environment globals should be\n    // predefined\n    noempty: true,\n    // if empty blocks should be disallowed\n    nonew: true,\n    // if using `new` for side-effects should be disallowed\n    nonstandard: true,\n    // if non-standard (but widely adopted) globals should\n    // be predefined\n    nomen: true,\n    // if names should be checked\n    onevar: true,\n    // if only one var statement per function should be\n    // allowed\n    onecase: true,\n    // if one case switch statements should be allowed\n    passfail: true,\n    // if the scan should stop on first error\n    plusplus: true,\n    // if increment/decrement should not be allowed\n    proto: true,\n    // if the `__proto__` property should be allowed\n    prototypejs: true,\n    // if Prototype and Scriptaculous globals should be\n    // predefined\n    regexdash: true,\n    // if unescaped first/last dash (-) inside brackets\n    // should be tolerated\n    regexp: true,\n    // if the . should not be allowed in regexp literals\n    rhino: true,\n    // if the Rhino environment globals should be predefined\n    undef: true,\n    // if variables should be declared before used\n    unused: true,\n    // if variables should be always used\n    scripturl: true,\n    // if script-targeted URLs should be tolerated\n    shadow: true,\n    // if variable shadowing should be tolerated\n    smarttabs: true,\n    // if smarttabs should be tolerated\n    // (http://www.emacswiki.org/emacs/SmartTabs)\n    strict: true,\n    // require the \"use strict\"; pragma\n    sub: true,\n    // if all forms of subscript notation are tolerated\n    supernew: true,\n    // if `new function () { ... };` and `new Object;`\n    // should be tolerated\n    trailing: true,\n    // if trailing whitespace rules apply\n    validthis: true,\n    // if 'this' inside a non-constructor function is valid.\n    // This is a function scoped option only.\n    withstmt: true,\n    // if with statements should be allowed\n    white: true,\n    // if strict whitespace rules apply\n    worker: true,\n    // if Web Worker script symbols should be allowed\n    wsh: true,\n    // if the Windows Scripting Host environment globals\n    // should be predefined\n    yui: true // YUI variables should be predefined\n\n  },\n      // These are the JSHint options that can take any value\n  // (we use this object to detect invalid options)\n  valOptions = {\n    maxlen: false,\n    indent: false,\n    maxerr: false,\n    predef: false,\n    quotmark: false,\n    //'single'|'double'|true\n    scope: false,\n    maxstatements: false,\n    // {int} max statements per function\n    maxdepth: false,\n    // {int} max nested block depth per function\n    maxparams: false,\n    // {int} max params per function\n    maxcomplexity: false // {int} max cyclomatic complexity per function\n\n  },\n      // These are JSHint boolean options which are shared with JSLint\n  // where the definition in JSHint is opposite JSLint\n  invertedOptions = {\n    bitwise: true,\n    forin: true,\n    newcap: true,\n    nomen: true,\n    plusplus: true,\n    regexp: true,\n    undef: true,\n    white: true,\n    // Inverted and renamed, use JSHint name here\n    eqeqeq: true,\n    onevar: true\n  },\n      // These are JSHint boolean options which are shared with JSLint\n  // where the name has been changed but the effect is unchanged\n  renamedOptions = {\n    eqeq: \"eqeqeq\",\n    vars: \"onevar\",\n    windows: \"wsh\"\n  },\n      // browser contains a set of global names which are commonly provided by a\n  // web browser environment.\n  browser = {\n    ArrayBuffer: false,\n    ArrayBufferView: false,\n    Audio: false,\n    Blob: false,\n    addEventListener: false,\n    applicationCache: false,\n    atob: false,\n    blur: false,\n    btoa: false,\n    clearInterval: false,\n    clearTimeout: false,\n    close: false,\n    closed: false,\n    DataView: false,\n    DOMParser: false,\n    defaultStatus: false,\n    document: false,\n    event: false,\n    FileReader: false,\n    Float32Array: false,\n    Float64Array: false,\n    FormData: false,\n    focus: false,\n    frames: false,\n    getComputedStyle: false,\n    HTMLElement: false,\n    HTMLAnchorElement: false,\n    HTMLBaseElement: false,\n    HTMLBlockquoteElement: false,\n    HTMLBodyElement: false,\n    HTMLBRElement: false,\n    HTMLButtonElement: false,\n    HTMLCanvasElement: false,\n    HTMLDirectoryElement: false,\n    HTMLDivElement: false,\n    HTMLDListElement: false,\n    HTMLFieldSetElement: false,\n    HTMLFontElement: false,\n    HTMLFormElement: false,\n    HTMLFrameElement: false,\n    HTMLFrameSetElement: false,\n    HTMLHeadElement: false,\n    HTMLHeadingElement: false,\n    HTMLHRElement: false,\n    HTMLHtmlElement: false,\n    HTMLIFrameElement: false,\n    HTMLImageElement: false,\n    HTMLInputElement: false,\n    HTMLIsIndexElement: false,\n    HTMLLabelElement: false,\n    HTMLLayerElement: false,\n    HTMLLegendElement: false,\n    HTMLLIElement: false,\n    HTMLLinkElement: false,\n    HTMLMapElement: false,\n    HTMLMenuElement: false,\n    HTMLMetaElement: false,\n    HTMLModElement: false,\n    HTMLObjectElement: false,\n    HTMLOListElement: false,\n    HTMLOptGroupElement: false,\n    HTMLOptionElement: false,\n    HTMLParagraphElement: false,\n    HTMLParamElement: false,\n    HTMLPreElement: false,\n    HTMLQuoteElement: false,\n    HTMLScriptElement: false,\n    HTMLSelectElement: false,\n    HTMLStyleElement: false,\n    HTMLTableCaptionElement: false,\n    HTMLTableCellElement: false,\n    HTMLTableColElement: false,\n    HTMLTableElement: false,\n    HTMLTableRowElement: false,\n    HTMLTableSectionElement: false,\n    HTMLTextAreaElement: false,\n    HTMLTitleElement: false,\n    HTMLUListElement: false,\n    HTMLVideoElement: false,\n    history: false,\n    Int16Array: false,\n    Int32Array: false,\n    Int8Array: false,\n    Image: false,\n    length: false,\n    localStorage: false,\n    location: false,\n    MessageChannel: false,\n    MessageEvent: false,\n    MessagePort: false,\n    moveBy: false,\n    moveTo: false,\n    MutationObserver: false,\n    name: false,\n    Node: false,\n    NodeFilter: false,\n    navigator: false,\n    onbeforeunload: true,\n    onblur: true,\n    onerror: true,\n    onfocus: true,\n    onload: true,\n    onresize: true,\n    onunload: true,\n    open: false,\n    openDatabase: false,\n    opener: false,\n    Option: false,\n    parent: false,\n    print: false,\n    removeEventListener: false,\n    resizeBy: false,\n    resizeTo: false,\n    screen: false,\n    scroll: false,\n    scrollBy: false,\n    scrollTo: false,\n    sessionStorage: false,\n    setInterval: false,\n    setTimeout: false,\n    SharedWorker: false,\n    status: false,\n    top: false,\n    Uint16Array: false,\n    Uint32Array: false,\n    Uint8Array: false,\n    WebSocket: false,\n    window: false,\n    Worker: false,\n    XMLHttpRequest: false,\n    XMLSerializer: false,\n    XPathEvaluator: false,\n    XPathException: false,\n    XPathExpression: false,\n    XPathNamespace: false,\n    XPathNSResolver: false,\n    XPathResult: false\n  },\n      couch = {\n    \"require\": false,\n    respond: false,\n    getRow: false,\n    emit: false,\n    send: false,\n    start: false,\n    sum: false,\n    log: false,\n    exports: false,\n    module: false,\n    provides: false\n  },\n      declared,\n      // Globals that were declared using /*global ... */ syntax.\n  devel = {\n    alert: false,\n    confirm: false,\n    console: false,\n    Debug: false,\n    opera: false,\n    prompt: false\n  },\n      dojo = {\n    dojo: false,\n    dijit: false,\n    dojox: false,\n    define: false,\n    \"require\": false\n  },\n      funct,\n      // The current function\n  functionicity = [\"closure\", \"exception\", \"global\", \"label\", \"outer\", \"unused\", \"var\"],\n      functions,\n      // All of the functions\n  global,\n      // The global scope\n  implied,\n      // Implied globals\n  inblock,\n      indent,\n      jsonmode,\n      jquery = {\n    \"$\": false,\n    jQuery: false\n  },\n      lines,\n      lookahead,\n      member,\n      membersOnly,\n      mootools = {\n    \"$\": false,\n    \"$$\": false,\n    Asset: false,\n    Browser: false,\n    Chain: false,\n    Class: false,\n    Color: false,\n    Cookie: false,\n    Core: false,\n    Document: false,\n    DomReady: false,\n    DOMEvent: false,\n    DOMReady: false,\n    Drag: false,\n    Element: false,\n    Elements: false,\n    Event: false,\n    Events: false,\n    Fx: false,\n    Group: false,\n    Hash: false,\n    HtmlTable: false,\n    Iframe: false,\n    IframeShim: false,\n    InputValidator: false,\n    instanceOf: false,\n    Keyboard: false,\n    Locale: false,\n    Mask: false,\n    MooTools: false,\n    Native: false,\n    Options: false,\n    OverText: false,\n    Request: false,\n    Scroller: false,\n    Slick: false,\n    Slider: false,\n    Sortables: false,\n    Spinner: false,\n    Swiff: false,\n    Tips: false,\n    Type: false,\n    typeOf: false,\n    URI: false,\n    Window: false\n  },\n      nexttoken,\n      node = {\n    __filename: false,\n    __dirname: false,\n    Buffer: false,\n    console: false,\n    exports: true,\n    // In Node it is ok to exports = module.exports = foo();\n    GLOBAL: false,\n    global: false,\n    module: false,\n    process: false,\n    require: false,\n    setTimeout: false,\n    clearTimeout: false,\n    setInterval: false,\n    clearInterval: false\n  },\n      noreach,\n      option,\n      predefined,\n      // Global variables defined by option\n  prereg,\n      prevtoken,\n      prototypejs = {\n    \"$\": false,\n    \"$$\": false,\n    \"$A\": false,\n    \"$F\": false,\n    \"$H\": false,\n    \"$R\": false,\n    \"$break\": false,\n    \"$continue\": false,\n    \"$w\": false,\n    Abstract: false,\n    Ajax: false,\n    Class: false,\n    Enumerable: false,\n    Element: false,\n    Event: false,\n    Field: false,\n    Form: false,\n    Hash: false,\n    Insertion: false,\n    ObjectRange: false,\n    PeriodicalExecuter: false,\n    Position: false,\n    Prototype: false,\n    Selector: false,\n    Template: false,\n    Toggle: false,\n    Try: false,\n    Autocompleter: false,\n    Builder: false,\n    Control: false,\n    Draggable: false,\n    Draggables: false,\n    Droppables: false,\n    Effect: false,\n    Sortable: false,\n    SortableObserver: false,\n    Sound: false,\n    Scriptaculous: false\n  },\n      quotmark,\n      rhino = {\n    defineClass: false,\n    deserialize: false,\n    gc: false,\n    help: false,\n    importPackage: false,\n    \"java\": false,\n    load: false,\n    loadClass: false,\n    print: false,\n    quit: false,\n    readFile: false,\n    readUrl: false,\n    runCommand: false,\n    seal: false,\n    serialize: false,\n    spawn: false,\n    sync: false,\n    toint32: false,\n    version: false\n  },\n      scope,\n      // The current scope\n  stack,\n      // standard contains the global names that are provided by the\n  // ECMAScript standard.\n  standard = {\n    Array: false,\n    Boolean: false,\n    Date: false,\n    decodeURI: false,\n    decodeURIComponent: false,\n    encodeURI: false,\n    encodeURIComponent: false,\n    Error: false,\n    \"eval\": false,\n    EvalError: false,\n    Function: false,\n    hasOwnProperty: false,\n    isFinite: false,\n    isNaN: false,\n    JSON: false,\n    Map: false,\n    Math: false,\n    NaN: false,\n    Number: false,\n    Object: false,\n    parseInt: false,\n    parseFloat: false,\n    RangeError: false,\n    ReferenceError: false,\n    RegExp: false,\n    Set: false,\n    String: false,\n    SyntaxError: false,\n    TypeError: false,\n    URIError: false,\n    WeakMap: false\n  },\n      // widely adopted global names that are not part of ECMAScript standard\n  nonstandard = {\n    escape: false,\n    unescape: false\n  },\n      directive,\n      syntax = {},\n      tab,\n      token,\n      unuseds,\n      urls,\n      useESNextSyntax,\n      warnings,\n      worker = {\n    importScripts: true,\n    postMessage: true,\n    self: true\n  },\n      wsh = {\n    ActiveXObject: true,\n    Enumerator: true,\n    GetObject: true,\n    ScriptEngine: true,\n    ScriptEngineBuildVersion: true,\n    ScriptEngineMajorVersion: true,\n    ScriptEngineMinorVersion: true,\n    VBArray: true,\n    WSH: true,\n    WScript: true,\n    XDomainRequest: true\n  },\n      yui = {\n    YUI: false,\n    Y: false,\n    YUI_config: false\n  }; // Regular expressions. Some of these are stupidly long.\n\n  var ax, cx, tx, nx, nxg, lx, ix, jx, ft;\n\n  (function () {\n    /*jshint maxlen:300 */\n    // unsafe comment or string\n    ax = /@cc|<\\/?|script|\\]\\s*\\]|<\\s*!|&lt/i; // unsafe characters that are silently deleted by one or more browsers\n\n    cx = /[\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/; // token\n\n    tx = /^\\s*([(){}\\[.,:;'\"~\\?\\]#@]|==?=?|\\/=(?!(\\S*\\/[gim]?))|\\/(\\*(jshint|jslint|members?|global)?|\\/)?|\\*[\\/=]?|\\+(?:=|\\++)?|-(?:=|-+)?|%=?|&[&=]?|\\|[|=]?|>>?>?=?|<([\\/=!]|\\!(\\[|--)?|<=?)?|\\^=?|\\!=?=?|[a-zA-Z_$][a-zA-Z0-9_$]*|[0-9]+([xX][0-9a-fA-F]+|\\.[0-9]*)?([eE][+\\-]?[0-9]+)?)/; // characters in strings that need escapement\n\n    nx = /[\\u0000-\\u001f&<\"\\/\\\\\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/;\n    nxg = /[\\u0000-\\u001f&<\"\\/\\\\\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g; // star slash\n\n    lx = /\\*\\//; // identifier\n\n    ix = /^([a-zA-Z_$][a-zA-Z0-9_$]*)$/; // javascript url\n\n    jx = /^(?:javascript|jscript|ecmascript|vbscript|mocha|livescript)\\s*:/i; // catches /* falls through */ comments\n\n    ft = /^\\s*\\/\\*\\s*falls\\sthrough\\s*\\*\\/\\s*$/;\n  })();\n\n  function F() {} // Used by Object.create\n\n\n  function is_own(object, name) {\n    // The object.hasOwnProperty method fails when the property under consideration\n    // is named 'hasOwnProperty'. So we have to use this more convoluted form.\n    return Object.prototype.hasOwnProperty.call(object, name);\n  }\n\n  function checkOption(name, t) {\n    if (valOptions[name] === undefined && boolOptions[name] === undefined) {\n      warning(\"Bad option: '\" + name + \"'.\", t);\n    }\n  }\n\n  function isString(obj) {\n    return Object.prototype.toString.call(obj) === \"[object String]\";\n  } // Provide critical ES5 functions to ES3.\n\n\n  if (typeof Array.isArray !== \"function\") {\n    Array.isArray = function (o) {\n      return Object.prototype.toString.apply(o) === \"[object Array]\";\n    };\n  }\n\n  if (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (fn, scope) {\n      var len = this.length;\n\n      for (var i = 0; i < len; i++) {\n        fn.call(scope || this, this[i], i, this);\n      }\n    };\n  }\n\n  if (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (searchElement\n    /*, fromIndex */\n    ) {\n      if (this === null || this === undefined) {\n        throw new TypeError();\n      }\n\n      var t = new Object(this);\n      var len = t.length >>> 0;\n\n      if (len === 0) {\n        return -1;\n      }\n\n      var n = 0;\n\n      if (arguments.length > 0) {\n        n = Number(arguments[1]);\n\n        if (n != n) {\n          // shortcut for verifying if it's NaN\n          n = 0;\n        } else if (n !== 0 && n != Infinity && n != -Infinity) {\n          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n        }\n      }\n\n      if (n >= len) {\n        return -1;\n      }\n\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n\n      for (; k < len; k++) {\n        if (k in t && t[k] === searchElement) {\n          return k;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  if (typeof Object.create !== \"function\") {\n    Object.create = function (o) {\n      F.prototype = o;\n      return new F();\n    };\n  }\n\n  if (typeof Object.keys !== \"function\") {\n    Object.keys = function (o) {\n      var a = [],\n          k;\n\n      for (k in o) {\n        if (is_own(o, k)) {\n          a.push(k);\n        }\n      }\n\n      return a;\n    };\n  } // Non standard methods\n\n\n  function isAlpha(str) {\n    return str >= \"a\" && str <= \"z\\uffff\" || str >= \"A\" && str <= \"Z\\uffff\";\n  }\n\n  function isDigit(str) {\n    return str >= \"0\" && str <= \"9\";\n  }\n\n  function isIdentifier(token, value) {\n    if (!token) return false;\n    if (!token.identifier || token.value !== value) return false;\n    return true;\n  }\n\n  function supplant(str, data) {\n    return str.replace(/\\{([^{}]*)\\}/g, function (a, b) {\n      var r = data[b];\n      return typeof r === \"string\" || typeof r === \"number\" ? r : a;\n    });\n  }\n\n  function combine(t, o) {\n    var n;\n\n    for (n in o) {\n      if (is_own(o, n) && !is_own(JSHINT.blacklist, n)) {\n        t[n] = o[n];\n      }\n    }\n  }\n\n  function updatePredefined() {\n    Object.keys(JSHINT.blacklist).forEach(function (key) {\n      delete predefined[key];\n    });\n  }\n\n  function assume() {\n    if (option.couch) {\n      combine(predefined, couch);\n    }\n\n    if (option.rhino) {\n      combine(predefined, rhino);\n    }\n\n    if (option.prototypejs) {\n      combine(predefined, prototypejs);\n    }\n\n    if (option.node) {\n      combine(predefined, node);\n      option.globalstrict = true;\n    }\n\n    if (option.devel) {\n      combine(predefined, devel);\n    }\n\n    if (option.dojo) {\n      combine(predefined, dojo);\n    }\n\n    if (option.browser) {\n      combine(predefined, browser);\n    }\n\n    if (option.nonstandard) {\n      combine(predefined, nonstandard);\n    }\n\n    if (option.jquery) {\n      combine(predefined, jquery);\n    }\n\n    if (option.mootools) {\n      combine(predefined, mootools);\n    }\n\n    if (option.worker) {\n      combine(predefined, worker);\n    }\n\n    if (option.wsh) {\n      combine(predefined, wsh);\n    }\n\n    if (option.esnext) {\n      useESNextSyntax();\n    }\n\n    if (option.globalstrict && option.strict !== false) {\n      option.strict = true;\n    }\n\n    if (option.yui) {\n      combine(predefined, yui);\n    }\n  } // Produce an error warning.\n\n\n  function quit(message, line, chr) {\n    var percentage = Math.floor(line / lines.length * 100);\n    throw {\n      name: \"JSHintError\",\n      line: line,\n      character: chr,\n      message: message + \" (\" + percentage + \"% scanned).\",\n      raw: message\n    };\n  }\n\n  function isundef(scope, m, t, a) {\n    return JSHINT.undefs.push([scope, m, t, a]);\n  }\n\n  function warning(m, t, a, b, c, d) {\n    var ch, l, w;\n    t = t || nexttoken;\n\n    if (t.id === \"(end)\") {\n      // `~\n      t = token;\n    }\n\n    l = t.line || 0;\n    ch = t.from || 0;\n    w = {\n      id: \"(error)\",\n      raw: m,\n      evidence: lines[l - 1] || \"\",\n      line: l,\n      character: ch,\n      scope: JSHINT.scope,\n      a: a,\n      b: b,\n      c: c,\n      d: d\n    };\n    w.reason = supplant(m, w);\n    JSHINT.errors.push(w);\n\n    if (option.passfail) {\n      quit(\"Stopping. \", l, ch);\n    }\n\n    warnings += 1;\n\n    if (warnings >= option.maxerr) {\n      quit(\"Too many errors.\", l, ch);\n    }\n\n    return w;\n  }\n\n  function warningAt(m, l, ch, a, b, c, d) {\n    return warning(m, {\n      line: l,\n      from: ch\n    }, a, b, c, d);\n  }\n\n  function error(m, t, a, b, c, d) {\n    warning(m, t, a, b, c, d);\n  }\n\n  function errorAt(m, l, ch, a, b, c, d) {\n    return error(m, {\n      line: l,\n      from: ch\n    }, a, b, c, d);\n  } // Tracking of \"internal\" scripts, like eval containing a static string\n\n\n  function addInternalSrc(elem, src) {\n    var i;\n    i = {\n      id: \"(internal)\",\n      elem: elem,\n      value: src\n    };\n    JSHINT.internals.push(i);\n    return i;\n  } // lexical analysis and token construction\n\n\n  var lex = function lex() {\n    var character, from, line, s; // Private lex methods\n\n    function nextLine() {\n      var at, match, tw; // trailing whitespace check\n\n      if (line >= lines.length) return false;\n      character = 1;\n      s = lines[line];\n      line += 1; // If smarttabs option is used check for spaces followed by tabs only.\n      // Otherwise check for any occurence of mixed tabs and spaces.\n      // Tabs and one space followed by block comment is allowed.\n\n      if (option.smarttabs) {\n        // negative look-behind for \"//\"\n        match = s.match(/(\\/\\/)? \\t/);\n        at = match && !match[1] ? 0 : -1;\n      } else {\n        at = s.search(/ \\t|\\t [^\\*]/);\n      }\n\n      if (at >= 0) warningAt(\"Mixed spaces and tabs.\", line, at + 1);\n      s = s.replace(/\\t/g, tab);\n      at = s.search(cx);\n      if (at >= 0) warningAt(\"Unsafe character.\", line, at);\n      if (option.maxlen && option.maxlen < s.length) warningAt(\"Line too long.\", line, s.length); // Check for trailing whitespaces\n\n      tw = option.trailing && s.match(/^(.*?)\\s+$/);\n\n      if (tw && !/^\\s+$/.test(s)) {\n        warningAt(\"Trailing whitespace.\", line, tw[1].length + 1);\n      }\n\n      return true;\n    } // Produce a token object.  The token inherits from a syntax symbol.\n\n\n    function it(type, value) {\n      var i, t;\n\n      function checkName(name) {\n        if (!option.proto && name === \"__proto__\") {\n          warningAt(\"The '{a}' property is deprecated.\", line, from, name);\n          return;\n        }\n\n        if (!option.iterator && name === \"__iterator__\") {\n          warningAt(\"'{a}' is only available in JavaScript 1.7.\", line, from, name);\n          return;\n        } // Check for dangling underscores unless we're in Node\n        // environment and this identifier represents built-in\n        // Node globals with underscores.\n\n\n        var hasDangling = /^(_+.*|.*_+)$/.test(name);\n\n        if (option.nomen && hasDangling && name !== \"_\") {\n          if (option.node && token.id !== \".\" && /^(__dirname|__filename)$/.test(name)) return;\n          warningAt(\"Unexpected {a} in '{b}'.\", line, from, \"dangling '_'\", name);\n          return;\n        } // Check for non-camelcase names. Names like MY_VAR and\n        // _myVar are okay though.\n\n\n        if (option.camelcase) {\n          if (name.replace(/^_+/, \"\").indexOf(\"_\") > -1 && !name.match(/^[A-Z0-9_]*$/)) {\n            warningAt(\"Identifier '{a}' is not in camel case.\", line, from, value);\n          }\n        }\n      }\n\n      if (type === \"(color)\" || type === \"(range)\") {\n        t = {\n          type: type\n        };\n      } else if (type === \"(punctuator)\" || type === \"(identifier)\" && is_own(syntax, value)) {\n        t = syntax[value] || syntax[\"(error)\"];\n      } else {\n        t = syntax[type];\n      }\n\n      t = Object.create(t);\n\n      if (type === \"(string)\" || type === \"(range)\") {\n        if (!option.scripturl && jx.test(value)) {\n          warningAt(\"Script URL.\", line, from);\n        }\n      }\n\n      if (type === \"(identifier)\") {\n        t.identifier = true;\n        checkName(value);\n      }\n\n      t.value = value;\n      t.line = line;\n      t.character = character;\n      t.from = from;\n      i = t.id;\n\n      if (i !== \"(endline)\") {\n        prereg = i && (\"(,=:[!&|?{};\".indexOf(i.charAt(i.length - 1)) >= 0 || i === \"return\" || i === \"case\");\n      }\n\n      return t;\n    } // Public lex methods\n\n\n    return {\n      init: function (source) {\n        if (typeof source === \"string\") {\n          lines = source.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\").split(\"\\n\");\n        } else {\n          lines = source;\n        } // If the first line is a shebang (#!), make it a blank and move on.\n        // Shebangs are used by Node scripts.\n\n\n        if (lines[0] && lines[0].substr(0, 2) === \"#!\") lines[0] = \"\";\n        line = 0;\n        nextLine();\n        from = 1;\n      },\n      range: function (begin, end) {\n        var c,\n            value = \"\";\n        from = character;\n\n        if (s.charAt(0) !== begin) {\n          errorAt(\"Expected '{a}' and instead saw '{b}'.\", line, character, begin, s.charAt(0));\n        }\n\n        for (;;) {\n          s = s.slice(1);\n          character += 1;\n          c = s.charAt(0);\n\n          switch (c) {\n            case \"\":\n              errorAt(\"Missing '{a}'.\", line, character, c);\n              break;\n\n            case end:\n              s = s.slice(1);\n              character += 1;\n              return it(\"(range)\", value);\n\n            case \"\\\\\":\n              warningAt(\"Unexpected '{a}'.\", line, character, c);\n          }\n\n          value += c;\n        }\n      },\n      // token -- this is called by advance to get the next token\n      token: function () {\n        var b, c, captures, d, depth, high, i, l, low, q, t, isLiteral, isInRange, n;\n\n        function match(x) {\n          var r = x.exec(s),\n              r1;\n\n          if (r) {\n            l = r[0].length;\n            r1 = r[1];\n            c = r1.charAt(0);\n            s = s.substr(l);\n            from = character + l - r1.length;\n            character += l;\n            return r1;\n          }\n        }\n\n        function string(x) {\n          var c,\n              j,\n              r = \"\",\n              allowNewLine = false;\n\n          if (jsonmode && x !== \"\\\"\") {\n            warningAt(\"Strings must use doublequote.\", line, character);\n          }\n\n          if (option.quotmark) {\n            if (option.quotmark === \"single\" && x !== \"'\") {\n              warningAt(\"Strings must use singlequote.\", line, character);\n            } else if (option.quotmark === \"double\" && x !== \"\\\"\") {\n              warningAt(\"Strings must use doublequote.\", line, character);\n            } else if (option.quotmark === true) {\n              quotmark = quotmark || x;\n\n              if (quotmark !== x) {\n                warningAt(\"Mixed double and single quotes.\", line, character);\n              }\n            }\n          }\n\n          function esc(n) {\n            var i = parseInt(s.substr(j + 1, n), 16);\n            j += n;\n\n            if (i >= 32 && i <= 126 && i !== 34 && i !== 92 && i !== 39) {\n              warningAt(\"Unnecessary escapement.\", line, character);\n            }\n\n            character += n;\n            c = String.fromCharCode(i);\n          }\n\n          j = 0;\n\n          unclosedString: for (;;) {\n            while (j >= s.length) {\n              j = 0;\n              var cl = line,\n                  cf = from;\n\n              if (!nextLine()) {\n                errorAt(\"Unclosed string.\", cl, cf);\n                break unclosedString;\n              }\n\n              if (allowNewLine) {\n                allowNewLine = false;\n              } else {\n                warningAt(\"Unclosed string.\", cl, cf);\n              }\n            }\n\n            c = s.charAt(j);\n\n            if (c === x) {\n              character += 1;\n              s = s.substr(j + 1);\n              return it(\"(string)\", r, x);\n            }\n\n            if (c < \" \") {\n              if (c === \"\\n\" || c === \"\\r\") {\n                break;\n              }\n\n              warningAt(\"Control character in string: {a}.\", line, character + j, s.slice(0, j));\n            } else if (c === \"\\\\\") {\n              j += 1;\n              character += 1;\n              c = s.charAt(j);\n              n = s.charAt(j + 1);\n\n              switch (c) {\n                case \"\\\\\":\n                case \"\\\"\":\n                case \"/\":\n                  break;\n\n                case \"\\'\":\n                  if (jsonmode) {\n                    warningAt(\"Avoid \\\\'.\", line, character);\n                  }\n\n                  break;\n\n                case \"b\":\n                  c = \"\\b\";\n                  break;\n\n                case \"f\":\n                  c = \"\\f\";\n                  break;\n\n                case \"n\":\n                  c = \"\\n\";\n                  break;\n\n                case \"r\":\n                  c = \"\\r\";\n                  break;\n\n                case \"t\":\n                  c = \"\\t\";\n                  break;\n\n                case \"0\":\n                  c = \"\\0\"; // Octal literals fail in strict mode\n                  // check if the number is between 00 and 07\n                  // where 'n' is the token next to 'c'\n\n                  if (n >= 0 && n <= 7 && directive[\"use strict\"]) {\n                    warningAt(\"Octal literals are not allowed in strict mode.\", line, character);\n                  }\n\n                  break;\n\n                case \"u\":\n                  esc(4);\n                  break;\n\n                case \"v\":\n                  if (jsonmode) {\n                    warningAt(\"Avoid \\\\v.\", line, character);\n                  }\n\n                  c = \"\\v\";\n                  break;\n\n                case \"x\":\n                  if (jsonmode) {\n                    warningAt(\"Avoid \\\\x-.\", line, character);\n                  }\n\n                  esc(2);\n                  break;\n\n                case \"\":\n                  // last character is escape character\n                  // always allow new line if escaped, but show\n                  // warning if option is not set\n                  allowNewLine = true;\n\n                  if (option.multistr) {\n                    if (jsonmode) {\n                      warningAt(\"Avoid EOL escapement.\", line, character);\n                    }\n\n                    c = \"\";\n                    character -= 1;\n                    break;\n                  }\n\n                  warningAt(\"Bad escapement of EOL. Use option multistr if needed.\", line, character);\n                  break;\n\n                case \"!\":\n                  if (s.charAt(j - 2) === \"<\") break;\n\n                /*falls through*/\n\n                default:\n                  warningAt(\"Bad escapement.\", line, character);\n              }\n            }\n\n            r += c;\n            character += 1;\n            j += 1;\n          }\n        }\n\n        for (;;) {\n          if (!s) {\n            return it(nextLine() ? \"(endline)\" : \"(end)\", \"\");\n          }\n\n          t = match(tx);\n\n          if (!t) {\n            t = \"\";\n            c = \"\";\n\n            while (s && s < \"!\") {\n              s = s.substr(1);\n            }\n\n            if (s) {\n              errorAt(\"Unexpected '{a}'.\", line, character, s.substr(0, 1));\n              s = \"\";\n            }\n          } else {\n            //      identifier\n            if (isAlpha(c) || c === \"_\" || c === \"$\") {\n              return it(\"(identifier)\", t);\n            } //      number\n\n\n            if (isDigit(c)) {\n              if (!isFinite(Number(t))) {\n                warningAt(\"Bad number '{a}'.\", line, character, t);\n              }\n\n              if (isAlpha(s.substr(0, 1))) {\n                warningAt(\"Missing space after '{a}'.\", line, character, t);\n              }\n\n              if (c === \"0\") {\n                d = t.substr(1, 1);\n\n                if (isDigit(d)) {\n                  if (token.id !== \".\") {\n                    warningAt(\"Don't use extra leading zeros '{a}'.\", line, character, t);\n                  }\n                } else if (jsonmode && (d === \"x\" || d === \"X\")) {\n                  warningAt(\"Avoid 0x-. '{a}'.\", line, character, t);\n                }\n              }\n\n              if (t.substr(t.length - 1) === \".\") {\n                warningAt(\"A trailing decimal point can be confused with a dot '{a}'.\", line, character, t);\n              }\n\n              return it(\"(number)\", t);\n            }\n\n            switch (t) {\n              //      string\n              case \"\\\"\":\n              case \"'\":\n                return string(t);\n              //      // comment\n\n              case \"//\":\n                s = \"\";\n                token.comment = true;\n                break;\n              //      /* comment\n\n              case \"/*\":\n                for (;;) {\n                  i = s.search(lx);\n\n                  if (i >= 0) {\n                    break;\n                  }\n\n                  if (!nextLine()) {\n                    errorAt(\"Unclosed comment.\", line, character);\n                  }\n                }\n\n                s = s.substr(i + 2);\n                token.comment = true;\n                break;\n              //      /*members /*jshint /*global\n\n              case \"/*members\":\n              case \"/*member\":\n              case \"/*jshint\":\n              case \"/*jslint\":\n              case \"/*global\":\n              case \"*/\":\n                return {\n                  value: t,\n                  type: \"special\",\n                  line: line,\n                  character: character,\n                  from: from\n                };\n\n              case \"\":\n                break;\n              //      /\n\n              case \"/\":\n                if (s.charAt(0) === \"=\") {\n                  errorAt(\"A regular expression literal can be confused with '/='.\", line, from);\n                }\n\n                if (prereg) {\n                  depth = 0;\n                  captures = 0;\n                  l = 0;\n\n                  for (;;) {\n                    b = true;\n                    c = s.charAt(l);\n                    l += 1;\n\n                    switch (c) {\n                      case \"\":\n                        errorAt(\"Unclosed regular expression.\", line, from);\n                        return quit(\"Stopping.\", line, from);\n\n                      case \"/\":\n                        if (depth > 0) {\n                          warningAt(\"{a} unterminated regular expression \" + \"group(s).\", line, from + l, depth);\n                        }\n\n                        c = s.substr(0, l - 1);\n                        q = {\n                          g: true,\n                          i: true,\n                          m: true\n                        };\n\n                        while (q[s.charAt(l)] === true) {\n                          q[s.charAt(l)] = false;\n                          l += 1;\n                        }\n\n                        character += l;\n                        s = s.substr(l);\n                        q = s.charAt(0);\n\n                        if (q === \"/\" || q === \"*\") {\n                          errorAt(\"Confusing regular expression.\", line, from);\n                        }\n\n                        return it(\"(regexp)\", c);\n\n                      case \"\\\\\":\n                        c = s.charAt(l);\n\n                        if (c < \" \") {\n                          warningAt(\"Unexpected control character in regular expression.\", line, from + l);\n                        } else if (c === \"<\") {\n                          warningAt(\"Unexpected escaped character '{a}' in regular expression.\", line, from + l, c);\n                        }\n\n                        l += 1;\n                        break;\n\n                      case \"(\":\n                        depth += 1;\n                        b = false;\n\n                        if (s.charAt(l) === \"?\") {\n                          l += 1;\n\n                          switch (s.charAt(l)) {\n                            case \":\":\n                            case \"=\":\n                            case \"!\":\n                              l += 1;\n                              break;\n\n                            default:\n                              warningAt(\"Expected '{a}' and instead saw '{b}'.\", line, from + l, \":\", s.charAt(l));\n                          }\n                        } else {\n                          captures += 1;\n                        }\n\n                        break;\n\n                      case \"|\":\n                        b = false;\n                        break;\n\n                      case \")\":\n                        if (depth === 0) {\n                          warningAt(\"Unescaped '{a}'.\", line, from + l, \")\");\n                        } else {\n                          depth -= 1;\n                        }\n\n                        break;\n\n                      case \" \":\n                        q = 1;\n\n                        while (s.charAt(l) === \" \") {\n                          l += 1;\n                          q += 1;\n                        }\n\n                        if (q > 1) {\n                          warningAt(\"Spaces are hard to count. Use {{a}}.\", line, from + l, q);\n                        }\n\n                        break;\n\n                      case \"[\":\n                        c = s.charAt(l);\n\n                        if (c === \"^\") {\n                          l += 1;\n\n                          if (s.charAt(l) === \"]\") {\n                            errorAt(\"Unescaped '{a}'.\", line, from + l, \"^\");\n                          }\n                        }\n\n                        if (c === \"]\") {\n                          warningAt(\"Empty class.\", line, from + l - 1);\n                        }\n\n                        isLiteral = false;\n                        isInRange = false;\n\n                        klass: do {\n                          c = s.charAt(l);\n                          l += 1;\n\n                          switch (c) {\n                            case \"[\":\n                            case \"^\":\n                              warningAt(\"Unescaped '{a}'.\", line, from + l, c);\n\n                              if (isInRange) {\n                                isInRange = false;\n                              } else {\n                                isLiteral = true;\n                              }\n\n                              break;\n\n                            case \"-\":\n                              if (isLiteral && !isInRange) {\n                                isLiteral = false;\n                                isInRange = true;\n                              } else if (isInRange) {\n                                isInRange = false;\n                              } else if (s.charAt(l) === \"]\") {\n                                isInRange = true;\n                              } else {\n                                if (option.regexdash !== (l === 2 || l === 3 && s.charAt(1) === \"^\")) {\n                                  warningAt(\"Unescaped '{a}'.\", line, from + l - 1, \"-\");\n                                }\n\n                                isLiteral = true;\n                              }\n\n                              break;\n\n                            case \"]\":\n                              if (isInRange && !option.regexdash) {\n                                warningAt(\"Unescaped '{a}'.\", line, from + l - 1, \"-\");\n                              }\n\n                              break klass;\n\n                            case \"\\\\\":\n                              c = s.charAt(l);\n\n                              if (c < \" \") {\n                                warningAt(\"Unexpected control character in regular expression.\", line, from + l);\n                              } else if (c === \"<\") {\n                                warningAt(\"Unexpected escaped character '{a}' in regular expression.\", line, from + l, c);\n                              }\n\n                              l += 1; // \\w, \\s and \\d are never part of a character range\n\n                              if (/[wsd]/i.test(c)) {\n                                if (isInRange) {\n                                  warningAt(\"Unescaped '{a}'.\", line, from + l, \"-\");\n                                  isInRange = false;\n                                }\n\n                                isLiteral = false;\n                              } else if (isInRange) {\n                                isInRange = false;\n                              } else {\n                                isLiteral = true;\n                              }\n\n                              break;\n\n                            case \"/\":\n                              warningAt(\"Unescaped '{a}'.\", line, from + l - 1, \"/\");\n\n                              if (isInRange) {\n                                isInRange = false;\n                              } else {\n                                isLiteral = true;\n                              }\n\n                              break;\n\n                            case \"<\":\n                              if (isInRange) {\n                                isInRange = false;\n                              } else {\n                                isLiteral = true;\n                              }\n\n                              break;\n\n                            default:\n                              if (isInRange) {\n                                isInRange = false;\n                              } else {\n                                isLiteral = true;\n                              }\n\n                          }\n                        } while (c);\n\n                        break;\n\n                      case \".\":\n                        if (option.regexp) {\n                          warningAt(\"Insecure '{a}'.\", line, from + l, c);\n                        }\n\n                        break;\n\n                      case \"]\":\n                      case \"?\":\n                      case \"{\":\n                      case \"}\":\n                      case \"+\":\n                      case \"*\":\n                        warningAt(\"Unescaped '{a}'.\", line, from + l, c);\n                    }\n\n                    if (b) {\n                      switch (s.charAt(l)) {\n                        case \"?\":\n                        case \"+\":\n                        case \"*\":\n                          l += 1;\n\n                          if (s.charAt(l) === \"?\") {\n                            l += 1;\n                          }\n\n                          break;\n\n                        case \"{\":\n                          l += 1;\n                          c = s.charAt(l);\n\n                          if (c < \"0\" || c > \"9\") {\n                            warningAt(\"Expected a number and instead saw '{a}'.\", line, from + l, c);\n                            break; // No reason to continue checking numbers.\n                          }\n\n                          l += 1;\n                          low = +c;\n\n                          for (;;) {\n                            c = s.charAt(l);\n\n                            if (c < \"0\" || c > \"9\") {\n                              break;\n                            }\n\n                            l += 1;\n                            low = +c + low * 10;\n                          }\n\n                          high = low;\n\n                          if (c === \",\") {\n                            l += 1;\n                            high = Infinity;\n                            c = s.charAt(l);\n\n                            if (c >= \"0\" && c <= \"9\") {\n                              l += 1;\n                              high = +c;\n\n                              for (;;) {\n                                c = s.charAt(l);\n\n                                if (c < \"0\" || c > \"9\") {\n                                  break;\n                                }\n\n                                l += 1;\n                                high = +c + high * 10;\n                              }\n                            }\n                          }\n\n                          if (s.charAt(l) !== \"}\") {\n                            warningAt(\"Expected '{a}' and instead saw '{b}'.\", line, from + l, \"}\", c);\n                          } else {\n                            l += 1;\n                          }\n\n                          if (s.charAt(l) === \"?\") {\n                            l += 1;\n                          }\n\n                          if (low > high) {\n                            warningAt(\"'{a}' should not be greater than '{b}'.\", line, from + l, low, high);\n                          }\n\n                      }\n                    }\n                  }\n\n                  c = s.substr(0, l - 1);\n                  character += l;\n                  s = s.substr(l);\n                  return it(\"(regexp)\", c);\n                }\n\n                return it(\"(punctuator)\", t);\n              //      punctuator\n\n              case \"#\":\n                return it(\"(punctuator)\", t);\n\n              default:\n                return it(\"(punctuator)\", t);\n            }\n          }\n        }\n      }\n    };\n  }();\n\n  function addlabel(t, type, token) {\n    if (t === \"hasOwnProperty\") {\n      warning(\"'hasOwnProperty' is a really bad name.\");\n    } // Define t in the current function in the current scope.\n\n\n    if (type === \"exception\") {\n      if (is_own(funct[\"(context)\"], t)) {\n        if (funct[t] !== true && !option.node) {\n          warning(\"Value of '{a}' may be overwritten in IE.\", nexttoken, t);\n        }\n      }\n    }\n\n    if (is_own(funct, t) && !funct[\"(global)\"]) {\n      if (funct[t] === true) {\n        if (option.latedef) warning(\"'{a}' was used before it was defined.\", nexttoken, t);\n      } else {\n        if (!option.shadow && type !== \"exception\") {\n          warning(\"'{a}' is already defined.\", nexttoken, t);\n        }\n      }\n    }\n\n    funct[t] = type;\n\n    if (token) {\n      funct[\"(tokens)\"][t] = token;\n    }\n\n    if (funct[\"(global)\"]) {\n      global[t] = funct;\n\n      if (is_own(implied, t)) {\n        if (option.latedef) warning(\"'{a}' was used before it was defined.\", nexttoken, t);\n        delete implied[t];\n      }\n    } else {\n      scope[t] = funct;\n    }\n  }\n\n  function doOption() {\n    var nt = nexttoken;\n    var o = nt.value;\n    var quotmarkValue = option.quotmark;\n    var predef = {};\n    var b, obj, filter, t, tn, v, minus;\n\n    switch (o) {\n      case \"*/\":\n        error(\"Unbegun comment.\");\n        break;\n\n      case \"/*members\":\n      case \"/*member\":\n        o = \"/*members\";\n\n        if (!membersOnly) {\n          membersOnly = {};\n        }\n\n        obj = membersOnly;\n        option.quotmark = false;\n        break;\n\n      case \"/*jshint\":\n      case \"/*jslint\":\n        obj = option;\n        filter = boolOptions;\n        break;\n\n      case \"/*global\":\n        obj = predef;\n        break;\n\n      default:\n        error(\"What?\");\n    }\n\n    t = lex.token();\n\n    loop: for (;;) {\n      minus = false;\n\n      for (;;) {\n        if (t.type === \"special\" && t.value === \"*/\") {\n          break loop;\n        }\n\n        if (t.id !== \"(endline)\" && t.id !== \",\") {\n          break;\n        }\n\n        t = lex.token();\n      }\n\n      if (o === \"/*global\" && t.value === \"-\") {\n        minus = true;\n        t = lex.token();\n      }\n\n      if (t.type !== \"(string)\" && t.type !== \"(identifier)\" && o !== \"/*members\") {\n        error(\"Bad option.\", t);\n      }\n\n      v = lex.token();\n\n      if (v.id === \":\") {\n        v = lex.token();\n\n        if (obj === membersOnly) {\n          error(\"Expected '{a}' and instead saw '{b}'.\", t, \"*/\", \":\");\n        }\n\n        if (o === \"/*jshint\") {\n          checkOption(t.value, t);\n        }\n\n        var numericVals = [\"maxstatements\", \"maxparams\", \"maxdepth\", \"maxcomplexity\", \"maxerr\", \"maxlen\", \"indent\"];\n\n        if (numericVals.indexOf(t.value) > -1 && (o === \"/*jshint\" || o === \"/*jslint\")) {\n          b = +v.value;\n\n          if (typeof b !== \"number\" || !isFinite(b) || b <= 0 || Math.floor(b) !== b) {\n            error(\"Expected a small integer and instead saw '{a}'.\", v, v.value);\n          }\n\n          if (t.value === \"indent\") obj.white = true;\n          obj[t.value] = b;\n        } else if (t.value === \"validthis\") {\n          if (funct[\"(global)\"]) {\n            error(\"Option 'validthis' can't be used in a global scope.\");\n          } else {\n            if (v.value === \"true\" || v.value === \"false\") obj[t.value] = v.value === \"true\";else error(\"Bad option value.\", v);\n          }\n        } else if (t.value === \"quotmark\" && o === \"/*jshint\") {\n          switch (v.value) {\n            case \"true\":\n              obj.quotmark = true;\n              break;\n\n            case \"false\":\n              obj.quotmark = false;\n              break;\n\n            case \"double\":\n            case \"single\":\n              obj.quotmark = v.value;\n              break;\n\n            default:\n              error(\"Bad option value.\", v);\n          }\n        } else if (v.value === \"true\" || v.value === \"false\") {\n          if (o === \"/*jslint\") {\n            tn = renamedOptions[t.value] || t.value;\n            obj[tn] = v.value === \"true\";\n\n            if (invertedOptions[tn] !== undefined) {\n              obj[tn] = !obj[tn];\n            }\n          } else {\n            obj[t.value] = v.value === \"true\";\n          }\n\n          if (t.value === \"newcap\") obj[\"(explicitNewcap)\"] = true;\n        } else {\n          error(\"Bad option value.\", v);\n        }\n\n        t = lex.token();\n      } else {\n        if (o === \"/*jshint\" || o === \"/*jslint\") {\n          error(\"Missing option value.\", t);\n        }\n\n        obj[t.value] = false;\n\n        if (o === \"/*global\" && minus === true) {\n          JSHINT.blacklist[t.value] = t.value;\n          updatePredefined();\n        }\n\n        t = v;\n      }\n    }\n\n    if (o === \"/*members\") {\n      option.quotmark = quotmarkValue;\n    }\n\n    combine(predefined, predef);\n\n    for (var key in predef) {\n      if (is_own(predef, key)) {\n        declared[key] = nt;\n      }\n    }\n\n    if (filter) {\n      assume();\n    }\n  } // We need a peek function. If it has an argument, it peeks that much farther\n  // ahead. It is used to distinguish\n  //     for ( var i in ...\n  // from\n  //     for ( var i = ...\n\n\n  function peek(p) {\n    var i = p || 0,\n        j = 0,\n        t;\n\n    while (j <= i) {\n      t = lookahead[j];\n\n      if (!t) {\n        t = lookahead[j] = lex.token();\n      }\n\n      j += 1;\n    }\n\n    return t;\n  } // Produce the next token. It looks for programming errors.\n\n\n  function advance(id, t) {\n    switch (token.id) {\n      case \"(number)\":\n        if (nexttoken.id === \".\") {\n          warning(\"A dot following a number can be confused with a decimal point.\", token);\n        }\n\n        break;\n\n      case \"-\":\n        if (nexttoken.id === \"-\" || nexttoken.id === \"--\") {\n          warning(\"Confusing minusses.\");\n        }\n\n        break;\n\n      case \"+\":\n        if (nexttoken.id === \"+\" || nexttoken.id === \"++\") {\n          warning(\"Confusing plusses.\");\n        }\n\n        break;\n    }\n\n    if (token.type === \"(string)\" || token.identifier) {\n      anonname = token.value;\n    }\n\n    if (id && nexttoken.id !== id) {\n      if (t) {\n        if (nexttoken.id === \"(end)\") {\n          warning(\"Unmatched '{a}'.\", t, t.id);\n        } else {\n          warning(\"Expected '{a}' to match '{b}' from line {c} and instead saw '{d}'.\", nexttoken, id, t.id, t.line, nexttoken.value);\n        }\n      } else if (nexttoken.type !== \"(identifier)\" || nexttoken.value !== id) {\n        warning(\"Expected '{a}' and instead saw '{b}'.\", nexttoken, id, nexttoken.value);\n      }\n    }\n\n    prevtoken = token;\n    token = nexttoken;\n\n    for (;;) {\n      nexttoken = lookahead.shift() || lex.token();\n\n      if (nexttoken.id === \"(end)\" || nexttoken.id === \"(error)\") {\n        return;\n      }\n\n      if (nexttoken.type === \"special\") {\n        doOption();\n      } else {\n        if (nexttoken.id !== \"(endline)\") {\n          break;\n        }\n      }\n    }\n  } // This is the heart of JSHINT, the Pratt parser. In addition to parsing, it\n  // is looking for ad hoc lint patterns. We add .fud to Pratt's model, which is\n  // like .nud except that it is only used on the first token of a statement.\n  // Having .fud makes it much easier to define statement-oriented languages like\n  // JavaScript. I retained Pratt's nomenclature.\n  // .nud     Null denotation\n  // .fud     First null denotation\n  // .led     Left denotation\n  //  lbp     Left binding power\n  //  rbp     Right binding power\n  // They are elements of the parsing method called Top Down Operator Precedence.\n\n\n  function expression(rbp, initial) {\n    var left,\n        isArray = false,\n        isObject = false;\n    if (nexttoken.id === \"(end)\") error(\"Unexpected early end of program.\", token);\n    advance();\n\n    if (initial) {\n      anonname = \"anonymous\";\n      funct[\"(verb)\"] = token.value;\n    }\n\n    if (initial === true && token.fud) {\n      left = token.fud();\n    } else {\n      if (token.nud) {\n        left = token.nud();\n      } else {\n        if (nexttoken.type === \"(number)\" && token.id === \".\") {\n          warning(\"A leading decimal point can be confused with a dot: '.{a}'.\", token, nexttoken.value);\n          advance();\n          return token;\n        } else {\n          error(\"Expected an identifier and instead saw '{a}'.\", token, token.id);\n        }\n      }\n\n      while (rbp < nexttoken.lbp) {\n        isArray = token.value === \"Array\";\n        isObject = token.value === \"Object\"; // #527, new Foo.Array(), Foo.Array(), new Foo.Object(), Foo.Object()\n        // Line breaks in IfStatement heads exist to satisfy the checkJSHint\n        // \"Line too long.\" error.\n\n        if (left && (left.value || left.first && left.first.value)) {\n          // If the left.value is not \"new\", or the left.first.value is a \".\"\n          // then safely assume that this is not \"new Array()\" and possibly\n          // not \"new Object()\"...\n          if (left.value !== \"new\" || left.first && left.first.value && left.first.value === \".\") {\n            isArray = false; // ...In the case of Object, if the left.value and token.value\n            // are not equal, then safely assume that this not \"new Object()\"\n\n            if (left.value !== token.value) {\n              isObject = false;\n            }\n          }\n        }\n\n        advance();\n        if (isArray && token.id === \"(\" && nexttoken.id === \")\") warning(\"Use the array literal notation [].\", token);\n        if (isObject && token.id === \"(\" && nexttoken.id === \")\") warning(\"Use the object literal notation {}.\", token);\n\n        if (token.led) {\n          left = token.led(left);\n        } else {\n          error(\"Expected an operator and instead saw '{a}'.\", token, token.id);\n        }\n      }\n    }\n\n    return left;\n  } // Functions for conformance of style.\n\n\n  function adjacent(left, right) {\n    left = left || token;\n    right = right || nexttoken;\n\n    if (option.white) {\n      if (left.character !== right.from && left.line === right.line) {\n        left.from += left.character - left.from;\n        warning(\"Unexpected space after '{a}'.\", left, left.value);\n      }\n    }\n  }\n\n  function nobreak(left, right) {\n    left = left || token;\n    right = right || nexttoken;\n\n    if (option.white && (left.character !== right.from || left.line !== right.line)) {\n      warning(\"Unexpected space before '{a}'.\", right, right.value);\n    }\n  }\n\n  function nospace(left, right) {\n    left = left || token;\n    right = right || nexttoken;\n\n    if (option.white && !left.comment) {\n      if (left.line === right.line) {\n        adjacent(left, right);\n      }\n    }\n  }\n\n  function nonadjacent(left, right) {\n    if (option.white) {\n      left = left || token;\n      right = right || nexttoken;\n\n      if (left.value === \";\" && right.value === \";\") {\n        return;\n      }\n\n      if (left.line === right.line && left.character === right.from) {\n        left.from += left.character - left.from;\n        warning(\"Missing space after '{a}'.\", left, left.value);\n      }\n    }\n  }\n\n  function nobreaknonadjacent(left, right) {\n    left = left || token;\n    right = right || nexttoken;\n\n    if (!option.laxbreak && left.line !== right.line) {\n      warning(\"Bad line breaking before '{a}'.\", right, right.id);\n    } else if (option.white) {\n      left = left || token;\n      right = right || nexttoken;\n\n      if (left.character === right.from) {\n        left.from += left.character - left.from;\n        warning(\"Missing space after '{a}'.\", left, left.value);\n      }\n    }\n  }\n\n  function indentation(bias) {\n    var i;\n\n    if (option.white && nexttoken.id !== \"(end)\") {\n      i = indent + (bias || 0);\n\n      if (nexttoken.from !== i) {\n        warning(\"Expected '{a}' to have an indentation at {b} instead at {c}.\", nexttoken, nexttoken.value, i, nexttoken.from);\n      }\n    }\n  }\n\n  function nolinebreak(t) {\n    t = t || token;\n\n    if (t.line !== nexttoken.line) {\n      warning(\"Line breaking error '{a}'.\", t, t.value);\n    }\n  }\n\n  function comma() {\n    if (token.line !== nexttoken.line) {\n      if (!option.laxcomma) {\n        if (comma.first) {\n          warning(\"Comma warnings can be turned off with 'laxcomma'\");\n          comma.first = false;\n        }\n\n        warning(\"Bad line breaking before '{a}'.\", token, nexttoken.id);\n      }\n    } else if (!token.comment && token.character !== nexttoken.from && option.white) {\n      token.from += token.character - token.from;\n      warning(\"Unexpected space after '{a}'.\", token, token.value);\n    }\n\n    advance(\",\");\n    nonadjacent(token, nexttoken);\n  } // Functional constructors for making the symbols that will be inherited by\n  // tokens.\n\n\n  function symbol(s, p) {\n    var x = syntax[s];\n\n    if (!x || typeof x !== \"object\") {\n      syntax[s] = x = {\n        id: s,\n        lbp: p,\n        value: s\n      };\n    }\n\n    return x;\n  }\n\n  function delim(s) {\n    return symbol(s, 0);\n  }\n\n  function stmt(s, f) {\n    var x = delim(s);\n    x.identifier = x.reserved = true;\n    x.fud = f;\n    return x;\n  }\n\n  function blockstmt(s, f) {\n    var x = stmt(s, f);\n    x.block = true;\n    return x;\n  }\n\n  function reserveName(x) {\n    var c = x.id.charAt(0);\n\n    if (c >= \"a\" && c <= \"z\" || c >= \"A\" && c <= \"Z\") {\n      x.identifier = x.reserved = true;\n    }\n\n    return x;\n  }\n\n  function prefix(s, f) {\n    var x = symbol(s, 150);\n    reserveName(x);\n    x.nud = typeof f === \"function\" ? f : function () {\n      this.right = expression(150);\n      this.arity = \"unary\";\n\n      if (this.id === \"++\" || this.id === \"--\") {\n        if (option.plusplus) {\n          warning(\"Unexpected use of '{a}'.\", this, this.id);\n        } else if ((!this.right.identifier || this.right.reserved) && this.right.id !== \".\" && this.right.id !== \"[\") {\n          warning(\"Bad operand.\", this);\n        }\n      }\n\n      return this;\n    };\n    return x;\n  }\n\n  function type(s, f) {\n    var x = delim(s);\n    x.type = s;\n    x.nud = f;\n    return x;\n  }\n\n  function reserve(s, f) {\n    var x = type(s, f);\n    x.identifier = x.reserved = true;\n    return x;\n  }\n\n  function reservevar(s, v) {\n    return reserve(s, function () {\n      if (typeof v === \"function\") {\n        v(this);\n      }\n\n      return this;\n    });\n  }\n\n  function infix(s, f, p, w) {\n    var x = symbol(s, p);\n    reserveName(x);\n\n    x.led = function (left) {\n      if (!w) {\n        nobreaknonadjacent(prevtoken, token);\n        nonadjacent(token, nexttoken);\n      }\n\n      if (s === \"in\" && left.id === \"!\") {\n        warning(\"Confusing use of '{a}'.\", left, \"!\");\n      }\n\n      if (typeof f === \"function\") {\n        return f(left, this);\n      } else {\n        this.left = left;\n        this.right = expression(p);\n        return this;\n      }\n    };\n\n    return x;\n  }\n\n  function relation(s, f) {\n    var x = symbol(s, 100);\n\n    x.led = function (left) {\n      nobreaknonadjacent(prevtoken, token);\n      nonadjacent(token, nexttoken);\n      var right = expression(100);\n\n      if (isIdentifier(left, \"NaN\") || isIdentifier(right, \"NaN\")) {\n        warning(\"Use the isNaN function to compare with NaN.\", this);\n      } else if (f) {\n        f.apply(this, [left, right]);\n      }\n\n      if (left.id === \"!\") {\n        warning(\"Confusing use of '{a}'.\", left, \"!\");\n      }\n\n      if (right.id === \"!\") {\n        warning(\"Confusing use of '{a}'.\", right, \"!\");\n      }\n\n      this.left = left;\n      this.right = right;\n      return this;\n    };\n\n    return x;\n  }\n\n  function isPoorRelation(node) {\n    return node && (node.type === \"(number)\" && +node.value === 0 || node.type === \"(string)\" && node.value === \"\" || node.type === \"null\" && !option.eqnull || node.type === \"true\" || node.type === \"false\" || node.type === \"undefined\");\n  }\n\n  function assignop(s) {\n    symbol(s, 20).exps = true;\n    return infix(s, function (left, that) {\n      that.left = left;\n\n      if (predefined[left.value] === false && scope[left.value][\"(global)\"] === true) {\n        warning(\"Read only.\", left);\n      } else if (left[\"function\"]) {\n        warning(\"'{a}' is a function.\", left, left.value);\n      }\n\n      if (left) {\n        if (option.esnext && funct[left.value] === \"const\") {\n          warning(\"Attempting to override '{a}' which is a constant\", left, left.value);\n        }\n\n        if (left.id === \".\" || left.id === \"[\") {\n          if (!left.left || left.left.value === \"arguments\") {\n            warning(\"Bad assignment.\", that);\n          }\n\n          that.right = expression(19);\n          return that;\n        } else if (left.identifier && !left.reserved) {\n          if (funct[left.value] === \"exception\") {\n            warning(\"Do not assign to the exception parameter.\", left);\n          }\n\n          that.right = expression(19);\n          return that;\n        }\n\n        if (left === syntax[\"function\"]) {\n          warning(\"Expected an identifier in an assignment and instead saw a function invocation.\", token);\n        }\n      }\n\n      error(\"Bad assignment.\", that);\n    }, 20);\n  }\n\n  function bitwise(s, f, p) {\n    var x = symbol(s, p);\n    reserveName(x);\n    x.led = typeof f === \"function\" ? f : function (left) {\n      if (option.bitwise) {\n        warning(\"Unexpected use of '{a}'.\", this, this.id);\n      }\n\n      this.left = left;\n      this.right = expression(p);\n      return this;\n    };\n    return x;\n  }\n\n  function bitwiseassignop(s) {\n    symbol(s, 20).exps = true;\n    return infix(s, function (left, that) {\n      if (option.bitwise) {\n        warning(\"Unexpected use of '{a}'.\", that, that.id);\n      }\n\n      nonadjacent(prevtoken, token);\n      nonadjacent(token, nexttoken);\n\n      if (left) {\n        if (left.id === \".\" || left.id === \"[\" || left.identifier && !left.reserved) {\n          expression(19);\n          return that;\n        }\n\n        if (left === syntax[\"function\"]) {\n          warning(\"Expected an identifier in an assignment, and instead saw a function invocation.\", token);\n        }\n\n        return that;\n      }\n\n      error(\"Bad assignment.\", that);\n    }, 20);\n  }\n\n  function suffix(s) {\n    var x = symbol(s, 150);\n\n    x.led = function (left) {\n      if (option.plusplus) {\n        warning(\"Unexpected use of '{a}'.\", this, this.id);\n      } else if ((!left.identifier || left.reserved) && left.id !== \".\" && left.id !== \"[\") {\n        warning(\"Bad operand.\", this);\n      }\n\n      this.left = left;\n      return this;\n    };\n\n    return x;\n  } // fnparam means that this identifier is being defined as a function\n  // argument (see identifier())\n\n\n  function optionalidentifier(fnparam) {\n    if (nexttoken.identifier) {\n      advance();\n\n      if (token.reserved && !option.es5) {\n        // `undefined` as a function param is a common pattern to protect\n        // against the case when somebody does `undefined = true` and\n        // help with minification. More info: https://gist.github.com/315916\n        if (!fnparam || token.value !== \"undefined\") {\n          warning(\"Expected an identifier and instead saw '{a}' (a reserved word).\", token, token.id);\n        }\n      }\n\n      return token.value;\n    }\n  } // fnparam means that this identifier is being defined as a function\n  // argument\n\n\n  function identifier(fnparam) {\n    var i = optionalidentifier(fnparam);\n\n    if (i) {\n      return i;\n    }\n\n    if (token.id === \"function\" && nexttoken.id === \"(\") {\n      warning(\"Missing name in function declaration.\");\n    } else {\n      error(\"Expected an identifier and instead saw '{a}'.\", nexttoken, nexttoken.value);\n    }\n  }\n\n  function reachable(s) {\n    var i = 0,\n        t;\n\n    if (nexttoken.id !== \";\" || noreach) {\n      return;\n    }\n\n    for (;;) {\n      t = peek(i);\n\n      if (t.reach) {\n        return;\n      }\n\n      if (t.id !== \"(endline)\") {\n        if (t.id === \"function\") {\n          if (!option.latedef) {\n            break;\n          }\n\n          warning(\"Inner functions should be listed at the top of the outer function.\", t);\n          break;\n        }\n\n        warning(\"Unreachable '{a}' after '{b}'.\", t, t.value, s);\n        break;\n      }\n\n      i += 1;\n    }\n  }\n\n  function statement(noindent) {\n    var i = indent,\n        r,\n        s = scope,\n        t = nexttoken;\n\n    if (t.id === \";\") {\n      advance(\";\");\n      return;\n    } // Is this a labelled statement?\n\n\n    if (t.identifier && !t.reserved && peek().id === \":\") {\n      advance();\n      advance(\":\");\n      scope = Object.create(s);\n      addlabel(t.value, \"label\");\n\n      if (!nexttoken.labelled && nexttoken.value !== \"{\") {\n        warning(\"Label '{a}' on {b} statement.\", nexttoken, t.value, nexttoken.value);\n      }\n\n      if (jx.test(t.value + \":\")) {\n        warning(\"Label '{a}' looks like a javascript url.\", t, t.value);\n      }\n\n      nexttoken.label = t.value;\n      t = nexttoken;\n    } // Is it a lonely block?\n\n\n    if (t.id === \"{\") {\n      block(true, true);\n      return;\n    } // Parse the statement.\n\n\n    if (!noindent) {\n      indentation();\n    }\n\n    r = expression(0, true); // Look for the final semicolon.\n\n    if (!t.block) {\n      if (!option.expr && (!r || !r.exps)) {\n        warning(\"Expected an assignment or function call and instead saw an expression.\", token);\n      } else if (option.nonew && r.id === \"(\" && r.left.id === \"new\") {\n        warning(\"Do not use 'new' for side effects.\", t);\n      }\n\n      if (nexttoken.id === \",\") {\n        return comma();\n      }\n\n      if (nexttoken.id !== \";\") {\n        if (!option.asi) {\n          // If this is the last statement in a block that ends on\n          // the same line *and* option lastsemic is on, ignore the warning.\n          // Otherwise, complain about missing semicolon.\n          if (!option.lastsemic || nexttoken.id !== \"}\" || nexttoken.line !== token.line) {\n            warningAt(\"Missing semicolon.\", token.line, token.character);\n          }\n        }\n      } else {\n        adjacent(token, nexttoken);\n        advance(\";\");\n        nonadjacent(token, nexttoken);\n      }\n    } // Restore the indentation.\n\n\n    indent = i;\n    scope = s;\n    return r;\n  }\n\n  function statements(startLine) {\n    var a = [],\n        p;\n\n    while (!nexttoken.reach && nexttoken.id !== \"(end)\") {\n      if (nexttoken.id === \";\") {\n        p = peek();\n\n        if (!p || p.id !== \"(\") {\n          warning(\"Unnecessary semicolon.\");\n        }\n\n        advance(\";\");\n      } else {\n        a.push(statement(startLine === nexttoken.line));\n      }\n    }\n\n    return a;\n  }\n  /*\n   * read all directives\n   * recognizes a simple form of asi, but always\n   * warns, if it is used\n   */\n\n\n  function directives() {\n    var i, p, pn;\n\n    for (;;) {\n      if (nexttoken.id === \"(string)\") {\n        p = peek(0);\n\n        if (p.id === \"(endline)\") {\n          i = 1;\n\n          do {\n            pn = peek(i);\n            i = i + 1;\n          } while (pn.id === \"(endline)\");\n\n          if (pn.id !== \";\") {\n            if (pn.id !== \"(string)\" && pn.id !== \"(number)\" && pn.id !== \"(regexp)\" && pn.identifier !== true && pn.id !== \"}\") {\n              break;\n            }\n\n            warning(\"Missing semicolon.\", nexttoken);\n          } else {\n            p = pn;\n          }\n        } else if (p.id === \"}\") {\n          // directive with no other statements, warn about missing semicolon\n          warning(\"Missing semicolon.\", p);\n        } else if (p.id !== \";\") {\n          break;\n        }\n\n        indentation();\n        advance();\n\n        if (directive[token.value]) {\n          warning(\"Unnecessary directive \\\"{a}\\\".\", token, token.value);\n        }\n\n        if (token.value === \"use strict\") {\n          if (!option[\"(explicitNewcap)\"]) option.newcap = true;\n          option.undef = true;\n        } // there's no directive negation, so always set to true\n\n\n        directive[token.value] = true;\n\n        if (p.id === \";\") {\n          advance(\";\");\n        }\n\n        continue;\n      }\n\n      break;\n    }\n  }\n  /*\n   * Parses a single block. A block is a sequence of statements wrapped in\n   * braces.\n   *\n   * ordinary - true for everything but function bodies and try blocks.\n   * stmt     - true if block can be a single statement (e.g. in if/for/while).\n   * isfunc   - true if block is a function body\n   */\n\n\n  function block(ordinary, stmt, isfunc) {\n    var a,\n        b = inblock,\n        old_indent = indent,\n        m,\n        s = scope,\n        t,\n        line,\n        d;\n    inblock = ordinary;\n    if (!ordinary || !option.funcscope) scope = Object.create(scope);\n    nonadjacent(token, nexttoken);\n    t = nexttoken;\n    var metrics = funct[\"(metrics)\"];\n    metrics.nestedBlockDepth += 1;\n    metrics.verifyMaxNestedBlockDepthPerFunction();\n\n    if (nexttoken.id === \"{\") {\n      advance(\"{\");\n      line = token.line;\n\n      if (nexttoken.id !== \"}\") {\n        indent += option.indent;\n\n        while (!ordinary && nexttoken.from > indent) {\n          indent += option.indent;\n        }\n\n        if (isfunc) {\n          m = {};\n\n          for (d in directive) {\n            if (is_own(directive, d)) {\n              m[d] = directive[d];\n            }\n          }\n\n          directives();\n\n          if (option.strict && funct[\"(context)\"][\"(global)\"]) {\n            if (!m[\"use strict\"] && !directive[\"use strict\"]) {\n              warning(\"Missing \\\"use strict\\\" statement.\");\n            }\n          }\n        }\n\n        a = statements(line);\n        metrics.statementCount += a.length;\n\n        if (isfunc) {\n          directive = m;\n        }\n\n        indent -= option.indent;\n\n        if (line !== nexttoken.line) {\n          indentation();\n        }\n      } else if (line !== nexttoken.line) {\n        indentation();\n      }\n\n      advance(\"}\", t);\n      indent = old_indent;\n    } else if (!ordinary) {\n      error(\"Expected '{a}' and instead saw '{b}'.\", nexttoken, \"{\", nexttoken.value);\n    } else {\n      if (!stmt || option.curly) warning(\"Expected '{a}' and instead saw '{b}'.\", nexttoken, \"{\", nexttoken.value);\n      noreach = true;\n      indent += option.indent; // test indentation only if statement is in new line\n\n      a = [statement(nexttoken.line === token.line)];\n      indent -= option.indent;\n      noreach = false;\n    }\n\n    funct[\"(verb)\"] = null;\n    if (!ordinary || !option.funcscope) scope = s;\n    inblock = b;\n\n    if (ordinary && option.noempty && (!a || a.length === 0)) {\n      warning(\"Empty block.\");\n    }\n\n    metrics.nestedBlockDepth -= 1;\n    return a;\n  }\n\n  function countMember(m) {\n    if (membersOnly && typeof membersOnly[m] !== \"boolean\") {\n      warning(\"Unexpected /*member '{a}'.\", token, m);\n    }\n\n    if (typeof member[m] === \"number\") {\n      member[m] += 1;\n    } else {\n      member[m] = 1;\n    }\n  }\n\n  function note_implied(token) {\n    var name = token.value,\n        line = token.line,\n        a = implied[name];\n\n    if (typeof a === \"function\") {\n      a = false;\n    }\n\n    if (!a) {\n      a = [line];\n      implied[name] = a;\n    } else if (a[a.length - 1] !== line) {\n      a.push(line);\n    }\n  } // Build the syntax table by declaring the syntactic elements of the language.\n\n\n  type(\"(number)\", function () {\n    return this;\n  });\n  type(\"(string)\", function () {\n    return this;\n  });\n  syntax[\"(identifier)\"] = {\n    type: \"(identifier)\",\n    lbp: 0,\n    identifier: true,\n    nud: function () {\n      var v = this.value,\n          s = scope[v],\n          f;\n\n      if (typeof s === \"function\") {\n        // Protection against accidental inheritance.\n        s = undefined;\n      } else if (typeof s === \"boolean\") {\n        f = funct;\n        funct = functions[0];\n        addlabel(v, \"var\");\n        s = funct;\n        funct = f;\n      } // The name is in scope and defined in the current function.\n\n\n      if (funct === s) {\n        // Change 'unused' to 'var', and reject labels.\n        switch (funct[v]) {\n          case \"unused\":\n            funct[v] = \"var\";\n            break;\n\n          case \"unction\":\n            funct[v] = \"function\";\n            this[\"function\"] = true;\n            break;\n\n          case \"function\":\n            this[\"function\"] = true;\n            break;\n\n          case \"label\":\n            warning(\"'{a}' is a statement label.\", token, v);\n            break;\n        }\n      } else if (funct[\"(global)\"]) {\n        // The name is not defined in the function.  If we are in the global\n        // scope, then we have an undefined variable.\n        //\n        // Operators typeof and delete do not raise runtime errors even if\n        // the base object of a reference is null so no need to display warning\n        // if we're inside of typeof or delete.\n        if (option.undef && typeof predefined[v] !== \"boolean\") {\n          // Attempting to subscript a null reference will throw an\n          // error, even within the typeof and delete operators\n          if (!(anonname === \"typeof\" || anonname === \"delete\") || nexttoken && (nexttoken.value === \".\" || nexttoken.value === \"[\")) {\n            isundef(funct, \"'{a}' is not defined.\", token, v);\n          }\n        }\n\n        note_implied(token);\n      } else {\n        // If the name is already defined in the current\n        // function, but not as outer, then there is a scope error.\n        switch (funct[v]) {\n          case \"closure\":\n          case \"function\":\n          case \"var\":\n          case \"unused\":\n            warning(\"'{a}' used out of scope.\", token, v);\n            break;\n\n          case \"label\":\n            warning(\"'{a}' is a statement label.\", token, v);\n            break;\n\n          case \"outer\":\n          case \"global\":\n            break;\n\n          default:\n            // If the name is defined in an outer function, make an outer entry,\n            // and if it was unused, make it var.\n            if (s === true) {\n              funct[v] = true;\n            } else if (s === null) {\n              warning(\"'{a}' is not allowed.\", token, v);\n              note_implied(token);\n            } else if (typeof s !== \"object\") {\n              // Operators typeof and delete do not raise runtime errors even\n              // if the base object of a reference is null so no need to\n              // display warning if we're inside of typeof or delete.\n              if (option.undef) {\n                // Attempting to subscript a null reference will throw an\n                // error, even within the typeof and delete operators\n                if (!(anonname === \"typeof\" || anonname === \"delete\") || nexttoken && (nexttoken.value === \".\" || nexttoken.value === \"[\")) {\n                  isundef(funct, \"'{a}' is not defined.\", token, v);\n                }\n              }\n\n              funct[v] = true;\n              note_implied(token);\n            } else {\n              switch (s[v]) {\n                case \"function\":\n                case \"unction\":\n                  this[\"function\"] = true;\n                  s[v] = \"closure\";\n                  funct[v] = s[\"(global)\"] ? \"global\" : \"outer\";\n                  break;\n\n                case \"var\":\n                case \"unused\":\n                  s[v] = \"closure\";\n                  funct[v] = s[\"(global)\"] ? \"global\" : \"outer\";\n                  break;\n\n                case \"closure\":\n                  funct[v] = s[\"(global)\"] ? \"global\" : \"outer\";\n                  break;\n\n                case \"label\":\n                  warning(\"'{a}' is a statement label.\", token, v);\n              }\n            }\n\n        }\n      }\n\n      return this;\n    },\n    led: function () {\n      error(\"Expected an operator and instead saw '{a}'.\", nexttoken, nexttoken.value);\n    }\n  };\n  type(\"(regexp)\", function () {\n    return this;\n  }); // ECMAScript parser\n\n  delim(\"(endline)\");\n  delim(\"(begin)\");\n  delim(\"(end)\").reach = true;\n  delim(\"</\").reach = true;\n  delim(\"<!\");\n  delim(\"<!--\");\n  delim(\"-->\");\n  delim(\"(error)\").reach = true;\n  delim(\"}\").reach = true;\n  delim(\")\");\n  delim(\"]\");\n  delim(\"\\\"\").reach = true;\n  delim(\"'\").reach = true;\n  delim(\";\");\n  delim(\":\").reach = true;\n  delim(\",\");\n  delim(\"#\");\n  delim(\"@\");\n  reserve(\"else\");\n  reserve(\"case\").reach = true;\n  reserve(\"catch\");\n  reserve(\"default\").reach = true;\n  reserve(\"finally\");\n  reservevar(\"arguments\", function (x) {\n    if (directive[\"use strict\"] && funct[\"(global)\"]) {\n      warning(\"Strict violation.\", x);\n    }\n  });\n  reservevar(\"eval\");\n  reservevar(\"false\");\n  reservevar(\"Infinity\");\n  reservevar(\"null\");\n  reservevar(\"this\", function (x) {\n    if (directive[\"use strict\"] && !option.validthis && (funct[\"(statement)\"] && funct[\"(name)\"].charAt(0) > \"Z\" || funct[\"(global)\"])) {\n      warning(\"Possible strict violation.\", x);\n    }\n  });\n  reservevar(\"true\");\n  reservevar(\"undefined\");\n  assignop(\"=\", \"assign\", 20);\n  assignop(\"+=\", \"assignadd\", 20);\n  assignop(\"-=\", \"assignsub\", 20);\n  assignop(\"*=\", \"assignmult\", 20);\n\n  assignop(\"/=\", \"assigndiv\", 20).nud = function () {\n    error(\"A regular expression literal can be confused with '/='.\");\n  };\n\n  assignop(\"%=\", \"assignmod\", 20);\n  bitwiseassignop(\"&=\", \"assignbitand\", 20);\n  bitwiseassignop(\"|=\", \"assignbitor\", 20);\n  bitwiseassignop(\"^=\", \"assignbitxor\", 20);\n  bitwiseassignop(\"<<=\", \"assignshiftleft\", 20);\n  bitwiseassignop(\">>=\", \"assignshiftright\", 20);\n  bitwiseassignop(\">>>=\", \"assignshiftrightunsigned\", 20);\n  infix(\"?\", function (left, that) {\n    that.left = left;\n    that.right = expression(10);\n    advance(\":\");\n    that[\"else\"] = expression(10);\n    return that;\n  }, 30);\n  infix(\"||\", \"or\", 40);\n  infix(\"&&\", \"and\", 50);\n  bitwise(\"|\", \"bitor\", 70);\n  bitwise(\"^\", \"bitxor\", 80);\n  bitwise(\"&\", \"bitand\", 90);\n  relation(\"==\", function (left, right) {\n    var eqnull = option.eqnull && (left.value === \"null\" || right.value === \"null\");\n    if (!eqnull && option.eqeqeq) warning(\"Expected '{a}' and instead saw '{b}'.\", this, \"===\", \"==\");else if (isPoorRelation(left)) warning(\"Use '{a}' to compare with '{b}'.\", this, \"===\", left.value);else if (isPoorRelation(right)) warning(\"Use '{a}' to compare with '{b}'.\", this, \"===\", right.value);\n    return this;\n  });\n  relation(\"===\");\n  relation(\"!=\", function (left, right) {\n    var eqnull = option.eqnull && (left.value === \"null\" || right.value === \"null\");\n\n    if (!eqnull && option.eqeqeq) {\n      warning(\"Expected '{a}' and instead saw '{b}'.\", this, \"!==\", \"!=\");\n    } else if (isPoorRelation(left)) {\n      warning(\"Use '{a}' to compare with '{b}'.\", this, \"!==\", left.value);\n    } else if (isPoorRelation(right)) {\n      warning(\"Use '{a}' to compare with '{b}'.\", this, \"!==\", right.value);\n    }\n\n    return this;\n  });\n  relation(\"!==\");\n  relation(\"<\");\n  relation(\">\");\n  relation(\"<=\");\n  relation(\">=\");\n  bitwise(\"<<\", \"shiftleft\", 120);\n  bitwise(\">>\", \"shiftright\", 120);\n  bitwise(\">>>\", \"shiftrightunsigned\", 120);\n  infix(\"in\", \"in\", 120);\n  infix(\"instanceof\", \"instanceof\", 120);\n  infix(\"+\", function (left, that) {\n    var right = expression(130);\n\n    if (left && right && left.id === \"(string)\" && right.id === \"(string)\") {\n      left.value += right.value;\n      left.character = right.character;\n\n      if (!option.scripturl && jx.test(left.value)) {\n        warning(\"JavaScript URL.\", left);\n      }\n\n      return left;\n    }\n\n    that.left = left;\n    that.right = right;\n    return that;\n  }, 130);\n  prefix(\"+\", \"num\");\n  prefix(\"+++\", function () {\n    warning(\"Confusing pluses.\");\n    this.right = expression(150);\n    this.arity = \"unary\";\n    return this;\n  });\n  infix(\"+++\", function (left) {\n    warning(\"Confusing pluses.\");\n    this.left = left;\n    this.right = expression(130);\n    return this;\n  }, 130);\n  infix(\"-\", \"sub\", 130);\n  prefix(\"-\", \"neg\");\n  prefix(\"---\", function () {\n    warning(\"Confusing minuses.\");\n    this.right = expression(150);\n    this.arity = \"unary\";\n    return this;\n  });\n  infix(\"---\", function (left) {\n    warning(\"Confusing minuses.\");\n    this.left = left;\n    this.right = expression(130);\n    return this;\n  }, 130);\n  infix(\"*\", \"mult\", 140);\n  infix(\"/\", \"div\", 140);\n  infix(\"%\", \"mod\", 140);\n  suffix(\"++\", \"postinc\");\n  prefix(\"++\", \"preinc\");\n  syntax[\"++\"].exps = true;\n  suffix(\"--\", \"postdec\");\n  prefix(\"--\", \"predec\");\n  syntax[\"--\"].exps = true;\n  prefix(\"delete\", function () {\n    var p = expression(0);\n\n    if (!p || p.id !== \".\" && p.id !== \"[\") {\n      warning(\"Variables should not be deleted.\");\n    }\n\n    this.first = p;\n    return this;\n  }).exps = true;\n  prefix(\"~\", function () {\n    if (option.bitwise) {\n      warning(\"Unexpected '{a}'.\", this, \"~\");\n    }\n\n    expression(150);\n    return this;\n  });\n  prefix(\"!\", function () {\n    this.right = expression(150);\n    this.arity = \"unary\";\n\n    if (bang[this.right.id] === true) {\n      warning(\"Confusing use of '{a}'.\", this, \"!\");\n    }\n\n    return this;\n  });\n  prefix(\"typeof\", \"typeof\");\n  prefix(\"new\", function () {\n    var c = expression(155),\n        i;\n\n    if (c && c.id !== \"function\") {\n      if (c.identifier) {\n        c[\"new\"] = true;\n\n        switch (c.value) {\n          case \"Number\":\n          case \"String\":\n          case \"Boolean\":\n          case \"Math\":\n          case \"JSON\":\n            warning(\"Do not use {a} as a constructor.\", prevtoken, c.value);\n            break;\n\n          case \"Function\":\n            if (!option.evil) {\n              warning(\"The Function constructor is eval.\");\n            }\n\n            break;\n\n          case \"Date\":\n          case \"RegExp\":\n            break;\n\n          default:\n            if (c.id !== \"function\") {\n              i = c.value.substr(0, 1);\n\n              if (option.newcap && (i < \"A\" || i > \"Z\") && !is_own(global, c.value)) {\n                warning(\"A constructor name should start with an uppercase letter.\", token);\n              }\n            }\n\n        }\n      } else {\n        if (c.id !== \".\" && c.id !== \"[\" && c.id !== \"(\") {\n          warning(\"Bad constructor.\", token);\n        }\n      }\n    } else {\n      if (!option.supernew) warning(\"Weird construction. Delete 'new'.\", this);\n    }\n\n    adjacent(token, nexttoken);\n\n    if (nexttoken.id !== \"(\" && !option.supernew) {\n      warning(\"Missing '()' invoking a constructor.\", token, token.value);\n    }\n\n    this.first = c;\n    return this;\n  });\n  syntax[\"new\"].exps = true;\n  prefix(\"void\").exps = true;\n  infix(\".\", function (left, that) {\n    adjacent(prevtoken, token);\n    nobreak();\n    var m = identifier();\n\n    if (typeof m === \"string\") {\n      countMember(m);\n    }\n\n    that.left = left;\n    that.right = m;\n\n    if (left && left.value === \"arguments\" && (m === \"callee\" || m === \"caller\")) {\n      if (option.noarg) warning(\"Avoid arguments.{a}.\", left, m);else if (directive[\"use strict\"]) error(\"Strict violation.\");\n    } else if (!option.evil && left && left.value === \"document\" && (m === \"write\" || m === \"writeln\")) {\n      warning(\"document.write can be a form of eval.\", left);\n    }\n\n    if (!option.evil && (m === \"eval\" || m === \"execScript\")) {\n      warning(\"eval is evil.\");\n    }\n\n    return that;\n  }, 160, true);\n  infix(\"(\", function (left, that) {\n    if (prevtoken.id !== \"}\" && prevtoken.id !== \")\") {\n      nobreak(prevtoken, token);\n    }\n\n    nospace();\n\n    if (option.immed && !left.immed && left.id === \"function\") {\n      warning(\"Wrap an immediate function invocation in parentheses \" + \"to assist the reader in understanding that the expression \" + \"is the result of a function, and not the function itself.\");\n    }\n\n    var n = 0,\n        p = [];\n\n    if (left) {\n      if (left.type === \"(identifier)\") {\n        if (left.value.match(/^[A-Z]([A-Z0-9_$]*[a-z][A-Za-z0-9_$]*)?$/)) {\n          if (\"Number String Boolean Date Object\".indexOf(left.value) === -1) {\n            if (left.value === \"Math\") {\n              warning(\"Math is not a function.\", left);\n            } else if (option.newcap) {\n              warning(\"Missing 'new' prefix when invoking a constructor.\", left);\n            }\n          }\n        }\n      }\n    }\n\n    if (nexttoken.id !== \")\") {\n      for (;;) {\n        p[p.length] = expression(10);\n        n += 1;\n\n        if (nexttoken.id !== \",\") {\n          break;\n        }\n\n        comma();\n      }\n    }\n\n    advance(\")\");\n    nospace(prevtoken, token);\n\n    if (typeof left === \"object\") {\n      if (left.value === \"parseInt\" && n === 1) {\n        warning(\"Missing radix parameter.\", token);\n      }\n\n      if (!option.evil) {\n        if (left.value === \"eval\" || left.value === \"Function\" || left.value === \"execScript\") {\n          warning(\"eval is evil.\", left);\n\n          if (p[0] && [0].id === \"(string)\") {\n            addInternalSrc(left, p[0].value);\n          }\n        } else if (p[0] && p[0].id === \"(string)\" && (left.value === \"setTimeout\" || left.value === \"setInterval\")) {\n          warning(\"Implied eval is evil. Pass a function instead of a string.\", left);\n          addInternalSrc(left, p[0].value); // window.setTimeout/setInterval\n        } else if (p[0] && p[0].id === \"(string)\" && left.value === \".\" && left.left.value === \"window\" && (left.right === \"setTimeout\" || left.right === \"setInterval\")) {\n          warning(\"Implied eval is evil. Pass a function instead of a string.\", left);\n          addInternalSrc(left, p[0].value);\n        }\n      }\n\n      if (!left.identifier && left.id !== \".\" && left.id !== \"[\" && left.id !== \"(\" && left.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n        warning(\"Bad invocation.\", left);\n      }\n    }\n\n    that.left = left;\n    return that;\n  }, 155, true).exps = true;\n  prefix(\"(\", function () {\n    nospace();\n\n    if (nexttoken.id === \"function\") {\n      nexttoken.immed = true;\n    }\n\n    var v = expression(0);\n    advance(\")\", this);\n    nospace(prevtoken, token);\n\n    if (option.immed && v.id === \"function\") {\n      if (nexttoken.id !== \"(\" && (nexttoken.id !== \".\" || peek().value !== \"call\" && peek().value !== \"apply\")) {\n        warning(\"Do not wrap function literals in parens unless they are to be immediately invoked.\", this);\n      }\n    }\n\n    return v;\n  });\n  infix(\"[\", function (left, that) {\n    nobreak(prevtoken, token);\n    nospace();\n    var e = expression(0),\n        s;\n\n    if (e && e.type === \"(string)\") {\n      if (!option.evil && (e.value === \"eval\" || e.value === \"execScript\")) {\n        warning(\"eval is evil.\", that);\n      }\n\n      countMember(e.value);\n\n      if (!option.sub && ix.test(e.value)) {\n        s = syntax[e.value];\n\n        if (!s || !s.reserved) {\n          warning(\"['{a}'] is better written in dot notation.\", prevtoken, e.value);\n        }\n      }\n    }\n\n    advance(\"]\", that);\n    nospace(prevtoken, token);\n    that.left = left;\n    that.right = e;\n    return that;\n  }, 160, true);\n  prefix(\"[\", function () {\n    var b = token.line !== nexttoken.line;\n    this.first = [];\n\n    if (b) {\n      indent += option.indent;\n\n      if (nexttoken.from === indent + option.indent) {\n        indent += option.indent;\n      }\n    }\n\n    while (nexttoken.id !== \"(end)\") {\n      while (nexttoken.id === \",\") {\n        if (!option.es5) warning(\"Extra comma.\");\n        advance(\",\");\n      }\n\n      if (nexttoken.id === \"]\") {\n        break;\n      }\n\n      if (b && token.line !== nexttoken.line) {\n        indentation();\n      }\n\n      this.first.push(expression(10));\n\n      if (nexttoken.id === \",\") {\n        comma();\n\n        if (nexttoken.id === \"]\" && !option.es5) {\n          warning(\"Extra comma.\", token);\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (b) {\n      indent -= option.indent;\n      indentation();\n    }\n\n    advance(\"]\", this);\n    return this;\n  }, 160);\n\n  function property_name() {\n    var id = optionalidentifier(true);\n\n    if (!id) {\n      if (nexttoken.id === \"(string)\") {\n        id = nexttoken.value;\n        advance();\n      } else if (nexttoken.id === \"(number)\") {\n        id = nexttoken.value.toString();\n        advance();\n      }\n    }\n\n    return id;\n  }\n\n  function functionparams() {\n    var next = nexttoken;\n    var params = [];\n    var ident;\n    advance(\"(\");\n    nospace();\n\n    if (nexttoken.id === \")\") {\n      advance(\")\");\n      return;\n    }\n\n    for (;;) {\n      ident = identifier(true);\n      params.push(ident);\n      addlabel(ident, \"unused\", token);\n\n      if (nexttoken.id === \",\") {\n        comma();\n      } else {\n        advance(\")\", next);\n        nospace(prevtoken, token);\n        return params;\n      }\n    }\n  }\n\n  function doFunction(name, statement) {\n    var f;\n    var oldOption = option;\n    var oldScope = scope;\n    option = Object.create(option);\n    scope = Object.create(scope);\n    funct = {\n      \"(name)\": name || \"\\\"\" + anonname + \"\\\"\",\n      \"(line)\": nexttoken.line,\n      \"(character)\": nexttoken.character,\n      \"(context)\": funct,\n      \"(breakage)\": 0,\n      \"(loopage)\": 0,\n      \"(metrics)\": createMetrics(nexttoken),\n      \"(scope)\": scope,\n      \"(statement)\": statement,\n      \"(tokens)\": {}\n    };\n    f = funct;\n    token.funct = funct;\n    functions.push(funct);\n\n    if (name) {\n      addlabel(name, \"function\");\n    }\n\n    funct[\"(params)\"] = functionparams();\n    funct[\"(metrics)\"].verifyMaxParametersPerFunction(funct[\"(params)\"]);\n    block(false, false, true);\n    funct[\"(metrics)\"].verifyMaxStatementsPerFunction();\n    funct[\"(metrics)\"].verifyMaxComplexityPerFunction();\n    scope = oldScope;\n    option = oldOption;\n    funct[\"(last)\"] = token.line;\n    funct[\"(lastcharacter)\"] = token.character;\n    funct = funct[\"(context)\"];\n    return f;\n  }\n\n  function createMetrics(functionStartToken) {\n    return {\n      statementCount: 0,\n      nestedBlockDepth: -1,\n      ComplexityCount: 1,\n      verifyMaxStatementsPerFunction: function () {\n        if (option.maxstatements && this.statementCount > option.maxstatements) {\n          var message = \"Too many statements per function (\" + this.statementCount + \").\";\n          warning(message, functionStartToken);\n        }\n      },\n      verifyMaxParametersPerFunction: function (params) {\n        params = params || [];\n\n        if (option.maxparams && params.length > option.maxparams) {\n          var message = \"Too many parameters per function (\" + params.length + \").\";\n          warning(message, functionStartToken);\n        }\n      },\n      verifyMaxNestedBlockDepthPerFunction: function () {\n        if (option.maxdepth && this.nestedBlockDepth > 0 && this.nestedBlockDepth === option.maxdepth + 1) {\n          var message = \"Blocks are nested too deeply (\" + this.nestedBlockDepth + \").\";\n          warning(message);\n        }\n      },\n      verifyMaxComplexityPerFunction: function () {\n        var max = option.maxcomplexity;\n        var cc = this.ComplexityCount;\n\n        if (max && cc > max) {\n          var message = \"Cyclomatic complexity is too high per function (\" + cc + \").\";\n          warning(message, functionStartToken);\n        }\n      }\n    };\n  }\n\n  function increaseComplexityCount() {\n    funct[\"(metrics)\"].ComplexityCount += 1;\n  }\n\n  (function (x) {\n    x.nud = function () {\n      var b, f, i, p, t;\n      var props = {}; // All properties, including accessors\n\n      function saveProperty(name, token) {\n        if (props[name] && is_own(props, name)) warning(\"Duplicate member '{a}'.\", nexttoken, i);else props[name] = {};\n        props[name].basic = true;\n        props[name].basicToken = token;\n      }\n\n      function saveSetter(name, token) {\n        if (props[name] && is_own(props, name)) {\n          if (props[name].basic || props[name].setter) warning(\"Duplicate member '{a}'.\", nexttoken, i);\n        } else {\n          props[name] = {};\n        }\n\n        props[name].setter = true;\n        props[name].setterToken = token;\n      }\n\n      function saveGetter(name) {\n        if (props[name] && is_own(props, name)) {\n          if (props[name].basic || props[name].getter) warning(\"Duplicate member '{a}'.\", nexttoken, i);\n        } else {\n          props[name] = {};\n        }\n\n        props[name].getter = true;\n        props[name].getterToken = token;\n      }\n\n      b = token.line !== nexttoken.line;\n\n      if (b) {\n        indent += option.indent;\n\n        if (nexttoken.from === indent + option.indent) {\n          indent += option.indent;\n        }\n      }\n\n      for (;;) {\n        if (nexttoken.id === \"}\") {\n          break;\n        }\n\n        if (b) {\n          indentation();\n        }\n\n        if (nexttoken.value === \"get\" && peek().id !== \":\") {\n          advance(\"get\");\n\n          if (!option.es5) {\n            error(\"get/set are ES5 features.\");\n          }\n\n          i = property_name();\n\n          if (!i) {\n            error(\"Missing property name.\");\n          }\n\n          saveGetter(i);\n          t = nexttoken;\n          adjacent(token, nexttoken);\n          f = doFunction();\n          p = f[\"(params)\"];\n\n          if (p) {\n            warning(\"Unexpected parameter '{a}' in get {b} function.\", t, p[0], i);\n          }\n\n          adjacent(token, nexttoken);\n        } else if (nexttoken.value === \"set\" && peek().id !== \":\") {\n          advance(\"set\");\n\n          if (!option.es5) {\n            error(\"get/set are ES5 features.\");\n          }\n\n          i = property_name();\n\n          if (!i) {\n            error(\"Missing property name.\");\n          }\n\n          saveSetter(i, nexttoken);\n          t = nexttoken;\n          adjacent(token, nexttoken);\n          f = doFunction();\n          p = f[\"(params)\"];\n\n          if (!p || p.length !== 1) {\n            warning(\"Expected a single parameter in set {a} function.\", t, i);\n          }\n        } else {\n          i = property_name();\n          saveProperty(i, nexttoken);\n\n          if (typeof i !== \"string\") {\n            break;\n          }\n\n          advance(\":\");\n          nonadjacent(token, nexttoken);\n          expression(10);\n        }\n\n        countMember(i);\n\n        if (nexttoken.id === \",\") {\n          comma();\n\n          if (nexttoken.id === \",\") {\n            warning(\"Extra comma.\", token);\n          } else if (nexttoken.id === \"}\" && !option.es5) {\n            warning(\"Extra comma.\", token);\n          }\n        } else {\n          break;\n        }\n      }\n\n      if (b) {\n        indent -= option.indent;\n        indentation();\n      }\n\n      advance(\"}\", this); // Check for lonely setters if in the ES5 mode.\n\n      if (option.es5) {\n        for (var name in props) {\n          if (is_own(props, name) && props[name].setter && !props[name].getter) {\n            warning(\"Setter is defined without getter.\", props[name].setterToken);\n          }\n        }\n      }\n\n      return this;\n    };\n\n    x.fud = function () {\n      error(\"Expected to see a statement and instead saw a block.\", token);\n    };\n  })(delim(\"{\")); // This Function is called when esnext option is set to true\n  // it adds the `const` statement to JSHINT\n\n\n  useESNextSyntax = function () {\n    var conststatement = stmt(\"const\", function (prefix) {\n      var id, name, value;\n      this.first = [];\n\n      for (;;) {\n        nonadjacent(token, nexttoken);\n        id = identifier();\n\n        if (funct[id] === \"const\") {\n          warning(\"const '\" + id + \"' has already been declared\");\n        }\n\n        if (funct[\"(global)\"] && predefined[id] === false) {\n          warning(\"Redefinition of '{a}'.\", token, id);\n        }\n\n        addlabel(id, \"const\");\n\n        if (prefix) {\n          break;\n        }\n\n        name = token;\n        this.first.push(token);\n\n        if (nexttoken.id !== \"=\") {\n          warning(\"const \" + \"'{a}' is initialized to 'undefined'.\", token, id);\n        }\n\n        if (nexttoken.id === \"=\") {\n          nonadjacent(token, nexttoken);\n          advance(\"=\");\n          nonadjacent(token, nexttoken);\n\n          if (nexttoken.id === \"undefined\") {\n            warning(\"It is not necessary to initialize \" + \"'{a}' to 'undefined'.\", token, id);\n          }\n\n          if (peek(0).id === \"=\" && nexttoken.identifier) {\n            error(\"Constant {a} was not declared correctly.\", nexttoken, nexttoken.value);\n          }\n\n          value = expression(0);\n          name.first = value;\n        }\n\n        if (nexttoken.id !== \",\") {\n          break;\n        }\n\n        comma();\n      }\n\n      return this;\n    });\n    conststatement.exps = true;\n  };\n\n  var varstatement = stmt(\"var\", function (prefix) {\n    // JavaScript does not have block scope. It only has function scope. So,\n    // declaring a variable in a block can have unexpected consequences.\n    var id, name, value;\n\n    if (funct[\"(onevar)\"] && option.onevar) {\n      warning(\"Too many var statements.\");\n    } else if (!funct[\"(global)\"]) {\n      funct[\"(onevar)\"] = true;\n    }\n\n    this.first = [];\n\n    for (;;) {\n      nonadjacent(token, nexttoken);\n      id = identifier();\n\n      if (option.esnext && funct[id] === \"const\") {\n        warning(\"const '\" + id + \"' has already been declared\");\n      }\n\n      if (funct[\"(global)\"] && predefined[id] === false) {\n        warning(\"Redefinition of '{a}'.\", token, id);\n      }\n\n      addlabel(id, \"unused\", token);\n\n      if (prefix) {\n        break;\n      }\n\n      name = token;\n      this.first.push(token);\n\n      if (nexttoken.id === \"=\") {\n        nonadjacent(token, nexttoken);\n        advance(\"=\");\n        nonadjacent(token, nexttoken);\n\n        if (nexttoken.id === \"undefined\") {\n          warning(\"It is not necessary to initialize '{a}' to 'undefined'.\", token, id);\n        }\n\n        if (peek(0).id === \"=\" && nexttoken.identifier) {\n          error(\"Variable {a} was not declared correctly.\", nexttoken, nexttoken.value);\n        }\n\n        value = expression(0);\n        name.first = value;\n      }\n\n      if (nexttoken.id !== \",\") {\n        break;\n      }\n\n      comma();\n    }\n\n    return this;\n  });\n  varstatement.exps = true;\n  blockstmt(\"function\", function () {\n    if (inblock) {\n      warning(\"Function declarations should not be placed in blocks. \" + \"Use a function expression or move the statement to the top of \" + \"the outer function.\", token);\n    }\n\n    var i = identifier();\n\n    if (option.esnext && funct[i] === \"const\") {\n      warning(\"const '\" + i + \"' has already been declared\");\n    }\n\n    adjacent(token, nexttoken);\n    addlabel(i, \"unction\", token);\n    doFunction(i, {\n      statement: true\n    });\n\n    if (nexttoken.id === \"(\" && nexttoken.line === token.line) {\n      error(\"Function declarations are not invocable. Wrap the whole function invocation in parens.\");\n    }\n\n    return this;\n  });\n  prefix(\"function\", function () {\n    var i = optionalidentifier();\n\n    if (i) {\n      adjacent(token, nexttoken);\n    } else {\n      nonadjacent(token, nexttoken);\n    }\n\n    doFunction(i);\n\n    if (!option.loopfunc && funct[\"(loopage)\"]) {\n      warning(\"Don't make functions within a loop.\");\n    }\n\n    return this;\n  });\n  blockstmt(\"if\", function () {\n    var t = nexttoken;\n    increaseComplexityCount();\n    advance(\"(\");\n    nonadjacent(this, t);\n    nospace();\n    expression(20);\n\n    if (nexttoken.id === \"=\") {\n      if (!option.boss) warning(\"Expected a conditional expression and instead saw an assignment.\");\n      advance(\"=\");\n      expression(20);\n    }\n\n    advance(\")\", t);\n    nospace(prevtoken, token);\n    block(true, true);\n\n    if (nexttoken.id === \"else\") {\n      nonadjacent(token, nexttoken);\n      advance(\"else\");\n\n      if (nexttoken.id === \"if\" || nexttoken.id === \"switch\") {\n        statement(true);\n      } else {\n        block(true, true);\n      }\n    }\n\n    return this;\n  });\n  blockstmt(\"try\", function () {\n    var b;\n\n    function doCatch() {\n      var oldScope = scope;\n      var e;\n      advance(\"catch\");\n      nonadjacent(token, nexttoken);\n      advance(\"(\");\n      scope = Object.create(oldScope);\n      e = nexttoken.value;\n\n      if (nexttoken.type !== \"(identifier)\") {\n        e = null;\n        warning(\"Expected an identifier and instead saw '{a}'.\", nexttoken, e);\n      }\n\n      advance();\n      advance(\")\");\n      funct = {\n        \"(name)\": \"(catch)\",\n        \"(line)\": nexttoken.line,\n        \"(character)\": nexttoken.character,\n        \"(context)\": funct,\n        \"(breakage)\": funct[\"(breakage)\"],\n        \"(loopage)\": funct[\"(loopage)\"],\n        \"(scope)\": scope,\n        \"(statement)\": false,\n        \"(metrics)\": createMetrics(nexttoken),\n        \"(catch)\": true,\n        \"(tokens)\": {}\n      };\n\n      if (e) {\n        addlabel(e, \"exception\");\n      }\n\n      token.funct = funct;\n      functions.push(funct);\n      block(false);\n      scope = oldScope;\n      funct[\"(last)\"] = token.line;\n      funct[\"(lastcharacter)\"] = token.character;\n      funct = funct[\"(context)\"];\n    }\n\n    block(false);\n\n    if (nexttoken.id === \"catch\") {\n      increaseComplexityCount();\n      doCatch();\n      b = true;\n    }\n\n    if (nexttoken.id === \"finally\") {\n      advance(\"finally\");\n      block(false);\n      return;\n    } else if (!b) {\n      error(\"Expected '{a}' and instead saw '{b}'.\", nexttoken, \"catch\", nexttoken.value);\n    }\n\n    return this;\n  });\n  blockstmt(\"while\", function () {\n    var t = nexttoken;\n    funct[\"(breakage)\"] += 1;\n    funct[\"(loopage)\"] += 1;\n    increaseComplexityCount();\n    advance(\"(\");\n    nonadjacent(this, t);\n    nospace();\n    expression(20);\n\n    if (nexttoken.id === \"=\") {\n      if (!option.boss) warning(\"Expected a conditional expression and instead saw an assignment.\");\n      advance(\"=\");\n      expression(20);\n    }\n\n    advance(\")\", t);\n    nospace(prevtoken, token);\n    block(true, true);\n    funct[\"(breakage)\"] -= 1;\n    funct[\"(loopage)\"] -= 1;\n    return this;\n  }).labelled = true;\n  blockstmt(\"with\", function () {\n    var t = nexttoken;\n\n    if (directive[\"use strict\"]) {\n      error(\"'with' is not allowed in strict mode.\", token);\n    } else if (!option.withstmt) {\n      warning(\"Don't use 'with'.\", token);\n    }\n\n    advance(\"(\");\n    nonadjacent(this, t);\n    nospace();\n    expression(0);\n    advance(\")\", t);\n    nospace(prevtoken, token);\n    block(true, true);\n    return this;\n  });\n  blockstmt(\"switch\", function () {\n    var t = nexttoken,\n        g = false;\n    funct[\"(breakage)\"] += 1;\n    advance(\"(\");\n    nonadjacent(this, t);\n    nospace();\n    this.condition = expression(20);\n    advance(\")\", t);\n    nospace(prevtoken, token);\n    nonadjacent(token, nexttoken);\n    t = nexttoken;\n    advance(\"{\");\n    nonadjacent(token, nexttoken);\n    indent += option.indent;\n    this.cases = [];\n\n    for (;;) {\n      switch (nexttoken.id) {\n        case \"case\":\n          switch (funct[\"(verb)\"]) {\n            case \"break\":\n            case \"case\":\n            case \"continue\":\n            case \"return\":\n            case \"switch\":\n            case \"throw\":\n              break;\n\n            default:\n              // You can tell JSHint that you don't use break intentionally by\n              // adding a comment /* falls through */ on a line just before\n              // the next `case`.\n              if (!ft.test(lines[nexttoken.line - 2])) {\n                warning(\"Expected a 'break' statement before 'case'.\", token);\n              }\n\n          }\n\n          indentation(-option.indent);\n          advance(\"case\");\n          this.cases.push(expression(20));\n          increaseComplexityCount();\n          g = true;\n          advance(\":\");\n          funct[\"(verb)\"] = \"case\";\n          break;\n\n        case \"default\":\n          switch (funct[\"(verb)\"]) {\n            case \"break\":\n            case \"continue\":\n            case \"return\":\n            case \"throw\":\n              break;\n\n            default:\n              if (!ft.test(lines[nexttoken.line - 2])) {\n                warning(\"Expected a 'break' statement before 'default'.\", token);\n              }\n\n          }\n\n          indentation(-option.indent);\n          advance(\"default\");\n          g = true;\n          advance(\":\");\n          break;\n\n        case \"}\":\n          indent -= option.indent;\n          indentation();\n          advance(\"}\", t);\n\n          if (this.cases.length === 1 || this.condition.id === \"true\" || this.condition.id === \"false\") {\n            if (!option.onecase) warning(\"This 'switch' should be an 'if'.\", this);\n          }\n\n          funct[\"(breakage)\"] -= 1;\n          funct[\"(verb)\"] = undefined;\n          return;\n\n        case \"(end)\":\n          error(\"Missing '{a}'.\", nexttoken, \"}\");\n          return;\n\n        default:\n          if (g) {\n            switch (token.id) {\n              case \",\":\n                error(\"Each value should have its own case label.\");\n                return;\n\n              case \":\":\n                g = false;\n                statements();\n                break;\n\n              default:\n                error(\"Missing ':' on a case clause.\", token);\n                return;\n            }\n          } else {\n            if (token.id === \":\") {\n              advance(\":\");\n              error(\"Unexpected '{a}'.\", token, \":\");\n              statements();\n            } else {\n              error(\"Expected '{a}' and instead saw '{b}'.\", nexttoken, \"case\", nexttoken.value);\n              return;\n            }\n          }\n\n      }\n    }\n  }).labelled = true;\n  stmt(\"debugger\", function () {\n    if (!option.debug) {\n      warning(\"All 'debugger' statements should be removed.\");\n    }\n\n    return this;\n  }).exps = true;\n\n  (function () {\n    var x = stmt(\"do\", function () {\n      funct[\"(breakage)\"] += 1;\n      funct[\"(loopage)\"] += 1;\n      increaseComplexityCount();\n      this.first = block(true);\n      advance(\"while\");\n      var t = nexttoken;\n      nonadjacent(token, t);\n      advance(\"(\");\n      nospace();\n      expression(20);\n\n      if (nexttoken.id === \"=\") {\n        if (!option.boss) warning(\"Expected a conditional expression and instead saw an assignment.\");\n        advance(\"=\");\n        expression(20);\n      }\n\n      advance(\")\", t);\n      nospace(prevtoken, token);\n      funct[\"(breakage)\"] -= 1;\n      funct[\"(loopage)\"] -= 1;\n      return this;\n    });\n    x.labelled = true;\n    x.exps = true;\n  })();\n\n  blockstmt(\"for\", function () {\n    var s,\n        t = nexttoken;\n    funct[\"(breakage)\"] += 1;\n    funct[\"(loopage)\"] += 1;\n    increaseComplexityCount();\n    advance(\"(\");\n    nonadjacent(this, t);\n    nospace();\n\n    if (peek(nexttoken.id === \"var\" ? 1 : 0).id === \"in\") {\n      if (nexttoken.id === \"var\") {\n        advance(\"var\");\n        varstatement.fud.call(varstatement, true);\n      } else {\n        switch (funct[nexttoken.value]) {\n          case \"unused\":\n            funct[nexttoken.value] = \"var\";\n            break;\n\n          case \"var\":\n            break;\n\n          default:\n            warning(\"Bad for in variable '{a}'.\", nexttoken, nexttoken.value);\n        }\n\n        advance();\n      }\n\n      advance(\"in\");\n      expression(20);\n      advance(\")\", t);\n      s = block(true, true);\n\n      if (option.forin && s && (s.length > 1 || typeof s[0] !== \"object\" || s[0].value !== \"if\")) {\n        warning(\"The body of a for in should be wrapped in an if statement to filter \" + \"unwanted properties from the prototype.\", this);\n      }\n\n      funct[\"(breakage)\"] -= 1;\n      funct[\"(loopage)\"] -= 1;\n      return this;\n    } else {\n      if (nexttoken.id !== \";\") {\n        if (nexttoken.id === \"var\") {\n          advance(\"var\");\n          varstatement.fud.call(varstatement);\n        } else {\n          for (;;) {\n            expression(0, \"for\");\n\n            if (nexttoken.id !== \",\") {\n              break;\n            }\n\n            comma();\n          }\n        }\n      }\n\n      nolinebreak(token);\n      advance(\";\");\n\n      if (nexttoken.id !== \";\") {\n        expression(20);\n\n        if (nexttoken.id === \"=\") {\n          if (!option.boss) warning(\"Expected a conditional expression and instead saw an assignment.\");\n          advance(\"=\");\n          expression(20);\n        }\n      }\n\n      nolinebreak(token);\n      advance(\";\");\n\n      if (nexttoken.id === \";\") {\n        error(\"Expected '{a}' and instead saw '{b}'.\", nexttoken, \")\", \";\");\n      }\n\n      if (nexttoken.id !== \")\") {\n        for (;;) {\n          expression(0, \"for\");\n\n          if (nexttoken.id !== \",\") {\n            break;\n          }\n\n          comma();\n        }\n      }\n\n      advance(\")\", t);\n      nospace(prevtoken, token);\n      block(true, true);\n      funct[\"(breakage)\"] -= 1;\n      funct[\"(loopage)\"] -= 1;\n      return this;\n    }\n  }).labelled = true;\n  stmt(\"break\", function () {\n    var v = nexttoken.value;\n    if (funct[\"(breakage)\"] === 0) warning(\"Unexpected '{a}'.\", nexttoken, this.value);\n    if (!option.asi) nolinebreak(this);\n\n    if (nexttoken.id !== \";\") {\n      if (token.line === nexttoken.line) {\n        if (funct[v] !== \"label\") {\n          warning(\"'{a}' is not a statement label.\", nexttoken, v);\n        } else if (scope[v] !== funct) {\n          warning(\"'{a}' is out of scope.\", nexttoken, v);\n        }\n\n        this.first = nexttoken;\n        advance();\n      }\n    }\n\n    reachable(\"break\");\n    return this;\n  }).exps = true;\n  stmt(\"continue\", function () {\n    var v = nexttoken.value;\n    if (funct[\"(breakage)\"] === 0) warning(\"Unexpected '{a}'.\", nexttoken, this.value);\n    if (!option.asi) nolinebreak(this);\n\n    if (nexttoken.id !== \";\") {\n      if (token.line === nexttoken.line) {\n        if (funct[v] !== \"label\") {\n          warning(\"'{a}' is not a statement label.\", nexttoken, v);\n        } else if (scope[v] !== funct) {\n          warning(\"'{a}' is out of scope.\", nexttoken, v);\n        }\n\n        this.first = nexttoken;\n        advance();\n      }\n    } else if (!funct[\"(loopage)\"]) {\n      warning(\"Unexpected '{a}'.\", nexttoken, this.value);\n    }\n\n    reachable(\"continue\");\n    return this;\n  }).exps = true;\n  stmt(\"return\", function () {\n    if (this.line === nexttoken.line) {\n      if (nexttoken.id === \"(regexp)\") warning(\"Wrap the /regexp/ literal in parens to disambiguate the slash operator.\");\n\n      if (nexttoken.id !== \";\" && !nexttoken.reach) {\n        nonadjacent(token, nexttoken);\n\n        if (peek().value === \"=\" && !option.boss) {\n          warningAt(\"Did you mean to return a conditional instead of an assignment?\", token.line, token.character + 1);\n        }\n\n        this.first = expression(0);\n      }\n    } else if (!option.asi) {\n      nolinebreak(this); // always warn (Line breaking error)\n    }\n\n    reachable(\"return\");\n    return this;\n  }).exps = true;\n  stmt(\"throw\", function () {\n    nolinebreak(this);\n    nonadjacent(token, nexttoken);\n    this.first = expression(20);\n    reachable(\"throw\");\n    return this;\n  }).exps = true; //  Superfluous reserved words\n\n  reserve(\"class\");\n  reserve(\"const\");\n  reserve(\"enum\");\n  reserve(\"export\");\n  reserve(\"extends\");\n  reserve(\"import\");\n  reserve(\"super\");\n  reserve(\"let\");\n  reserve(\"yield\");\n  reserve(\"implements\");\n  reserve(\"interface\");\n  reserve(\"package\");\n  reserve(\"private\");\n  reserve(\"protected\");\n  reserve(\"public\");\n  reserve(\"static\"); // Parse JSON\n\n  function jsonValue() {\n    function jsonObject() {\n      var o = {},\n          t = nexttoken;\n      advance(\"{\");\n\n      if (nexttoken.id !== \"}\") {\n        for (;;) {\n          if (nexttoken.id === \"(end)\") {\n            error(\"Missing '}' to match '{' from line {a}.\", nexttoken, t.line);\n          } else if (nexttoken.id === \"}\") {\n            warning(\"Unexpected comma.\", token);\n            break;\n          } else if (nexttoken.id === \",\") {\n            error(\"Unexpected comma.\", nexttoken);\n          } else if (nexttoken.id !== \"(string)\") {\n            warning(\"Expected a string and instead saw {a}.\", nexttoken, nexttoken.value);\n          }\n\n          if (o[nexttoken.value] === true) {\n            warning(\"Duplicate key '{a}'.\", nexttoken, nexttoken.value);\n          } else if (nexttoken.value === \"__proto__\" && !option.proto || nexttoken.value === \"__iterator__\" && !option.iterator) {\n            warning(\"The '{a}' key may produce unexpected results.\", nexttoken, nexttoken.value);\n          } else {\n            o[nexttoken.value] = true;\n          }\n\n          advance();\n          advance(\":\");\n          jsonValue();\n\n          if (nexttoken.id !== \",\") {\n            break;\n          }\n\n          advance(\",\");\n        }\n      }\n\n      advance(\"}\");\n    }\n\n    function jsonArray() {\n      var t = nexttoken;\n      advance(\"[\");\n\n      if (nexttoken.id !== \"]\") {\n        for (;;) {\n          if (nexttoken.id === \"(end)\") {\n            error(\"Missing ']' to match '[' from line {a}.\", nexttoken, t.line);\n          } else if (nexttoken.id === \"]\") {\n            warning(\"Unexpected comma.\", token);\n            break;\n          } else if (nexttoken.id === \",\") {\n            error(\"Unexpected comma.\", nexttoken);\n          }\n\n          jsonValue();\n\n          if (nexttoken.id !== \",\") {\n            break;\n          }\n\n          advance(\",\");\n        }\n      }\n\n      advance(\"]\");\n    }\n\n    switch (nexttoken.id) {\n      case \"{\":\n        jsonObject();\n        break;\n\n      case \"[\":\n        jsonArray();\n        break;\n\n      case \"true\":\n      case \"false\":\n      case \"null\":\n      case \"(number)\":\n      case \"(string)\":\n        advance();\n        break;\n\n      case \"-\":\n        advance(\"-\");\n\n        if (token.character !== nexttoken.from) {\n          warning(\"Unexpected space after '-'.\", token);\n        }\n\n        adjacent(token, nexttoken);\n        advance(\"(number)\");\n        break;\n\n      default:\n        error(\"Expected a JSON value.\", nexttoken);\n    }\n  } // The actual JSHINT function itself.\n\n\n  var itself = function (s, o, g) {\n    var a, i, k, x;\n    var optionKeys;\n    var newOptionObj = {};\n\n    if (o && o.scope) {\n      JSHINT.scope = o.scope;\n    } else {\n      JSHINT.errors = [];\n      JSHINT.undefs = [];\n      JSHINT.internals = [];\n      JSHINT.blacklist = {};\n      JSHINT.scope = \"(main)\";\n    }\n\n    predefined = Object.create(standard);\n    declared = Object.create(null);\n    combine(predefined, g || {});\n\n    if (o) {\n      a = o.predef;\n\n      if (a) {\n        if (!Array.isArray(a) && typeof a === \"object\") {\n          a = Object.keys(a);\n        }\n\n        a.forEach(function (item) {\n          var slice;\n\n          if (item[0] === \"-\") {\n            slice = item.slice(1);\n            JSHINT.blacklist[slice] = slice;\n          } else {\n            predefined[item] = true;\n          }\n        });\n      }\n\n      optionKeys = Object.keys(o);\n\n      for (x = 0; x < optionKeys.length; x++) {\n        newOptionObj[optionKeys[x]] = o[optionKeys[x]];\n        if (optionKeys[x] === \"newcap\" && o[optionKeys[x]] === false) newOptionObj[\"(explicitNewcap)\"] = true;\n        if (optionKeys[x] === \"indent\") newOptionObj.white = true;\n      }\n    }\n\n    option = newOptionObj;\n    option.indent = option.indent || 4;\n    option.maxerr = option.maxerr || 50;\n    tab = \"\";\n\n    for (i = 0; i < option.indent; i += 1) {\n      tab += \" \";\n    }\n\n    indent = 1;\n    global = Object.create(predefined);\n    scope = global;\n    funct = {\n      \"(global)\": true,\n      \"(name)\": \"(global)\",\n      \"(scope)\": scope,\n      \"(breakage)\": 0,\n      \"(loopage)\": 0,\n      \"(tokens)\": {},\n      \"(metrics)\": createMetrics(nexttoken)\n    };\n    functions = [funct];\n    urls = [];\n    stack = null;\n    member = {};\n    membersOnly = null;\n    implied = {};\n    inblock = false;\n    lookahead = [];\n    jsonmode = false;\n    warnings = 0;\n    lines = [];\n    unuseds = [];\n\n    if (!isString(s) && !Array.isArray(s)) {\n      errorAt(\"Input is neither a string nor an array of strings.\", 0);\n      return false;\n    }\n\n    if (isString(s) && /^\\s*$/g.test(s)) {\n      errorAt(\"Input is an empty string.\", 0);\n      return false;\n    }\n\n    if (s.length === 0) {\n      errorAt(\"Input is an empty array.\", 0);\n      return false;\n    }\n\n    lex.init(s);\n    prereg = true;\n    directive = {};\n    prevtoken = token = nexttoken = syntax[\"(begin)\"]; // Check options\n\n    for (var name in o) {\n      if (is_own(o, name)) {\n        checkOption(name, token);\n      }\n    }\n\n    assume(); // combine the passed globals after we've assumed all our options\n\n    combine(predefined, g || {}); //reset values\n\n    comma.first = true;\n    quotmark = undefined;\n\n    try {\n      advance();\n\n      switch (nexttoken.id) {\n        case \"{\":\n        case \"[\":\n          option.laxbreak = true;\n          jsonmode = true;\n          jsonValue();\n          break;\n\n        default:\n          directives();\n\n          if (directive[\"use strict\"] && !option.globalstrict) {\n            warning(\"Use the function form of \\\"use strict\\\".\", prevtoken);\n          }\n\n          statements();\n      }\n\n      advance(nexttoken && nexttoken.value !== \".\" ? \"(end)\" : undefined);\n\n      var markDefined = function (name, context) {\n        do {\n          if (typeof context[name] === \"string\") {\n            // JSHINT marks unused variables as 'unused' and\n            // unused function declaration as 'unction'. This\n            // code changes such instances back 'var' and\n            // 'closure' so that the code in JSHINT.data()\n            // doesn't think they're unused.\n            if (context[name] === \"unused\") context[name] = \"var\";else if (context[name] === \"unction\") context[name] = \"closure\";\n            return true;\n          }\n\n          context = context[\"(context)\"];\n        } while (context);\n\n        return false;\n      };\n\n      var clearImplied = function (name, line) {\n        if (!implied[name]) return;\n        var newImplied = [];\n\n        for (var i = 0; i < implied[name].length; i += 1) {\n          if (implied[name][i] !== line) newImplied.push(implied[name][i]);\n        }\n\n        if (newImplied.length === 0) delete implied[name];else implied[name] = newImplied;\n      };\n\n      var warnUnused = function (name, token) {\n        var line = token.line;\n        var chr = token.character;\n        if (option.unused) warningAt(\"'{a}' is defined but never used.\", line, chr, name);\n        unuseds.push({\n          name: name,\n          line: line,\n          character: chr\n        });\n      };\n\n      var checkUnused = function (func, key) {\n        var type = func[key];\n        var token = func[\"(tokens)\"][key];\n        if (key.charAt(0) === \"(\") return;\n        if (type !== \"unused\" && type !== \"unction\") return; // Params are checked separately from other variables.\n\n        if (func[\"(params)\"] && func[\"(params)\"].indexOf(key) !== -1) return;\n        warnUnused(key, token);\n      }; // Check queued 'x is not defined' instances to see if they're still undefined.\n\n\n      for (i = 0; i < JSHINT.undefs.length; i += 1) {\n        k = JSHINT.undefs[i].slice(0);\n\n        if (markDefined(k[2].value, k[0])) {\n          clearImplied(k[2].value, k[2].line);\n        } else {\n          warning.apply(warning, k.slice(1));\n        }\n      }\n\n      functions.forEach(function (func) {\n        for (var key in func) {\n          if (is_own(func, key)) {\n            checkUnused(func, key);\n          }\n        }\n\n        if (!func[\"(params)\"]) return;\n        var params = func[\"(params)\"].slice();\n        var param = params.pop();\n        var type;\n\n        while (param) {\n          type = func[param]; // 'undefined' is a special case for (function (window, undefined) { ... })();\n          // patterns.\n\n          if (param === \"undefined\") return;\n          if (type !== \"unused\" && type !== \"unction\") return;\n          warnUnused(param, func[\"(tokens)\"][param]);\n          param = params.pop();\n        }\n      });\n\n      for (var key in declared) {\n        if (is_own(declared, key) && !is_own(global, key)) {\n          warnUnused(key, declared[key]);\n        }\n      }\n    } catch (e) {\n      if (e) {\n        var nt = nexttoken || {};\n        JSHINT.errors.push({\n          raw: e.raw,\n          reason: e.message,\n          line: e.line || nt.line,\n          character: e.character || nt.from\n        }, null);\n      }\n    } // Loop over the listed \"internals\", and check them as well.\n\n\n    if (JSHINT.scope === \"(main)\") {\n      o = o || {};\n\n      for (i = 0; i < JSHINT.internals.length; i += 1) {\n        k = JSHINT.internals[i];\n        o.scope = k.elem;\n        itself(k.value, o, g);\n      }\n    }\n\n    return JSHINT.errors.length === 0;\n  }; // Data summary.\n\n\n  itself.data = function () {\n    var data = {\n      functions: [],\n      options: option\n    };\n    var implieds = [];\n    var members = [];\n    var fu, f, i, j, n, globals;\n\n    if (itself.errors.length) {\n      data.errors = itself.errors;\n    }\n\n    if (jsonmode) {\n      data.json = true;\n    }\n\n    for (n in implied) {\n      if (is_own(implied, n)) {\n        implieds.push({\n          name: n,\n          line: implied[n]\n        });\n      }\n    }\n\n    if (implieds.length > 0) {\n      data.implieds = implieds;\n    }\n\n    if (urls.length > 0) {\n      data.urls = urls;\n    }\n\n    globals = Object.keys(scope);\n\n    if (globals.length > 0) {\n      data.globals = globals;\n    }\n\n    for (i = 1; i < functions.length; i += 1) {\n      f = functions[i];\n      fu = {};\n\n      for (j = 0; j < functionicity.length; j += 1) {\n        fu[functionicity[j]] = [];\n      }\n\n      for (j = 0; j < functionicity.length; j += 1) {\n        if (fu[functionicity[j]].length === 0) {\n          delete fu[functionicity[j]];\n        }\n      }\n\n      fu.name = f[\"(name)\"];\n      fu.param = f[\"(params)\"];\n      fu.line = f[\"(line)\"];\n      fu.character = f[\"(character)\"];\n      fu.last = f[\"(last)\"];\n      fu.lastcharacter = f[\"(lastcharacter)\"];\n      data.functions.push(fu);\n    }\n\n    if (unuseds.length > 0) {\n      data.unused = unuseds;\n    }\n\n    members = [];\n\n    for (n in member) {\n      if (typeof member[n] === \"number\") {\n        data.member = member;\n        break;\n      }\n    }\n\n    return data;\n  };\n\n  itself.jshint = itself;\n  return itself;\n}(); // Make JSHINT a Node module, if possible.\n\n\nif (typeof exports === \"object\" && exports) {\n  exports.JSHINT = JSHINT;\n}","map":{"version":3,"sources":["/home/harsha/Desktop/ug2 spring SEM2/DAss/mongo/frontend/node_modules/jshint/packages/jshint/jshint.js"],"names":["JSHINT","anonname","bang","boolOptions","asi","bitwise","boss","browser","camelcase","couch","curly","debug","devel","dojo","eqeqeq","eqnull","es5","esnext","evil","expr","forin","funcscope","globalstrict","immed","iterator","jquery","lastsemic","latedef","laxbreak","laxcomma","loopfunc","mootools","multistr","newcap","noarg","node","noempty","nonew","nonstandard","nomen","onevar","onecase","passfail","plusplus","proto","prototypejs","regexdash","regexp","rhino","undef","unused","scripturl","shadow","smarttabs","strict","sub","supernew","trailing","validthis","withstmt","white","worker","wsh","yui","valOptions","maxlen","indent","maxerr","predef","quotmark","scope","maxstatements","maxdepth","maxparams","maxcomplexity","invertedOptions","renamedOptions","eqeq","vars","windows","ArrayBuffer","ArrayBufferView","Audio","Blob","addEventListener","applicationCache","atob","blur","btoa","clearInterval","clearTimeout","close","closed","DataView","DOMParser","defaultStatus","document","event","FileReader","Float32Array","Float64Array","FormData","focus","frames","getComputedStyle","HTMLElement","HTMLAnchorElement","HTMLBaseElement","HTMLBlockquoteElement","HTMLBodyElement","HTMLBRElement","HTMLButtonElement","HTMLCanvasElement","HTMLDirectoryElement","HTMLDivElement","HTMLDListElement","HTMLFieldSetElement","HTMLFontElement","HTMLFormElement","HTMLFrameElement","HTMLFrameSetElement","HTMLHeadElement","HTMLHeadingElement","HTMLHRElement","HTMLHtmlElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLIsIndexElement","HTMLLabelElement","HTMLLayerElement","HTMLLegendElement","HTMLLIElement","HTMLLinkElement","HTMLMapElement","HTMLMenuElement","HTMLMetaElement","HTMLModElement","HTMLObjectElement","HTMLOListElement","HTMLOptGroupElement","HTMLOptionElement","HTMLParagraphElement","HTMLParamElement","HTMLPreElement","HTMLQuoteElement","HTMLScriptElement","HTMLSelectElement","HTMLStyleElement","HTMLTableCaptionElement","HTMLTableCellElement","HTMLTableColElement","HTMLTableElement","HTMLTableRowElement","HTMLTableSectionElement","HTMLTextAreaElement","HTMLTitleElement","HTMLUListElement","HTMLVideoElement","history","Int16Array","Int32Array","Int8Array","Image","length","localStorage","location","MessageChannel","MessageEvent","MessagePort","moveBy","moveTo","MutationObserver","name","Node","NodeFilter","navigator","onbeforeunload","onblur","onerror","onfocus","onload","onresize","onunload","open","openDatabase","opener","Option","parent","print","removeEventListener","resizeBy","resizeTo","screen","scroll","scrollBy","scrollTo","sessionStorage","setInterval","setTimeout","SharedWorker","status","top","Uint16Array","Uint32Array","Uint8Array","WebSocket","window","Worker","XMLHttpRequest","XMLSerializer","XPathEvaluator","XPathException","XPathExpression","XPathNamespace","XPathNSResolver","XPathResult","respond","getRow","emit","send","start","sum","log","exports","module","provides","declared","alert","confirm","console","Debug","opera","prompt","dijit","dojox","define","funct","functionicity","functions","global","implied","inblock","jsonmode","jQuery","lines","lookahead","member","membersOnly","Asset","Browser","Chain","Class","Color","Cookie","Core","Document","DomReady","DOMEvent","DOMReady","Drag","Element","Elements","Event","Events","Fx","Group","Hash","HtmlTable","Iframe","IframeShim","InputValidator","instanceOf","Keyboard","Locale","Mask","MooTools","Native","Options","OverText","Request","Scroller","Slick","Slider","Sortables","Spinner","Swiff","Tips","Type","typeOf","URI","Window","nexttoken","__filename","__dirname","Buffer","GLOBAL","process","require","noreach","option","predefined","prereg","prevtoken","Abstract","Ajax","Enumerable","Field","Form","Insertion","ObjectRange","PeriodicalExecuter","Position","Prototype","Selector","Template","Toggle","Try","Autocompleter","Builder","Control","Draggable","Draggables","Droppables","Effect","Sortable","SortableObserver","Sound","Scriptaculous","defineClass","deserialize","gc","help","importPackage","load","loadClass","quit","readFile","readUrl","runCommand","seal","serialize","spawn","sync","toint32","version","stack","standard","Array","Boolean","Date","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","Error","EvalError","Function","hasOwnProperty","isFinite","isNaN","JSON","Map","Math","NaN","Number","Object","parseInt","parseFloat","RangeError","ReferenceError","RegExp","Set","String","SyntaxError","TypeError","URIError","WeakMap","escape","unescape","directive","syntax","tab","token","unuseds","urls","useESNextSyntax","warnings","importScripts","postMessage","self","ActiveXObject","Enumerator","GetObject","ScriptEngine","ScriptEngineBuildVersion","ScriptEngineMajorVersion","ScriptEngineMinorVersion","VBArray","WSH","WScript","XDomainRequest","YUI","Y","YUI_config","ax","cx","tx","nx","nxg","lx","ix","jx","ft","F","is_own","object","prototype","call","checkOption","t","undefined","warning","isString","obj","toString","isArray","o","apply","forEach","fn","len","i","indexOf","searchElement","n","arguments","Infinity","floor","abs","k","max","create","keys","a","push","isAlpha","str","isDigit","isIdentifier","value","identifier","supplant","data","replace","b","r","combine","blacklist","updatePredefined","key","assume","message","line","chr","percentage","character","raw","isundef","m","undefs","c","d","ch","l","w","id","from","evidence","reason","errors","warningAt","error","errorAt","addInternalSrc","elem","src","internals","lex","s","nextLine","at","match","tw","search","test","it","type","checkName","hasDangling","charAt","init","source","split","substr","range","begin","end","slice","captures","depth","high","low","q","isLiteral","isInRange","x","exec","r1","string","j","allowNewLine","esc","fromCharCode","unclosedString","cl","cf","comment","g","klass","addlabel","doOption","nt","quotmarkValue","filter","tn","v","minus","loop","numericVals","peek","p","advance","shift","expression","rbp","initial","left","isObject","fud","nud","lbp","first","led","adjacent","right","nobreak","nospace","nonadjacent","nobreaknonadjacent","indentation","bias","nolinebreak","comma","symbol","delim","stmt","f","reserved","blockstmt","block","reserveName","prefix","arity","reserve","reservevar","infix","relation","isPoorRelation","assignop","exps","that","bitwiseassignop","suffix","optionalidentifier","fnparam","reachable","reach","statement","noindent","labelled","label","statements","startLine","directives","pn","ordinary","isfunc","old_indent","metrics","nestedBlockDepth","verifyMaxNestedBlockDepthPerFunction","statementCount","countMember","note_implied","e","property_name","functionparams","next","params","ident","doFunction","oldOption","oldScope","createMetrics","verifyMaxParametersPerFunction","verifyMaxStatementsPerFunction","verifyMaxComplexityPerFunction","functionStartToken","ComplexityCount","cc","increaseComplexityCount","props","saveProperty","basic","basicToken","saveSetter","setter","setterToken","saveGetter","getter","getterToken","conststatement","varstatement","doCatch","condition","cases","jsonValue","jsonObject","jsonArray","itself","optionKeys","newOptionObj","item","markDefined","context","clearImplied","newImplied","warnUnused","checkUnused","func","param","pop","options","implieds","members","fu","globals","json","last","lastcharacter","jshint"],"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","sourcesContent":["/*!\n * JSHint, by JSHint Community.\n *\n * Licensed under the same slightly modified MIT license that JSLint is.\n * It stops evil-doers everywhere.\n *\n * JSHint is a derivative work of JSLint:\n *\n *   Copyright (c) 2002 Douglas Crockford  (www.JSLint.com)\n *\n *   Permission is hereby granted, free of charge, to any person obtaining\n *   a copy of this software and associated documentation files (the \"Software\"),\n *   to deal in the Software without restriction, including without limitation\n *   the rights to use, copy, modify, merge, publish, distribute, sublicense,\n *   and/or sell copies of the Software, and to permit persons to whom\n *   the Software is furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included\n *   in all copies or substantial portions of the Software.\n *\n *   The Software shall be used for Good, not Evil.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n *   DEALINGS IN THE SOFTWARE.\n *\n * JSHint was forked from the 2010-12-16 edition of JSLint.\n *\n */\n\n/*\n JSHINT is a global function. It takes two parameters.\n\n     var myResult = JSHINT(source, option);\n\n The first parameter is either a string or an array of strings. If it is a\n string, it will be split on '\\n' or '\\r'. If it is an array of strings, it\n is assumed that each string represents one line. The source can be a\n JavaScript text or a JSON text.\n\n The second parameter is an optional object of options which control the\n operation of JSHINT. Most of the options are booleans: They are all\n optional and have a default value of false. One of the options, predef,\n can be an array of names, which will be used to declare global variables,\n or an object whose keys are used as global names, with a boolean value\n that determines if they are assignable.\n\n If it checks out, JSHINT returns true. Otherwise, it returns false.\n\n If false, you can inspect JSHINT.errors to find out the problems.\n JSHINT.errors is an array of objects containing these members:\n\n {\n     line      : The line (relative to 1) at which the lint was found\n     character : The character (relative to 1) at which the lint was found\n     reason    : The problem\n     evidence  : The text line in which the problem occurred\n     raw       : The raw message before the details were inserted\n     a         : The first detail\n     b         : The second detail\n     c         : The third detail\n     d         : The fourth detail\n }\n\n If a fatal error was found, a null will be the last element of the\n JSHINT.errors array.\n\n You can request a data structure which contains JSHint's results.\n\n     var myData = JSHINT.data();\n\n It returns a structure with this form:\n\n {\n     errors: [\n         {\n             line: NUMBER,\n             character: NUMBER,\n             reason: STRING,\n             evidence: STRING\n         }\n     ],\n     functions: [\n         name: STRING,\n         line: NUMBER,\n         character: NUMBER,\n         last: NUMBER,\n         lastcharacter: NUMBER,\n         param: [\n             STRING\n         ],\n         closure: [\n             STRING\n         ],\n         var: [\n             STRING\n         ],\n         exception: [\n             STRING\n         ],\n         outer: [\n             STRING\n         ],\n         unused: [\n             STRING\n         ],\n         global: [\n             STRING\n         ],\n         label: [\n             STRING\n         ]\n     ],\n     globals: [\n         STRING\n     ],\n     member: {\n         STRING: NUMBER\n     },\n     unused: [\n         {\n             name: STRING,\n             line: NUMBER\n         }\n     ],\n     implieds: [\n         {\n             name: STRING,\n             line: NUMBER\n         }\n     ],\n     urls: [\n         STRING\n     ],\n     json: BOOLEAN\n }\n\n Empty arrays will not be included.\n\n*/\n\n/*jshint\n evil: true, nomen: false, onevar: false, regexp: false, strict: true, boss: true,\n undef: true, maxlen: 100, indent: 4, quotmark: double, unused: true\n*/\n\n/*members \"\\b\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"!=\", \"!==\", \"\\\"\", \"%\", \"(begin)\",\n \"(breakage)\", \"(character)\", \"(context)\", \"(error)\", \"(explicitNewcap)\", \"(global)\",\n \"(identifier)\", \"(last)\", \"(lastcharacter)\", \"(line)\", \"(loopage)\", \"(metrics)\",\n \"(name)\", \"(onevar)\", \"(params)\", \"(scope)\", \"(statement)\", \"(verb)\", \"(tokens)\", \"(catch)\",\n \"*\", \"+\", \"++\", \"-\", \"--\", \"\\/\", \"<\", \"<=\", \"==\",\n \"===\", \">\", \">=\", $, $$, $A, $F, $H, $R, $break, $continue, $w, Abstract, Ajax,\n __filename, __dirname, ActiveXObject, Array, ArrayBuffer, ArrayBufferView, Audio,\n Autocompleter, Asset, Boolean, Builder, Buffer, Browser, Blob, COM, CScript, Canvas,\n CustomAnimation, Class, Control, ComplexityCount, Chain, Color, Cookie, Core, DataView, Date,\n Debug, Draggable, Draggables, Droppables, Document, DomReady, DOMEvent, DOMReady, DOMParser,\n Drag, E, Enumerator, Enumerable, Element, Elements, Error, Effect, EvalError, Event,\n Events, FadeAnimation, Field, Flash, Float32Array, Float64Array, Form,\n FormField, Frame, FormData, Function, Fx, GetObject, Group, Hash, HotKey,\n HTMLElement, HTMLAnchorElement, HTMLBaseElement, HTMLBlockquoteElement,\n HTMLBodyElement, HTMLBRElement, HTMLButtonElement, HTMLCanvasElement, HTMLDirectoryElement,\n HTMLDivElement, HTMLDListElement, HTMLFieldSetElement,\n HTMLFontElement, HTMLFormElement, HTMLFrameElement, HTMLFrameSetElement,\n HTMLHeadElement, HTMLHeadingElement, HTMLHRElement, HTMLHtmlElement,\n HTMLIFrameElement, HTMLImageElement, HTMLInputElement, HTMLIsIndexElement,\n HTMLLabelElement, HTMLLayerElement, HTMLLegendElement, HTMLLIElement,\n HTMLLinkElement, HTMLMapElement, HTMLMenuElement, HTMLMetaElement,\n HTMLModElement, HTMLObjectElement, HTMLOListElement, HTMLOptGroupElement,\n HTMLOptionElement, HTMLParagraphElement, HTMLParamElement, HTMLPreElement,\n HTMLQuoteElement, HTMLScriptElement, HTMLSelectElement, HTMLStyleElement,\n HtmlTable, HTMLTableCaptionElement, HTMLTableCellElement, HTMLTableColElement,\n HTMLTableElement, HTMLTableRowElement, HTMLTableSectionElement,\n HTMLTextAreaElement, HTMLTitleElement, HTMLUListElement, HTMLVideoElement,\n Iframe, IframeShim, Image, importScripts, Int16Array, Int32Array, Int8Array,\n Insertion, InputValidator, JSON, Keyboard, Locale, LN10, LN2, LOG10E, LOG2E,\n MAX_VALUE, MIN_VALUE, Map, Mask, Math, MenuItem, MessageChannel, MessageEvent, MessagePort,\n MoveAnimation, MooTools, MutationObserver, NaN, Native, NEGATIVE_INFINITY, Node, NodeFilter,\n Number, Object, ObjectRange,\n Option, Options, OverText, PI, POSITIVE_INFINITY, PeriodicalExecuter, Point, Position, Prototype,\n RangeError, Rectangle, ReferenceError, RegExp, ResizeAnimation, Request, RotateAnimation, Set,\n SQRT1_2, SQRT2, ScrollBar, ScriptEngine, ScriptEngineBuildVersion,\n ScriptEngineMajorVersion, ScriptEngineMinorVersion, Scriptaculous, Scroller,\n Slick, Slider, Selector, SharedWorker, String, Style, SyntaxError, Sortable, Sortables,\n SortableObserver, Sound, Spinner, System, Swiff, Text, TextArea, Template,\n Timer, Tips, Type, TypeError, Toggle, Try, \"use strict\", unescape, URI, URIError, URL,\n VBArray, WeakMap, WSH, WScript, XDomainRequest, Web, Window, XMLDOM, XMLHttpRequest, XMLSerializer,\n XPathEvaluator, XPathException, XPathExpression, XPathNamespace, XPathNSResolver, XPathResult,\n \"\\\\\", a, abs, addEventListener, address, alert, apply, applicationCache, arguments, arity,\n asi, atob, b, basic, basicToken, bitwise, blacklist, block, blur, boolOptions, boss,\n browser, btoa, c, call, callee, caller, camelcase, cases, charAt, charCodeAt, character,\n clearInterval, clearTimeout, close, closed, closure, comment, complexityCount, condition,\n confirm, console, constructor, content, couch, create, css, curly, d, data, datalist, dd, debug,\n decodeURI, decodeURIComponent, defaultStatus, defineClass, deserialize, devel, document,\n dojo, dijit, dojox, define, else, emit, encodeURI, encodeURIComponent, elem,\n eqeq, eqeqeq, eqnull, errors, es5, escape, esnext, eval, event, evidence, evil,\n ex, exception, exec, exps, expr, exports, FileReader, first, floor, focus, forEach,\n forin, fragment, frames, from, fromCharCode, fud, funcscope, funct, function, functions,\n g, gc, getComputedStyle, getRow, getter, getterToken, GLOBAL, global, globals, globalstrict,\n hasOwnProperty, help, history, i, id, identifier, immed, implieds, importPackage, include,\n indent, indexOf, init, ins, internals, instanceOf, isAlpha, isApplicationRunning, isArray,\n isDigit, isFinite, isNaN, iterator, java, join, jshint,\n JSHINT, json, jquery, jQuery, keys, label, labelled, last, lastcharacter, lastsemic, laxbreak,\n laxcomma, latedef, lbp, led, left, length, line, load, loadClass, localStorage, location,\n log, loopfunc, m, match, max, maxcomplexity, maxdepth, maxerr, maxlen, maxstatements, maxparams,\n member, message, meta, module, moveBy, moveTo, mootools, multistr, name, navigator, new, newcap,\n nestedBlockDepth, noarg, node, noempty, nomen, nonew, nonstandard, nud, onbeforeunload, onblur,\n onerror, onevar, onecase, onfocus, onload, onresize, onunload, open, openDatabase, openURL,\n opener, opera, options, outer, param, parent, parseFloat, parseInt, passfail, plusplus,\n postMessage, pop, predef, print, process, prompt, proto, prototype, prototypejs, provides, push,\n quit, quotmark, range, raw, reach, reason, regexp, readFile, readUrl, regexdash,\n removeEventListener, replace, report, require, reserved, resizeBy, resizeTo, resolvePath,\n resumeUpdates, respond, rhino, right, runCommand, scroll, scope, screen, scripturl, scrollBy,\n scrollTo, scrollbar, search, seal, self, send, serialize, sessionStorage, setInterval, setTimeout,\n setter, setterToken, shift, slice, smarttabs, sort, spawn, split, statement, statementCount, stack,\n status, start, strict, sub, substr, supernew, shadow, supplant, sum, sync, test, toLowerCase,\n toString, toUpperCase, toint32, token, tokens, top, trailing, type, typeOf, Uint16Array,\n Uint32Array, Uint8Array, undef, undefs, unused, urls, validthis, value, valueOf, var, vars,\n version, verifyMaxParametersPerFunction, verifyMaxStatementsPerFunction,\n verifyMaxComplexityPerFunction, verifyMaxNestedBlockDepthPerFunction, WebSocket, withstmt, white,\n window, windows, Worker, worker, wsh, yui, YUI, Y, YUI_config*/\n\n/*global exports: false */\n\n// We build the application inside a function so that we produce only a single\n// global variable. That function will be invoked immediately, and its return\n// value is the JSHINT function itself.\n\nvar JSHINT = (function () {\n    \"use strict\";\n\n    var anonname,       // The guessed name for anonymous functions.\n\n// These are operators that should not be used with the ! operator.\n\n        bang = {\n            \"<\"  : true,\n            \"<=\" : true,\n            \"==\" : true,\n            \"===\": true,\n            \"!==\": true,\n            \"!=\" : true,\n            \">\"  : true,\n            \">=\" : true,\n            \"+\"  : true,\n            \"-\"  : true,\n            \"*\"  : true,\n            \"/\"  : true,\n            \"%\"  : true\n        },\n\n        // These are the JSHint boolean options.\n        boolOptions = {\n            asi         : true, // if automatic semicolon insertion should be tolerated\n            bitwise     : true, // if bitwise operators should not be allowed\n            boss        : true, // if advanced usage of assignments should be allowed\n            browser     : true, // if the standard browser globals should be predefined\n            camelcase   : true, // if identifiers should be required in camel case\n            couch       : true, // if CouchDB globals should be predefined\n            curly       : true, // if curly braces around all blocks should be required\n            debug       : true, // if debugger statements should be allowed\n            devel       : true, // if logging globals should be predefined (console,\n                                // alert, etc.)\n            dojo        : true, // if Dojo Toolkit globals should be predefined\n            eqeqeq      : true, // if === should be required\n            eqnull      : true, // if == null comparisons should be tolerated\n            es5         : true, // if ES5 syntax should be allowed\n            esnext      : true, // if es.next specific syntax should be allowed\n            evil        : true, // if eval should be allowed\n            expr        : true, // if ExpressionStatement should be allowed as Programs\n            forin       : true, // if for in statements must filter\n            funcscope   : true, // if only function scope should be used for scope tests\n            globalstrict: true, // if global \"use strict\"; should be allowed (also\n                                // enables 'strict')\n            immed       : true, // if immediate invocations must be wrapped in parens\n            iterator    : true, // if the `__iterator__` property should be allowed\n            jquery      : true, // if jQuery globals should be predefined\n            lastsemic   : true, // if semicolons may be ommitted for the trailing\n                                // statements inside of a one-line blocks.\n            latedef     : true, // if the use before definition should not be tolerated\n            laxbreak    : true, // if line breaks should not be checked\n            laxcomma    : true, // if line breaks should not be checked around commas\n            loopfunc    : true, // if functions should be allowed to be defined within\n                                // loops\n            mootools    : true, // if MooTools globals should be predefined\n            multistr    : true, // allow multiline strings\n            newcap      : true, // if constructor names must be capitalized\n            noarg       : true, // if arguments.caller and arguments.callee should be\n                                // disallowed\n            node        : true, // if the Node.js environment globals should be\n                                // predefined\n            noempty     : true, // if empty blocks should be disallowed\n            nonew       : true, // if using `new` for side-effects should be disallowed\n            nonstandard : true, // if non-standard (but widely adopted) globals should\n                                // be predefined\n            nomen       : true, // if names should be checked\n            onevar      : true, // if only one var statement per function should be\n                                // allowed\n            onecase     : true, // if one case switch statements should be allowed\n            passfail    : true, // if the scan should stop on first error\n            plusplus    : true, // if increment/decrement should not be allowed\n            proto       : true, // if the `__proto__` property should be allowed\n            prototypejs : true, // if Prototype and Scriptaculous globals should be\n                                // predefined\n            regexdash   : true, // if unescaped first/last dash (-) inside brackets\n                                // should be tolerated\n            regexp      : true, // if the . should not be allowed in regexp literals\n            rhino       : true, // if the Rhino environment globals should be predefined\n            undef       : true, // if variables should be declared before used\n            unused      : true, // if variables should be always used\n            scripturl   : true, // if script-targeted URLs should be tolerated\n            shadow      : true, // if variable shadowing should be tolerated\n            smarttabs   : true, // if smarttabs should be tolerated\n                                // (http://www.emacswiki.org/emacs/SmartTabs)\n            strict      : true, // require the \"use strict\"; pragma\n            sub         : true, // if all forms of subscript notation are tolerated\n            supernew    : true, // if `new function () { ... };` and `new Object;`\n                                // should be tolerated\n            trailing    : true, // if trailing whitespace rules apply\n            validthis   : true, // if 'this' inside a non-constructor function is valid.\n                                // This is a function scoped option only.\n            withstmt    : true, // if with statements should be allowed\n            white       : true, // if strict whitespace rules apply\n            worker      : true, // if Web Worker script symbols should be allowed\n            wsh         : true, // if the Windows Scripting Host environment globals\n                                // should be predefined\n            yui         : true  // YUI variables should be predefined\n        },\n\n        // These are the JSHint options that can take any value\n        // (we use this object to detect invalid options)\n        valOptions = {\n            maxlen       : false,\n            indent       : false,\n            maxerr       : false,\n            predef       : false,\n            quotmark     : false, //'single'|'double'|true\n            scope        : false,\n            maxstatements: false, // {int} max statements per function\n            maxdepth     : false, // {int} max nested block depth per function\n            maxparams    : false, // {int} max params per function\n            maxcomplexity: false  // {int} max cyclomatic complexity per function\n        },\n\n        // These are JSHint boolean options which are shared with JSLint\n        // where the definition in JSHint is opposite JSLint\n        invertedOptions = {\n            bitwise     : true,\n            forin       : true,\n            newcap      : true,\n            nomen       : true,\n            plusplus    : true,\n            regexp      : true,\n            undef       : true,\n            white       : true,\n\n            // Inverted and renamed, use JSHint name here\n            eqeqeq      : true,\n            onevar      : true\n        },\n\n        // These are JSHint boolean options which are shared with JSLint\n        // where the name has been changed but the effect is unchanged\n        renamedOptions = {\n            eqeq        : \"eqeqeq\",\n            vars        : \"onevar\",\n            windows     : \"wsh\"\n        },\n\n\n        // browser contains a set of global names which are commonly provided by a\n        // web browser environment.\n        browser = {\n            ArrayBuffer              :  false,\n            ArrayBufferView          :  false,\n            Audio                    :  false,\n            Blob                     :  false,\n            addEventListener         :  false,\n            applicationCache         :  false,\n            atob                     :  false,\n            blur                     :  false,\n            btoa                     :  false,\n            clearInterval            :  false,\n            clearTimeout             :  false,\n            close                    :  false,\n            closed                   :  false,\n            DataView                 :  false,\n            DOMParser                :  false,\n            defaultStatus            :  false,\n            document                 :  false,\n            event                    :  false,\n            FileReader               :  false,\n            Float32Array             :  false,\n            Float64Array             :  false,\n            FormData                 :  false,\n            focus                    :  false,\n            frames                   :  false,\n            getComputedStyle         :  false,\n            HTMLElement              :  false,\n            HTMLAnchorElement        :  false,\n            HTMLBaseElement          :  false,\n            HTMLBlockquoteElement    :  false,\n            HTMLBodyElement          :  false,\n            HTMLBRElement            :  false,\n            HTMLButtonElement        :  false,\n            HTMLCanvasElement        :  false,\n            HTMLDirectoryElement     :  false,\n            HTMLDivElement           :  false,\n            HTMLDListElement         :  false,\n            HTMLFieldSetElement      :  false,\n            HTMLFontElement          :  false,\n            HTMLFormElement          :  false,\n            HTMLFrameElement         :  false,\n            HTMLFrameSetElement      :  false,\n            HTMLHeadElement          :  false,\n            HTMLHeadingElement       :  false,\n            HTMLHRElement            :  false,\n            HTMLHtmlElement          :  false,\n            HTMLIFrameElement        :  false,\n            HTMLImageElement         :  false,\n            HTMLInputElement         :  false,\n            HTMLIsIndexElement       :  false,\n            HTMLLabelElement         :  false,\n            HTMLLayerElement         :  false,\n            HTMLLegendElement        :  false,\n            HTMLLIElement            :  false,\n            HTMLLinkElement          :  false,\n            HTMLMapElement           :  false,\n            HTMLMenuElement          :  false,\n            HTMLMetaElement          :  false,\n            HTMLModElement           :  false,\n            HTMLObjectElement        :  false,\n            HTMLOListElement         :  false,\n            HTMLOptGroupElement      :  false,\n            HTMLOptionElement        :  false,\n            HTMLParagraphElement     :  false,\n            HTMLParamElement         :  false,\n            HTMLPreElement           :  false,\n            HTMLQuoteElement         :  false,\n            HTMLScriptElement        :  false,\n            HTMLSelectElement        :  false,\n            HTMLStyleElement         :  false,\n            HTMLTableCaptionElement  :  false,\n            HTMLTableCellElement     :  false,\n            HTMLTableColElement      :  false,\n            HTMLTableElement         :  false,\n            HTMLTableRowElement      :  false,\n            HTMLTableSectionElement  :  false,\n            HTMLTextAreaElement      :  false,\n            HTMLTitleElement         :  false,\n            HTMLUListElement         :  false,\n            HTMLVideoElement         :  false,\n            history                  :  false,\n            Int16Array               :  false,\n            Int32Array               :  false,\n            Int8Array                :  false,\n            Image                    :  false,\n            length                   :  false,\n            localStorage             :  false,\n            location                 :  false,\n            MessageChannel           :  false,\n            MessageEvent             :  false,\n            MessagePort              :  false,\n            moveBy                   :  false,\n            moveTo                   :  false,\n            MutationObserver         :  false,\n            name                     :  false,\n            Node                     :  false,\n            NodeFilter               :  false,\n            navigator                :  false,\n            onbeforeunload           :  true,\n            onblur                   :  true,\n            onerror                  :  true,\n            onfocus                  :  true,\n            onload                   :  true,\n            onresize                 :  true,\n            onunload                 :  true,\n            open                     :  false,\n            openDatabase             :  false,\n            opener                   :  false,\n            Option                   :  false,\n            parent                   :  false,\n            print                    :  false,\n            removeEventListener      :  false,\n            resizeBy                 :  false,\n            resizeTo                 :  false,\n            screen                   :  false,\n            scroll                   :  false,\n            scrollBy                 :  false,\n            scrollTo                 :  false,\n            sessionStorage           :  false,\n            setInterval              :  false,\n            setTimeout               :  false,\n            SharedWorker             :  false,\n            status                   :  false,\n            top                      :  false,\n            Uint16Array              :  false,\n            Uint32Array              :  false,\n            Uint8Array               :  false,\n            WebSocket                :  false,\n            window                   :  false,\n            Worker                   :  false,\n            XMLHttpRequest           :  false,\n            XMLSerializer            :  false,\n            XPathEvaluator           :  false,\n            XPathException           :  false,\n            XPathExpression          :  false,\n            XPathNamespace           :  false,\n            XPathNSResolver          :  false,\n            XPathResult              :  false\n        },\n\n        couch = {\n            \"require\" : false,\n            respond   : false,\n            getRow    : false,\n            emit      : false,\n            send      : false,\n            start     : false,\n            sum       : false,\n            log       : false,\n            exports   : false,\n            module    : false,\n            provides  : false\n        },\n\n        declared, // Globals that were declared using /*global ... */ syntax.\n\n        devel = {\n            alert   : false,\n            confirm : false,\n            console : false,\n            Debug   : false,\n            opera   : false,\n            prompt  : false\n        },\n\n        dojo = {\n            dojo      : false,\n            dijit     : false,\n            dojox     : false,\n            define    : false,\n            \"require\" : false\n        },\n\n        funct,          // The current function\n\n        functionicity = [\n            \"closure\", \"exception\", \"global\", \"label\",\n            \"outer\", \"unused\", \"var\"\n        ],\n\n        functions,      // All of the functions\n\n        global,         // The global scope\n        implied,        // Implied globals\n        inblock,\n        indent,\n        jsonmode,\n\n        jquery = {\n            \"$\"    : false,\n            jQuery : false\n        },\n\n        lines,\n        lookahead,\n        member,\n        membersOnly,\n\n        mootools = {\n            \"$\"             : false,\n            \"$$\"            : false,\n            Asset           : false,\n            Browser         : false,\n            Chain           : false,\n            Class           : false,\n            Color           : false,\n            Cookie          : false,\n            Core            : false,\n            Document        : false,\n            DomReady        : false,\n            DOMEvent        : false,\n            DOMReady        : false,\n            Drag            : false,\n            Element         : false,\n            Elements        : false,\n            Event           : false,\n            Events          : false,\n            Fx              : false,\n            Group           : false,\n            Hash            : false,\n            HtmlTable       : false,\n            Iframe          : false,\n            IframeShim      : false,\n            InputValidator  : false,\n            instanceOf      : false,\n            Keyboard        : false,\n            Locale          : false,\n            Mask            : false,\n            MooTools        : false,\n            Native          : false,\n            Options         : false,\n            OverText        : false,\n            Request         : false,\n            Scroller        : false,\n            Slick           : false,\n            Slider          : false,\n            Sortables       : false,\n            Spinner         : false,\n            Swiff           : false,\n            Tips            : false,\n            Type            : false,\n            typeOf          : false,\n            URI             : false,\n            Window          : false\n        },\n\n        nexttoken,\n\n        node = {\n            __filename    : false,\n            __dirname     : false,\n            Buffer        : false,\n            console       : false,\n            exports       : true,  // In Node it is ok to exports = module.exports = foo();\n            GLOBAL        : false,\n            global        : false,\n            module        : false,\n            process       : false,\n            require       : false,\n            setTimeout    : false,\n            clearTimeout  : false,\n            setInterval   : false,\n            clearInterval : false\n        },\n\n        noreach,\n        option,\n        predefined,     // Global variables defined by option\n        prereg,\n        prevtoken,\n\n        prototypejs = {\n            \"$\"               : false,\n            \"$$\"              : false,\n            \"$A\"              : false,\n            \"$F\"              : false,\n            \"$H\"              : false,\n            \"$R\"              : false,\n            \"$break\"          : false,\n            \"$continue\"       : false,\n            \"$w\"              : false,\n            Abstract          : false,\n            Ajax              : false,\n            Class             : false,\n            Enumerable        : false,\n            Element           : false,\n            Event             : false,\n            Field             : false,\n            Form              : false,\n            Hash              : false,\n            Insertion         : false,\n            ObjectRange       : false,\n            PeriodicalExecuter: false,\n            Position          : false,\n            Prototype         : false,\n            Selector          : false,\n            Template          : false,\n            Toggle            : false,\n            Try               : false,\n            Autocompleter     : false,\n            Builder           : false,\n            Control           : false,\n            Draggable         : false,\n            Draggables        : false,\n            Droppables        : false,\n            Effect            : false,\n            Sortable          : false,\n            SortableObserver  : false,\n            Sound             : false,\n            Scriptaculous     : false\n        },\n\n        quotmark,\n\n        rhino = {\n            defineClass  : false,\n            deserialize  : false,\n            gc           : false,\n            help         : false,\n            importPackage: false,\n            \"java\"       : false,\n            load         : false,\n            loadClass    : false,\n            print        : false,\n            quit         : false,\n            readFile     : false,\n            readUrl      : false,\n            runCommand   : false,\n            seal         : false,\n            serialize    : false,\n            spawn        : false,\n            sync         : false,\n            toint32      : false,\n            version      : false\n        },\n\n        scope,      // The current scope\n        stack,\n\n        // standard contains the global names that are provided by the\n        // ECMAScript standard.\n        standard = {\n            Array               : false,\n            Boolean             : false,\n            Date                : false,\n            decodeURI           : false,\n            decodeURIComponent  : false,\n            encodeURI           : false,\n            encodeURIComponent  : false,\n            Error               : false,\n            \"eval\"              : false,\n            EvalError           : false,\n            Function            : false,\n            hasOwnProperty      : false,\n            isFinite            : false,\n            isNaN               : false,\n            JSON                : false,\n            Map                 : false,\n            Math                : false,\n            NaN                 : false,\n            Number              : false,\n            Object              : false,\n            parseInt            : false,\n            parseFloat          : false,\n            RangeError          : false,\n            ReferenceError      : false,\n            RegExp              : false,\n            Set                 : false,\n            String              : false,\n            SyntaxError         : false,\n            TypeError           : false,\n            URIError            : false,\n            WeakMap             : false\n        },\n\n        // widely adopted global names that are not part of ECMAScript standard\n        nonstandard = {\n            escape              : false,\n            unescape            : false\n        },\n\n        directive,\n        syntax = {},\n        tab,\n        token,\n        unuseds,\n        urls,\n        useESNextSyntax,\n        warnings,\n\n        worker = {\n            importScripts       : true,\n            postMessage         : true,\n            self                : true\n        },\n\n        wsh = {\n            ActiveXObject             : true,\n            Enumerator                : true,\n            GetObject                 : true,\n            ScriptEngine              : true,\n            ScriptEngineBuildVersion  : true,\n            ScriptEngineMajorVersion  : true,\n            ScriptEngineMinorVersion  : true,\n            VBArray                   : true,\n            WSH                       : true,\n            WScript                   : true,\n            XDomainRequest            : true\n        },\n\n        yui = {\n            YUI             : false,\n            Y               : false,\n            YUI_config      : false\n        };\n    // Regular expressions. Some of these are stupidly long.\n    var ax, cx, tx, nx, nxg, lx, ix, jx, ft;\n    (function () {\n        /*jshint maxlen:300 */\n\n        // unsafe comment or string\n        ax = /@cc|<\\/?|script|\\]\\s*\\]|<\\s*!|&lt/i;\n\n        // unsafe characters that are silently deleted by one or more browsers\n        cx = /[\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/;\n\n        // token\n        tx = /^\\s*([(){}\\[.,:;'\"~\\?\\]#@]|==?=?|\\/=(?!(\\S*\\/[gim]?))|\\/(\\*(jshint|jslint|members?|global)?|\\/)?|\\*[\\/=]?|\\+(?:=|\\++)?|-(?:=|-+)?|%=?|&[&=]?|\\|[|=]?|>>?>?=?|<([\\/=!]|\\!(\\[|--)?|<=?)?|\\^=?|\\!=?=?|[a-zA-Z_$][a-zA-Z0-9_$]*|[0-9]+([xX][0-9a-fA-F]+|\\.[0-9]*)?([eE][+\\-]?[0-9]+)?)/;\n\n        // characters in strings that need escapement\n        nx = /[\\u0000-\\u001f&<\"\\/\\\\\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/;\n        nxg = /[\\u0000-\\u001f&<\"\\/\\\\\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\n        // star slash\n        lx = /\\*\\//;\n\n        // identifier\n        ix = /^([a-zA-Z_$][a-zA-Z0-9_$]*)$/;\n\n        // javascript url\n        jx = /^(?:javascript|jscript|ecmascript|vbscript|mocha|livescript)\\s*:/i;\n\n        // catches /* falls through */ comments\n        ft = /^\\s*\\/\\*\\s*falls\\sthrough\\s*\\*\\/\\s*$/;\n    }());\n\n    function F() {}     // Used by Object.create\n\n    function is_own(object, name) {\n        // The object.hasOwnProperty method fails when the property under consideration\n        // is named 'hasOwnProperty'. So we have to use this more convoluted form.\n        return Object.prototype.hasOwnProperty.call(object, name);\n    }\n\n    function checkOption(name, t) {\n        if (valOptions[name] === undefined && boolOptions[name] === undefined) {\n            warning(\"Bad option: '\" + name + \"'.\", t);\n        }\n    }\n\n    function isString(obj) {\n        return Object.prototype.toString.call(obj) === \"[object String]\";\n    }\n\n    // Provide critical ES5 functions to ES3.\n\n    if (typeof Array.isArray !== \"function\") {\n        Array.isArray = function (o) {\n            return Object.prototype.toString.apply(o) === \"[object Array]\";\n        };\n    }\n\n    if (!Array.prototype.forEach) {\n        Array.prototype.forEach = function (fn, scope) {\n            var len = this.length;\n\n            for (var i = 0; i < len; i++) {\n                fn.call(scope || this, this[i], i, this);\n            }\n        };\n    }\n\n    if (!Array.prototype.indexOf) {\n        Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n            if (this === null || this === undefined) {\n                throw new TypeError();\n            }\n\n            var t = new Object(this);\n            var len = t.length >>> 0;\n\n            if (len === 0) {\n                return -1;\n            }\n\n            var n = 0;\n            if (arguments.length > 0) {\n                n = Number(arguments[1]);\n                if (n != n) { // shortcut for verifying if it's NaN\n                    n = 0;\n                } else if (n !== 0 && n != Infinity && n != -Infinity) {\n                    n = (n > 0 || -1) * Math.floor(Math.abs(n));\n                }\n            }\n\n            if (n >= len) {\n                return -1;\n            }\n\n            var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n            for (; k < len; k++) {\n                if (k in t && t[k] === searchElement) {\n                    return k;\n                }\n            }\n\n            return -1;\n        };\n    }\n\n    if (typeof Object.create !== \"function\") {\n        Object.create = function (o) {\n            F.prototype = o;\n            return new F();\n        };\n    }\n\n    if (typeof Object.keys !== \"function\") {\n        Object.keys = function (o) {\n            var a = [], k;\n            for (k in o) {\n                if (is_own(o, k)) {\n                    a.push(k);\n                }\n            }\n            return a;\n        };\n    }\n\n    // Non standard methods\n\n    function isAlpha(str) {\n        return (str >= \"a\" && str <= \"z\\uffff\") ||\n            (str >= \"A\" && str <= \"Z\\uffff\");\n    }\n\n    function isDigit(str) {\n        return (str >= \"0\" && str <= \"9\");\n    }\n\n    function isIdentifier(token, value) {\n        if (!token)\n            return false;\n\n        if (!token.identifier || token.value !== value)\n            return false;\n\n        return true;\n    }\n\n    function supplant(str, data) {\n        return str.replace(/\\{([^{}]*)\\}/g, function (a, b) {\n            var r = data[b];\n            return typeof r === \"string\" || typeof r === \"number\" ? r : a;\n        });\n    }\n\n    function combine(t, o) {\n        var n;\n        for (n in o) {\n            if (is_own(o, n) && !is_own(JSHINT.blacklist, n)) {\n                t[n] = o[n];\n            }\n        }\n    }\n\n    function updatePredefined() {\n        Object.keys(JSHINT.blacklist).forEach(function (key) {\n            delete predefined[key];\n        });\n    }\n\n    function assume() {\n        if (option.couch) {\n            combine(predefined, couch);\n        }\n\n        if (option.rhino) {\n            combine(predefined, rhino);\n        }\n\n        if (option.prototypejs) {\n            combine(predefined, prototypejs);\n        }\n\n        if (option.node) {\n            combine(predefined, node);\n            option.globalstrict = true;\n        }\n\n        if (option.devel) {\n            combine(predefined, devel);\n        }\n\n        if (option.dojo) {\n            combine(predefined, dojo);\n        }\n\n        if (option.browser) {\n            combine(predefined, browser);\n        }\n\n        if (option.nonstandard) {\n            combine(predefined, nonstandard);\n        }\n\n        if (option.jquery) {\n            combine(predefined, jquery);\n        }\n\n        if (option.mootools) {\n            combine(predefined, mootools);\n        }\n\n        if (option.worker) {\n            combine(predefined, worker);\n        }\n\n        if (option.wsh) {\n            combine(predefined, wsh);\n        }\n\n        if (option.esnext) {\n            useESNextSyntax();\n        }\n\n        if (option.globalstrict && option.strict !== false) {\n            option.strict = true;\n        }\n\n        if (option.yui) {\n            combine(predefined, yui);\n        }\n    }\n\n\n    // Produce an error warning.\n    function quit(message, line, chr) {\n        var percentage = Math.floor((line / lines.length) * 100);\n\n        throw {\n            name: \"JSHintError\",\n            line: line,\n            character: chr,\n            message: message + \" (\" + percentage + \"% scanned).\",\n            raw: message\n        };\n    }\n\n    function isundef(scope, m, t, a) {\n        return JSHINT.undefs.push([scope, m, t, a]);\n    }\n\n    function warning(m, t, a, b, c, d) {\n        var ch, l, w;\n        t = t || nexttoken;\n        if (t.id === \"(end)\") {  // `~\n            t = token;\n        }\n        l = t.line || 0;\n        ch = t.from || 0;\n        w = {\n            id: \"(error)\",\n            raw: m,\n            evidence: lines[l - 1] || \"\",\n            line: l,\n            character: ch,\n            scope: JSHINT.scope,\n            a: a,\n            b: b,\n            c: c,\n            d: d\n        };\n        w.reason = supplant(m, w);\n        JSHINT.errors.push(w);\n        if (option.passfail) {\n            quit(\"Stopping. \", l, ch);\n        }\n        warnings += 1;\n        if (warnings >= option.maxerr) {\n            quit(\"Too many errors.\", l, ch);\n        }\n        return w;\n    }\n\n    function warningAt(m, l, ch, a, b, c, d) {\n        return warning(m, {\n            line: l,\n            from: ch\n        }, a, b, c, d);\n    }\n\n    function error(m, t, a, b, c, d) {\n        warning(m, t, a, b, c, d);\n    }\n\n    function errorAt(m, l, ch, a, b, c, d) {\n        return error(m, {\n            line: l,\n            from: ch\n        }, a, b, c, d);\n    }\n\n    // Tracking of \"internal\" scripts, like eval containing a static string\n    function addInternalSrc(elem, src) {\n        var i;\n        i = {\n            id: \"(internal)\",\n            elem: elem,\n            value: src\n        };\n        JSHINT.internals.push(i);\n        return i;\n    }\n\n\n// lexical analysis and token construction\n\n    var lex = (function lex() {\n        var character, from, line, s;\n\n// Private lex methods\n\n        function nextLine() {\n            var at,\n                match,\n                tw; // trailing whitespace check\n\n            if (line >= lines.length)\n                return false;\n\n            character = 1;\n            s = lines[line];\n            line += 1;\n\n            // If smarttabs option is used check for spaces followed by tabs only.\n            // Otherwise check for any occurence of mixed tabs and spaces.\n            // Tabs and one space followed by block comment is allowed.\n            if (option.smarttabs) {\n                // negative look-behind for \"//\"\n                match = s.match(/(\\/\\/)? \\t/);\n                at = match && !match[1] ? 0 : -1;\n            } else {\n                at = s.search(/ \\t|\\t [^\\*]/);\n            }\n\n            if (at >= 0)\n                warningAt(\"Mixed spaces and tabs.\", line, at + 1);\n\n            s = s.replace(/\\t/g, tab);\n            at = s.search(cx);\n\n            if (at >= 0)\n                warningAt(\"Unsafe character.\", line, at);\n\n            if (option.maxlen && option.maxlen < s.length)\n                warningAt(\"Line too long.\", line, s.length);\n\n            // Check for trailing whitespaces\n            tw = option.trailing && s.match(/^(.*?)\\s+$/);\n            if (tw && !/^\\s+$/.test(s)) {\n                warningAt(\"Trailing whitespace.\", line, tw[1].length + 1);\n            }\n            return true;\n        }\n\n// Produce a token object.  The token inherits from a syntax symbol.\n\n        function it(type, value) {\n            var i, t;\n\n            function checkName(name) {\n                if (!option.proto && name === \"__proto__\") {\n                    warningAt(\"The '{a}' property is deprecated.\", line, from, name);\n                    return;\n                }\n\n                if (!option.iterator && name === \"__iterator__\") {\n                    warningAt(\"'{a}' is only available in JavaScript 1.7.\", line, from, name);\n                    return;\n                }\n\n                // Check for dangling underscores unless we're in Node\n                // environment and this identifier represents built-in\n                // Node globals with underscores.\n\n                var hasDangling = /^(_+.*|.*_+)$/.test(name);\n\n                if (option.nomen && hasDangling && name !== \"_\") {\n                    if (option.node && token.id !== \".\" && /^(__dirname|__filename)$/.test(name))\n                        return;\n\n                    warningAt(\"Unexpected {a} in '{b}'.\", line, from, \"dangling '_'\", name);\n                    return;\n                }\n\n                // Check for non-camelcase names. Names like MY_VAR and\n                // _myVar are okay though.\n\n                if (option.camelcase) {\n                    if (name.replace(/^_+/, \"\").indexOf(\"_\") > -1 && !name.match(/^[A-Z0-9_]*$/)) {\n                        warningAt(\"Identifier '{a}' is not in camel case.\", line, from, value);\n                    }\n                }\n            }\n\n            if (type === \"(color)\" || type === \"(range)\") {\n                t = {type: type};\n            } else if (type === \"(punctuator)\" ||\n                    (type === \"(identifier)\" && is_own(syntax, value))) {\n                t = syntax[value] || syntax[\"(error)\"];\n            } else {\n                t = syntax[type];\n            }\n\n            t = Object.create(t);\n\n            if (type === \"(string)\" || type === \"(range)\") {\n                if (!option.scripturl && jx.test(value)) {\n                    warningAt(\"Script URL.\", line, from);\n                }\n            }\n\n            if (type === \"(identifier)\") {\n                t.identifier = true;\n                checkName(value);\n            }\n\n            t.value = value;\n            t.line = line;\n            t.character = character;\n            t.from = from;\n            i = t.id;\n            if (i !== \"(endline)\") {\n                prereg = i &&\n                    ((\"(,=:[!&|?{};\".indexOf(i.charAt(i.length - 1)) >= 0) ||\n                    i === \"return\" ||\n                    i === \"case\");\n            }\n            return t;\n        }\n\n        // Public lex methods\n        return {\n            init: function (source) {\n                if (typeof source === \"string\") {\n                    lines = source\n                        .replace(/\\r\\n/g, \"\\n\")\n                        .replace(/\\r/g, \"\\n\")\n                        .split(\"\\n\");\n                } else {\n                    lines = source;\n                }\n\n                // If the first line is a shebang (#!), make it a blank and move on.\n                // Shebangs are used by Node scripts.\n                if (lines[0] && lines[0].substr(0, 2) === \"#!\")\n                    lines[0] = \"\";\n\n                line = 0;\n                nextLine();\n                from = 1;\n            },\n\n            range: function (begin, end) {\n                var c, value = \"\";\n                from = character;\n                if (s.charAt(0) !== begin) {\n                    errorAt(\"Expected '{a}' and instead saw '{b}'.\",\n                            line, character, begin, s.charAt(0));\n                }\n                for (;;) {\n                    s = s.slice(1);\n                    character += 1;\n                    c = s.charAt(0);\n                    switch (c) {\n                    case \"\":\n                        errorAt(\"Missing '{a}'.\", line, character, c);\n                        break;\n                    case end:\n                        s = s.slice(1);\n                        character += 1;\n                        return it(\"(range)\", value);\n                    case \"\\\\\":\n                        warningAt(\"Unexpected '{a}'.\", line, character, c);\n                    }\n                    value += c;\n                }\n\n            },\n\n\n            // token -- this is called by advance to get the next token\n            token: function () {\n                var b, c, captures, d, depth, high, i, l, low, q, t, isLiteral, isInRange, n;\n\n                function match(x) {\n                    var r = x.exec(s), r1;\n\n                    if (r) {\n                        l = r[0].length;\n                        r1 = r[1];\n                        c = r1.charAt(0);\n                        s = s.substr(l);\n                        from = character + l - r1.length;\n                        character += l;\n                        return r1;\n                    }\n                }\n\n                function string(x) {\n                    var c, j, r = \"\", allowNewLine = false;\n\n                    if (jsonmode && x !== \"\\\"\") {\n                        warningAt(\"Strings must use doublequote.\",\n                                line, character);\n                    }\n\n                    if (option.quotmark) {\n                        if (option.quotmark === \"single\" && x !== \"'\") {\n                            warningAt(\"Strings must use singlequote.\",\n                                    line, character);\n                        } else if (option.quotmark === \"double\" && x !== \"\\\"\") {\n                            warningAt(\"Strings must use doublequote.\",\n                                    line, character);\n                        } else if (option.quotmark === true) {\n                            quotmark = quotmark || x;\n                            if (quotmark !== x) {\n                                warningAt(\"Mixed double and single quotes.\",\n                                        line, character);\n                            }\n                        }\n                    }\n\n                    function esc(n) {\n                        var i = parseInt(s.substr(j + 1, n), 16);\n                        j += n;\n                        if (i >= 32 && i <= 126 &&\n                                i !== 34 && i !== 92 && i !== 39) {\n                            warningAt(\"Unnecessary escapement.\", line, character);\n                        }\n                        character += n;\n                        c = String.fromCharCode(i);\n                    }\n\n                    j = 0;\nunclosedString:     for (;;) {\n                        while (j >= s.length) {\n                            j = 0;\n\n                            var cl = line, cf = from;\n                            if (!nextLine()) {\n                                errorAt(\"Unclosed string.\", cl, cf);\n                                break unclosedString;\n                            }\n\n                            if (allowNewLine) {\n                                allowNewLine = false;\n                            } else {\n                                warningAt(\"Unclosed string.\", cl, cf);\n                            }\n                        }\n\n                        c = s.charAt(j);\n                        if (c === x) {\n                            character += 1;\n                            s = s.substr(j + 1);\n                            return it(\"(string)\", r, x);\n                        }\n\n                        if (c < \" \") {\n                            if (c === \"\\n\" || c === \"\\r\") {\n                                break;\n                            }\n                            warningAt(\"Control character in string: {a}.\",\n                                    line, character + j, s.slice(0, j));\n                        } else if (c === \"\\\\\") {\n                            j += 1;\n                            character += 1;\n                            c = s.charAt(j);\n                            n = s.charAt(j + 1);\n                            switch (c) {\n                            case \"\\\\\":\n                            case \"\\\"\":\n                            case \"/\":\n                                break;\n                            case \"\\'\":\n                                if (jsonmode) {\n                                    warningAt(\"Avoid \\\\'.\", line, character);\n                                }\n                                break;\n                            case \"b\":\n                                c = \"\\b\";\n                                break;\n                            case \"f\":\n                                c = \"\\f\";\n                                break;\n                            case \"n\":\n                                c = \"\\n\";\n                                break;\n                            case \"r\":\n                                c = \"\\r\";\n                                break;\n                            case \"t\":\n                                c = \"\\t\";\n                                break;\n                            case \"0\":\n                                c = \"\\0\";\n                                // Octal literals fail in strict mode\n                                // check if the number is between 00 and 07\n                                // where 'n' is the token next to 'c'\n                                if (n >= 0 && n <= 7 && directive[\"use strict\"]) {\n                                    warningAt(\n                                    \"Octal literals are not allowed in strict mode.\",\n                                    line, character);\n                                }\n                                break;\n                            case \"u\":\n                                esc(4);\n                                break;\n                            case \"v\":\n                                if (jsonmode) {\n                                    warningAt(\"Avoid \\\\v.\", line, character);\n                                }\n                                c = \"\\v\";\n                                break;\n                            case \"x\":\n                                if (jsonmode) {\n                                    warningAt(\"Avoid \\\\x-.\", line, character);\n                                }\n                                esc(2);\n                                break;\n                            case \"\":\n                                // last character is escape character\n                                // always allow new line if escaped, but show\n                                // warning if option is not set\n                                allowNewLine = true;\n                                if (option.multistr) {\n                                    if (jsonmode) {\n                                        warningAt(\"Avoid EOL escapement.\", line, character);\n                                    }\n                                    c = \"\";\n                                    character -= 1;\n                                    break;\n                                }\n                                warningAt(\"Bad escapement of EOL. Use option multistr if needed.\",\n                                    line, character);\n                                break;\n                            case \"!\":\n                                if (s.charAt(j - 2) === \"<\")\n                                    break;\n                                /*falls through*/\n                            default:\n                                warningAt(\"Bad escapement.\", line, character);\n                            }\n                        }\n                        r += c;\n                        character += 1;\n                        j += 1;\n                    }\n                }\n\n                for (;;) {\n                    if (!s) {\n                        return it(nextLine() ? \"(endline)\" : \"(end)\", \"\");\n                    }\n\n                    t = match(tx);\n\n                    if (!t) {\n                        t = \"\";\n                        c = \"\";\n                        while (s && s < \"!\") {\n                            s = s.substr(1);\n                        }\n                        if (s) {\n                            errorAt(\"Unexpected '{a}'.\", line, character, s.substr(0, 1));\n                            s = \"\";\n                        }\n                    } else {\n\n    //      identifier\n\n                        if (isAlpha(c) || c === \"_\" || c === \"$\") {\n                            return it(\"(identifier)\", t);\n                        }\n\n    //      number\n\n                        if (isDigit(c)) {\n                            if (!isFinite(Number(t))) {\n                                warningAt(\"Bad number '{a}'.\",\n                                    line, character, t);\n                            }\n                            if (isAlpha(s.substr(0, 1))) {\n                                warningAt(\"Missing space after '{a}'.\",\n                                        line, character, t);\n                            }\n                            if (c === \"0\") {\n                                d = t.substr(1, 1);\n                                if (isDigit(d)) {\n                                    if (token.id !== \".\") {\n                                        warningAt(\"Don't use extra leading zeros '{a}'.\",\n                                            line, character, t);\n                                    }\n                                } else if (jsonmode && (d === \"x\" || d === \"X\")) {\n                                    warningAt(\"Avoid 0x-. '{a}'.\",\n                                            line, character, t);\n                                }\n                            }\n                            if (t.substr(t.length - 1) === \".\") {\n                                warningAt(\n\"A trailing decimal point can be confused with a dot '{a}'.\", line, character, t);\n                            }\n                            return it(\"(number)\", t);\n                        }\n                        switch (t) {\n\n    //      string\n\n                        case \"\\\"\":\n                        case \"'\":\n                            return string(t);\n\n    //      // comment\n\n                        case \"//\":\n                            s = \"\";\n                            token.comment = true;\n                            break;\n\n    //      /* comment\n\n                        case \"/*\":\n                            for (;;) {\n                                i = s.search(lx);\n                                if (i >= 0) {\n                                    break;\n                                }\n                                if (!nextLine()) {\n                                    errorAt(\"Unclosed comment.\", line, character);\n                                }\n                            }\n                            s = s.substr(i + 2);\n                            token.comment = true;\n                            break;\n\n    //      /*members /*jshint /*global\n\n                        case \"/*members\":\n                        case \"/*member\":\n                        case \"/*jshint\":\n                        case \"/*jslint\":\n                        case \"/*global\":\n                        case \"*/\":\n                            return {\n                                value: t,\n                                type: \"special\",\n                                line: line,\n                                character: character,\n                                from: from\n                            };\n\n                        case \"\":\n                            break;\n    //      /\n                        case \"/\":\n                            if (s.charAt(0) === \"=\") {\n                                errorAt(\"A regular expression literal can be confused with '/='.\",\n                                    line, from);\n                            }\n\n                            if (prereg) {\n                                depth = 0;\n                                captures = 0;\n                                l = 0;\n                                for (;;) {\n                                    b = true;\n                                    c = s.charAt(l);\n                                    l += 1;\n                                    switch (c) {\n                                    case \"\":\n                                        errorAt(\"Unclosed regular expression.\", line, from);\n                                        return quit(\"Stopping.\", line, from);\n                                    case \"/\":\n                                        if (depth > 0) {\n                                            warningAt(\"{a} unterminated regular expression \" +\n                                                \"group(s).\", line, from + l, depth);\n                                        }\n                                        c = s.substr(0, l - 1);\n                                        q = {\n                                            g: true,\n                                            i: true,\n                                            m: true\n                                        };\n                                        while (q[s.charAt(l)] === true) {\n                                            q[s.charAt(l)] = false;\n                                            l += 1;\n                                        }\n                                        character += l;\n                                        s = s.substr(l);\n                                        q = s.charAt(0);\n                                        if (q === \"/\" || q === \"*\") {\n                                            errorAt(\"Confusing regular expression.\",\n                                                    line, from);\n                                        }\n                                        return it(\"(regexp)\", c);\n                                    case \"\\\\\":\n                                        c = s.charAt(l);\n                                        if (c < \" \") {\n                                            warningAt(\n\"Unexpected control character in regular expression.\", line, from + l);\n                                        } else if (c === \"<\") {\n                                            warningAt(\n\"Unexpected escaped character '{a}' in regular expression.\", line, from + l, c);\n                                        }\n                                        l += 1;\n                                        break;\n                                    case \"(\":\n                                        depth += 1;\n                                        b = false;\n                                        if (s.charAt(l) === \"?\") {\n                                            l += 1;\n                                            switch (s.charAt(l)) {\n                                            case \":\":\n                                            case \"=\":\n                                            case \"!\":\n                                                l += 1;\n                                                break;\n                                            default:\n                                                warningAt(\n\"Expected '{a}' and instead saw '{b}'.\", line, from + l, \":\", s.charAt(l));\n                                            }\n                                        } else {\n                                            captures += 1;\n                                        }\n                                        break;\n                                    case \"|\":\n                                        b = false;\n                                        break;\n                                    case \")\":\n                                        if (depth === 0) {\n                                            warningAt(\"Unescaped '{a}'.\",\n                                                    line, from + l, \")\");\n                                        } else {\n                                            depth -= 1;\n                                        }\n                                        break;\n                                    case \" \":\n                                        q = 1;\n                                        while (s.charAt(l) === \" \") {\n                                            l += 1;\n                                            q += 1;\n                                        }\n                                        if (q > 1) {\n                                            warningAt(\n\"Spaces are hard to count. Use {{a}}.\", line, from + l, q);\n                                        }\n                                        break;\n                                    case \"[\":\n                                        c = s.charAt(l);\n                                        if (c === \"^\") {\n                                            l += 1;\n                                            if (s.charAt(l) === \"]\") {\n                                                errorAt(\"Unescaped '{a}'.\",\n                                                    line, from + l, \"^\");\n                                            }\n                                        }\n                                        if (c === \"]\") {\n                                            warningAt(\"Empty class.\", line,\n                                                    from + l - 1);\n                                        }\n                                        isLiteral = false;\n                                        isInRange = false;\nklass:                                  do {\n                                            c = s.charAt(l);\n                                            l += 1;\n                                            switch (c) {\n                                            case \"[\":\n                                            case \"^\":\n                                                warningAt(\"Unescaped '{a}'.\",\n                                                        line, from + l, c);\n                                                if (isInRange) {\n                                                    isInRange = false;\n                                                } else {\n                                                    isLiteral = true;\n                                                }\n                                                break;\n                                            case \"-\":\n                                                if (isLiteral && !isInRange) {\n                                                    isLiteral = false;\n                                                    isInRange = true;\n                                                } else if (isInRange) {\n                                                    isInRange = false;\n                                                } else if (s.charAt(l) === \"]\") {\n                                                    isInRange = true;\n                                                } else {\n                                                    if (option.regexdash !== (l === 2 || (l === 3 &&\n                                                        s.charAt(1) === \"^\"))) {\n                                                        warningAt(\"Unescaped '{a}'.\",\n                                                            line, from + l - 1, \"-\");\n                                                    }\n                                                    isLiteral = true;\n                                                }\n                                                break;\n                                            case \"]\":\n                                                if (isInRange && !option.regexdash) {\n                                                    warningAt(\"Unescaped '{a}'.\",\n                                                            line, from + l - 1, \"-\");\n                                                }\n                                                break klass;\n                                            case \"\\\\\":\n                                                c = s.charAt(l);\n                                                if (c < \" \") {\n                                                    warningAt(\n\"Unexpected control character in regular expression.\", line, from + l);\n                                                } else if (c === \"<\") {\n                                                    warningAt(\n\"Unexpected escaped character '{a}' in regular expression.\", line, from + l, c);\n                                                }\n                                                l += 1;\n\n                                                // \\w, \\s and \\d are never part of a character range\n                                                if (/[wsd]/i.test(c)) {\n                                                    if (isInRange) {\n                                                        warningAt(\"Unescaped '{a}'.\",\n                                                            line, from + l, \"-\");\n                                                        isInRange = false;\n                                                    }\n                                                    isLiteral = false;\n                                                } else if (isInRange) {\n                                                    isInRange = false;\n                                                } else {\n                                                    isLiteral = true;\n                                                }\n                                                break;\n                                            case \"/\":\n                                                warningAt(\"Unescaped '{a}'.\",\n                                                        line, from + l - 1, \"/\");\n\n                                                if (isInRange) {\n                                                    isInRange = false;\n                                                } else {\n                                                    isLiteral = true;\n                                                }\n                                                break;\n                                            case \"<\":\n                                                if (isInRange) {\n                                                    isInRange = false;\n                                                } else {\n                                                    isLiteral = true;\n                                                }\n                                                break;\n                                            default:\n                                                if (isInRange) {\n                                                    isInRange = false;\n                                                } else {\n                                                    isLiteral = true;\n                                                }\n                                            }\n                                        } while (c);\n                                        break;\n                                    case \".\":\n                                        if (option.regexp) {\n                                            warningAt(\"Insecure '{a}'.\", line,\n                                                    from + l, c);\n                                        }\n                                        break;\n                                    case \"]\":\n                                    case \"?\":\n                                    case \"{\":\n                                    case \"}\":\n                                    case \"+\":\n                                    case \"*\":\n                                        warningAt(\"Unescaped '{a}'.\", line,\n                                                from + l, c);\n                                    }\n                                    if (b) {\n                                        switch (s.charAt(l)) {\n                                        case \"?\":\n                                        case \"+\":\n                                        case \"*\":\n                                            l += 1;\n                                            if (s.charAt(l) === \"?\") {\n                                                l += 1;\n                                            }\n                                            break;\n                                        case \"{\":\n                                            l += 1;\n                                            c = s.charAt(l);\n                                            if (c < \"0\" || c > \"9\") {\n                                                warningAt(\n\"Expected a number and instead saw '{a}'.\", line, from + l, c);\n                                                break; // No reason to continue checking numbers.\n                                            }\n                                            l += 1;\n                                            low = +c;\n                                            for (;;) {\n                                                c = s.charAt(l);\n                                                if (c < \"0\" || c > \"9\") {\n                                                    break;\n                                                }\n                                                l += 1;\n                                                low = +c + (low * 10);\n                                            }\n                                            high = low;\n                                            if (c === \",\") {\n                                                l += 1;\n                                                high = Infinity;\n                                                c = s.charAt(l);\n                                                if (c >= \"0\" && c <= \"9\") {\n                                                    l += 1;\n                                                    high = +c;\n                                                    for (;;) {\n                                                        c = s.charAt(l);\n                                                        if (c < \"0\" || c > \"9\") {\n                                                            break;\n                                                        }\n                                                        l += 1;\n                                                        high = +c + (high * 10);\n                                                    }\n                                                }\n                                            }\n                                            if (s.charAt(l) !== \"}\") {\n                                                warningAt(\n\"Expected '{a}' and instead saw '{b}'.\", line, from + l, \"}\", c);\n                                            } else {\n                                                l += 1;\n                                            }\n                                            if (s.charAt(l) === \"?\") {\n                                                l += 1;\n                                            }\n                                            if (low > high) {\n                                                warningAt(\n\"'{a}' should not be greater than '{b}'.\", line, from + l, low, high);\n                                            }\n                                        }\n                                    }\n                                }\n                                c = s.substr(0, l - 1);\n                                character += l;\n                                s = s.substr(l);\n                                return it(\"(regexp)\", c);\n                            }\n                            return it(\"(punctuator)\", t);\n\n    //      punctuator\n\n                        case \"#\":\n                            return it(\"(punctuator)\", t);\n                        default:\n                            return it(\"(punctuator)\", t);\n                        }\n                    }\n                }\n            }\n        };\n    }());\n\n\n    function addlabel(t, type, token) {\n        if (t === \"hasOwnProperty\") {\n            warning(\"'hasOwnProperty' is a really bad name.\");\n        }\n\n        // Define t in the current function in the current scope.\n        if (type === \"exception\") {\n            if (is_own(funct[\"(context)\"], t)) {\n                if (funct[t] !== true && !option.node) {\n                    warning(\"Value of '{a}' may be overwritten in IE.\", nexttoken, t);\n                }\n            }\n        }\n\n        if (is_own(funct, t) && !funct[\"(global)\"]) {\n            if (funct[t] === true) {\n                if (option.latedef)\n                    warning(\"'{a}' was used before it was defined.\", nexttoken, t);\n            } else {\n                if (!option.shadow && type !== \"exception\") {\n                    warning(\"'{a}' is already defined.\", nexttoken, t);\n                }\n            }\n        }\n\n        funct[t] = type;\n\n        if (token) {\n            funct[\"(tokens)\"][t] = token;\n        }\n\n        if (funct[\"(global)\"]) {\n            global[t] = funct;\n            if (is_own(implied, t)) {\n                if (option.latedef)\n                    warning(\"'{a}' was used before it was defined.\", nexttoken, t);\n                delete implied[t];\n            }\n        } else {\n            scope[t] = funct;\n        }\n    }\n\n\n    function doOption() {\n        var nt = nexttoken;\n        var o  = nt.value;\n        var quotmarkValue = option.quotmark;\n        var predef = {};\n        var b, obj, filter, t, tn, v, minus;\n\n        switch (o) {\n        case \"*/\":\n            error(\"Unbegun comment.\");\n            break;\n        case \"/*members\":\n        case \"/*member\":\n            o = \"/*members\";\n            if (!membersOnly) {\n                membersOnly = {};\n            }\n            obj = membersOnly;\n            option.quotmark = false;\n            break;\n        case \"/*jshint\":\n        case \"/*jslint\":\n            obj = option;\n            filter = boolOptions;\n            break;\n        case \"/*global\":\n            obj = predef;\n            break;\n        default:\n            error(\"What?\");\n        }\n\n        t = lex.token();\nloop:   for (;;) {\n            minus = false;\n            for (;;) {\n                if (t.type === \"special\" && t.value === \"*/\") {\n                    break loop;\n                }\n                if (t.id !== \"(endline)\" && t.id !== \",\") {\n                    break;\n                }\n                t = lex.token();\n            }\n\n            if (o === \"/*global\" && t.value === \"-\") {\n                minus = true;\n                t = lex.token();\n            }\n\n            if (t.type !== \"(string)\" && t.type !== \"(identifier)\" && o !== \"/*members\") {\n                error(\"Bad option.\", t);\n            }\n\n            v = lex.token();\n            if (v.id === \":\") {\n                v = lex.token();\n\n                if (obj === membersOnly) {\n                    error(\"Expected '{a}' and instead saw '{b}'.\", t, \"*/\", \":\");\n                }\n\n                if (o === \"/*jshint\") {\n                    checkOption(t.value, t);\n                }\n\n                var numericVals = [\n                    \"maxstatements\",\n                    \"maxparams\",\n                    \"maxdepth\",\n                    \"maxcomplexity\",\n                    \"maxerr\",\n                    \"maxlen\",\n                    \"indent\"\n                ];\n\n                if (numericVals.indexOf(t.value) > -1 && (o === \"/*jshint\" || o === \"/*jslint\")) {\n                    b = +v.value;\n\n                    if (typeof b !== \"number\" || !isFinite(b) || b <= 0 || Math.floor(b) !== b) {\n                        error(\"Expected a small integer and instead saw '{a}'.\", v, v.value);\n                    }\n\n                    if (t.value === \"indent\")\n                        obj.white = true;\n\n                    obj[t.value] = b;\n                } else if (t.value === \"validthis\") {\n                    if (funct[\"(global)\"]) {\n                        error(\"Option 'validthis' can't be used in a global scope.\");\n                    } else {\n                        if (v.value === \"true\" || v.value === \"false\")\n                            obj[t.value] = v.value === \"true\";\n                        else\n                            error(\"Bad option value.\", v);\n                    }\n                } else if (t.value === \"quotmark\" && (o === \"/*jshint\")) {\n                    switch (v.value) {\n                    case \"true\":\n                        obj.quotmark = true;\n                        break;\n                    case \"false\":\n                        obj.quotmark = false;\n                        break;\n                    case \"double\":\n                    case \"single\":\n                        obj.quotmark = v.value;\n                        break;\n                    default:\n                        error(\"Bad option value.\", v);\n                    }\n                } else if (v.value === \"true\" || v.value === \"false\") {\n                    if (o === \"/*jslint\") {\n                        tn = renamedOptions[t.value] || t.value;\n                        obj[tn] = v.value === \"true\";\n                        if (invertedOptions[tn] !== undefined) {\n                            obj[tn] = !obj[tn];\n                        }\n                    } else {\n                        obj[t.value] = v.value === \"true\";\n                    }\n\n                    if (t.value === \"newcap\")\n                        obj[\"(explicitNewcap)\"] = true;\n                } else {\n                    error(\"Bad option value.\", v);\n                }\n                t = lex.token();\n            } else {\n                if (o === \"/*jshint\" || o === \"/*jslint\") {\n                    error(\"Missing option value.\", t);\n                }\n\n                obj[t.value] = false;\n\n                if (o === \"/*global\" && minus === true) {\n                    JSHINT.blacklist[t.value] = t.value;\n                    updatePredefined();\n                }\n\n                t = v;\n            }\n        }\n\n        if (o === \"/*members\") {\n            option.quotmark = quotmarkValue;\n        }\n\n        combine(predefined, predef);\n\n        for (var key in predef) {\n            if (is_own(predef, key)) {\n                declared[key] = nt;\n            }\n        }\n\n        if (filter) {\n            assume();\n        }\n    }\n\n\n// We need a peek function. If it has an argument, it peeks that much farther\n// ahead. It is used to distinguish\n//     for ( var i in ...\n// from\n//     for ( var i = ...\n\n    function peek(p) {\n        var i = p || 0, j = 0, t;\n\n        while (j <= i) {\n            t = lookahead[j];\n            if (!t) {\n                t = lookahead[j] = lex.token();\n            }\n            j += 1;\n        }\n        return t;\n    }\n\n\n\n// Produce the next token. It looks for programming errors.\n\n    function advance(id, t) {\n        switch (token.id) {\n        case \"(number)\":\n            if (nexttoken.id === \".\") {\n                warning(\"A dot following a number can be confused with a decimal point.\", token);\n            }\n            break;\n        case \"-\":\n            if (nexttoken.id === \"-\" || nexttoken.id === \"--\") {\n                warning(\"Confusing minusses.\");\n            }\n            break;\n        case \"+\":\n            if (nexttoken.id === \"+\" || nexttoken.id === \"++\") {\n                warning(\"Confusing plusses.\");\n            }\n            break;\n        }\n\n        if (token.type === \"(string)\" || token.identifier) {\n            anonname = token.value;\n        }\n\n        if (id && nexttoken.id !== id) {\n            if (t) {\n                if (nexttoken.id === \"(end)\") {\n                    warning(\"Unmatched '{a}'.\", t, t.id);\n                } else {\n                    warning(\"Expected '{a}' to match '{b}' from line {c} and instead saw '{d}'.\",\n                            nexttoken, id, t.id, t.line, nexttoken.value);\n                }\n            } else if (nexttoken.type !== \"(identifier)\" ||\n                            nexttoken.value !== id) {\n                warning(\"Expected '{a}' and instead saw '{b}'.\",\n                        nexttoken, id, nexttoken.value);\n            }\n        }\n\n        prevtoken = token;\n        token = nexttoken;\n        for (;;) {\n            nexttoken = lookahead.shift() || lex.token();\n            if (nexttoken.id === \"(end)\" || nexttoken.id === \"(error)\") {\n                return;\n            }\n            if (nexttoken.type === \"special\") {\n                doOption();\n            } else {\n                if (nexttoken.id !== \"(endline)\") {\n                    break;\n                }\n            }\n        }\n    }\n\n\n// This is the heart of JSHINT, the Pratt parser. In addition to parsing, it\n// is looking for ad hoc lint patterns. We add .fud to Pratt's model, which is\n// like .nud except that it is only used on the first token of a statement.\n// Having .fud makes it much easier to define statement-oriented languages like\n// JavaScript. I retained Pratt's nomenclature.\n\n// .nud     Null denotation\n// .fud     First null denotation\n// .led     Left denotation\n//  lbp     Left binding power\n//  rbp     Right binding power\n\n// They are elements of the parsing method called Top Down Operator Precedence.\n\n    function expression(rbp, initial) {\n        var left, isArray = false, isObject = false;\n\n        if (nexttoken.id === \"(end)\")\n            error(\"Unexpected early end of program.\", token);\n\n        advance();\n        if (initial) {\n            anonname = \"anonymous\";\n            funct[\"(verb)\"] = token.value;\n        }\n        if (initial === true && token.fud) {\n            left = token.fud();\n        } else {\n            if (token.nud) {\n                left = token.nud();\n            } else {\n                if (nexttoken.type === \"(number)\" && token.id === \".\") {\n                    warning(\"A leading decimal point can be confused with a dot: '.{a}'.\",\n                            token, nexttoken.value);\n                    advance();\n                    return token;\n                } else {\n                    error(\"Expected an identifier and instead saw '{a}'.\",\n                            token, token.id);\n                }\n            }\n            while (rbp < nexttoken.lbp) {\n                isArray = token.value === \"Array\";\n                isObject = token.value === \"Object\";\n\n                // #527, new Foo.Array(), Foo.Array(), new Foo.Object(), Foo.Object()\n                // Line breaks in IfStatement heads exist to satisfy the checkJSHint\n                // \"Line too long.\" error.\n                if (left && (left.value || (left.first && left.first.value))) {\n                    // If the left.value is not \"new\", or the left.first.value is a \".\"\n                    // then safely assume that this is not \"new Array()\" and possibly\n                    // not \"new Object()\"...\n                    if (left.value !== \"new\" ||\n                      (left.first && left.first.value && left.first.value === \".\")) {\n                        isArray = false;\n                        // ...In the case of Object, if the left.value and token.value\n                        // are not equal, then safely assume that this not \"new Object()\"\n                        if (left.value !== token.value) {\n                            isObject = false;\n                        }\n                    }\n                }\n\n                advance();\n                if (isArray && token.id === \"(\" && nexttoken.id === \")\")\n                    warning(\"Use the array literal notation [].\", token);\n                if (isObject && token.id === \"(\" && nexttoken.id === \")\")\n                    warning(\"Use the object literal notation {}.\", token);\n                if (token.led) {\n                    left = token.led(left);\n                } else {\n                    error(\"Expected an operator and instead saw '{a}'.\",\n                        token, token.id);\n                }\n            }\n        }\n        return left;\n    }\n\n\n// Functions for conformance of style.\n\n    function adjacent(left, right) {\n        left = left || token;\n        right = right || nexttoken;\n        if (option.white) {\n            if (left.character !== right.from && left.line === right.line) {\n                left.from += (left.character - left.from);\n                warning(\"Unexpected space after '{a}'.\", left, left.value);\n            }\n        }\n    }\n\n    function nobreak(left, right) {\n        left = left || token;\n        right = right || nexttoken;\n        if (option.white && (left.character !== right.from || left.line !== right.line)) {\n            warning(\"Unexpected space before '{a}'.\", right, right.value);\n        }\n    }\n\n    function nospace(left, right) {\n        left = left || token;\n        right = right || nexttoken;\n        if (option.white && !left.comment) {\n            if (left.line === right.line) {\n                adjacent(left, right);\n            }\n        }\n    }\n\n    function nonadjacent(left, right) {\n        if (option.white) {\n            left = left || token;\n            right = right || nexttoken;\n            if (left.value === \";\" && right.value === \";\") {\n                return;\n            }\n            if (left.line === right.line && left.character === right.from) {\n                left.from += (left.character - left.from);\n                warning(\"Missing space after '{a}'.\",\n                        left, left.value);\n            }\n        }\n    }\n\n    function nobreaknonadjacent(left, right) {\n        left = left || token;\n        right = right || nexttoken;\n        if (!option.laxbreak && left.line !== right.line) {\n            warning(\"Bad line breaking before '{a}'.\", right, right.id);\n        } else if (option.white) {\n            left = left || token;\n            right = right || nexttoken;\n            if (left.character === right.from) {\n                left.from += (left.character - left.from);\n                warning(\"Missing space after '{a}'.\",\n                        left, left.value);\n            }\n        }\n    }\n\n    function indentation(bias) {\n        var i;\n        if (option.white && nexttoken.id !== \"(end)\") {\n            i = indent + (bias || 0);\n            if (nexttoken.from !== i) {\n                warning(\n\"Expected '{a}' to have an indentation at {b} instead at {c}.\",\n                        nexttoken, nexttoken.value, i, nexttoken.from);\n            }\n        }\n    }\n\n    function nolinebreak(t) {\n        t = t || token;\n        if (t.line !== nexttoken.line) {\n            warning(\"Line breaking error '{a}'.\", t, t.value);\n        }\n    }\n\n\n    function comma() {\n        if (token.line !== nexttoken.line) {\n            if (!option.laxcomma) {\n                if (comma.first) {\n                    warning(\"Comma warnings can be turned off with 'laxcomma'\");\n                    comma.first = false;\n                }\n                warning(\"Bad line breaking before '{a}'.\", token, nexttoken.id);\n            }\n        } else if (!token.comment && token.character !== nexttoken.from && option.white) {\n            token.from += (token.character - token.from);\n            warning(\"Unexpected space after '{a}'.\", token, token.value);\n        }\n        advance(\",\");\n        nonadjacent(token, nexttoken);\n    }\n\n\n// Functional constructors for making the symbols that will be inherited by\n// tokens.\n\n    function symbol(s, p) {\n        var x = syntax[s];\n        if (!x || typeof x !== \"object\") {\n            syntax[s] = x = {\n                id: s,\n                lbp: p,\n                value: s\n            };\n        }\n        return x;\n    }\n\n\n    function delim(s) {\n        return symbol(s, 0);\n    }\n\n\n    function stmt(s, f) {\n        var x = delim(s);\n        x.identifier = x.reserved = true;\n        x.fud = f;\n        return x;\n    }\n\n\n    function blockstmt(s, f) {\n        var x = stmt(s, f);\n        x.block = true;\n        return x;\n    }\n\n\n    function reserveName(x) {\n        var c = x.id.charAt(0);\n        if ((c >= \"a\" && c <= \"z\") || (c >= \"A\" && c <= \"Z\")) {\n            x.identifier = x.reserved = true;\n        }\n        return x;\n    }\n\n\n    function prefix(s, f) {\n        var x = symbol(s, 150);\n        reserveName(x);\n        x.nud = (typeof f === \"function\") ? f : function () {\n            this.right = expression(150);\n            this.arity = \"unary\";\n            if (this.id === \"++\" || this.id === \"--\") {\n                if (option.plusplus) {\n                    warning(\"Unexpected use of '{a}'.\", this, this.id);\n                } else if ((!this.right.identifier || this.right.reserved) &&\n                        this.right.id !== \".\" && this.right.id !== \"[\") {\n                    warning(\"Bad operand.\", this);\n                }\n            }\n            return this;\n        };\n        return x;\n    }\n\n\n    function type(s, f) {\n        var x = delim(s);\n        x.type = s;\n        x.nud = f;\n        return x;\n    }\n\n\n    function reserve(s, f) {\n        var x = type(s, f);\n        x.identifier = x.reserved = true;\n        return x;\n    }\n\n\n    function reservevar(s, v) {\n        return reserve(s, function () {\n            if (typeof v === \"function\") {\n                v(this);\n            }\n            return this;\n        });\n    }\n\n\n    function infix(s, f, p, w) {\n        var x = symbol(s, p);\n        reserveName(x);\n        x.led = function (left) {\n            if (!w) {\n                nobreaknonadjacent(prevtoken, token);\n                nonadjacent(token, nexttoken);\n            }\n            if (s === \"in\" && left.id === \"!\") {\n                warning(\"Confusing use of '{a}'.\", left, \"!\");\n            }\n            if (typeof f === \"function\") {\n                return f(left, this);\n            } else {\n                this.left = left;\n                this.right = expression(p);\n                return this;\n            }\n        };\n        return x;\n    }\n\n\n    function relation(s, f) {\n        var x = symbol(s, 100);\n        x.led = function (left) {\n            nobreaknonadjacent(prevtoken, token);\n            nonadjacent(token, nexttoken);\n            var right = expression(100);\n\n            if (isIdentifier(left, \"NaN\") || isIdentifier(right, \"NaN\")) {\n                warning(\"Use the isNaN function to compare with NaN.\", this);\n            } else if (f) {\n                f.apply(this, [left, right]);\n            }\n            if (left.id === \"!\") {\n                warning(\"Confusing use of '{a}'.\", left, \"!\");\n            }\n            if (right.id === \"!\") {\n                warning(\"Confusing use of '{a}'.\", right, \"!\");\n            }\n            this.left = left;\n            this.right = right;\n            return this;\n        };\n        return x;\n    }\n\n\n    function isPoorRelation(node) {\n        return node &&\n              ((node.type === \"(number)\" && +node.value === 0) ||\n               (node.type === \"(string)\" && node.value === \"\") ||\n               (node.type === \"null\" && !option.eqnull) ||\n                node.type === \"true\" ||\n                node.type === \"false\" ||\n                node.type === \"undefined\");\n    }\n\n\n    function assignop(s) {\n        symbol(s, 20).exps = true;\n\n        return infix(s, function (left, that) {\n            that.left = left;\n\n            if (predefined[left.value] === false &&\n                    scope[left.value][\"(global)\"] === true) {\n                warning(\"Read only.\", left);\n            } else if (left[\"function\"]) {\n                warning(\"'{a}' is a function.\", left, left.value);\n            }\n\n            if (left) {\n                if (option.esnext && funct[left.value] === \"const\") {\n                    warning(\"Attempting to override '{a}' which is a constant\", left, left.value);\n                }\n\n                if (left.id === \".\" || left.id === \"[\") {\n                    if (!left.left || left.left.value === \"arguments\") {\n                        warning(\"Bad assignment.\", that);\n                    }\n                    that.right = expression(19);\n                    return that;\n                } else if (left.identifier && !left.reserved) {\n                    if (funct[left.value] === \"exception\") {\n                        warning(\"Do not assign to the exception parameter.\", left);\n                    }\n                    that.right = expression(19);\n                    return that;\n                }\n\n                if (left === syntax[\"function\"]) {\n                    warning(\n\"Expected an identifier in an assignment and instead saw a function invocation.\",\n                                token);\n                }\n            }\n\n            error(\"Bad assignment.\", that);\n        }, 20);\n    }\n\n\n    function bitwise(s, f, p) {\n        var x = symbol(s, p);\n        reserveName(x);\n        x.led = (typeof f === \"function\") ? f : function (left) {\n            if (option.bitwise) {\n                warning(\"Unexpected use of '{a}'.\", this, this.id);\n            }\n            this.left = left;\n            this.right = expression(p);\n            return this;\n        };\n        return x;\n    }\n\n\n    function bitwiseassignop(s) {\n        symbol(s, 20).exps = true;\n        return infix(s, function (left, that) {\n            if (option.bitwise) {\n                warning(\"Unexpected use of '{a}'.\", that, that.id);\n            }\n            nonadjacent(prevtoken, token);\n            nonadjacent(token, nexttoken);\n            if (left) {\n                if (left.id === \".\" || left.id === \"[\" ||\n                        (left.identifier && !left.reserved)) {\n                    expression(19);\n                    return that;\n                }\n                if (left === syntax[\"function\"]) {\n                    warning(\n\"Expected an identifier in an assignment, and instead saw a function invocation.\",\n                                token);\n                }\n                return that;\n            }\n            error(\"Bad assignment.\", that);\n        }, 20);\n    }\n\n\n    function suffix(s) {\n        var x = symbol(s, 150);\n        x.led = function (left) {\n            if (option.plusplus) {\n                warning(\"Unexpected use of '{a}'.\", this, this.id);\n            } else if ((!left.identifier || left.reserved) &&\n                    left.id !== \".\" && left.id !== \"[\") {\n                warning(\"Bad operand.\", this);\n            }\n            this.left = left;\n            return this;\n        };\n        return x;\n    }\n\n\n    // fnparam means that this identifier is being defined as a function\n    // argument (see identifier())\n    function optionalidentifier(fnparam) {\n        if (nexttoken.identifier) {\n            advance();\n            if (token.reserved && !option.es5) {\n                // `undefined` as a function param is a common pattern to protect\n                // against the case when somebody does `undefined = true` and\n                // help with minification. More info: https://gist.github.com/315916\n                if (!fnparam || token.value !== \"undefined\") {\n                    warning(\"Expected an identifier and instead saw '{a}' (a reserved word).\",\n                            token, token.id);\n                }\n            }\n            return token.value;\n        }\n    }\n\n    // fnparam means that this identifier is being defined as a function\n    // argument\n    function identifier(fnparam) {\n        var i = optionalidentifier(fnparam);\n        if (i) {\n            return i;\n        }\n        if (token.id === \"function\" && nexttoken.id === \"(\") {\n            warning(\"Missing name in function declaration.\");\n        } else {\n            error(\"Expected an identifier and instead saw '{a}'.\",\n                    nexttoken, nexttoken.value);\n        }\n    }\n\n\n    function reachable(s) {\n        var i = 0, t;\n        if (nexttoken.id !== \";\" || noreach) {\n            return;\n        }\n        for (;;) {\n            t = peek(i);\n            if (t.reach) {\n                return;\n            }\n            if (t.id !== \"(endline)\") {\n                if (t.id === \"function\") {\n                    if (!option.latedef) {\n                        break;\n                    }\n                    warning(\n\"Inner functions should be listed at the top of the outer function.\", t);\n                    break;\n                }\n                warning(\"Unreachable '{a}' after '{b}'.\", t, t.value, s);\n                break;\n            }\n            i += 1;\n        }\n    }\n\n\n    function statement(noindent) {\n        var i = indent, r, s = scope, t = nexttoken;\n\n        if (t.id === \";\") {\n            advance(\";\");\n            return;\n        }\n\n        // Is this a labelled statement?\n\n        if (t.identifier && !t.reserved && peek().id === \":\") {\n            advance();\n            advance(\":\");\n            scope = Object.create(s);\n            addlabel(t.value, \"label\");\n\n            if (!nexttoken.labelled && nexttoken.value !== \"{\") {\n                warning(\"Label '{a}' on {b} statement.\", nexttoken, t.value, nexttoken.value);\n            }\n\n            if (jx.test(t.value + \":\")) {\n                warning(\"Label '{a}' looks like a javascript url.\", t, t.value);\n            }\n\n            nexttoken.label = t.value;\n            t = nexttoken;\n        }\n\n        // Is it a lonely block?\n\n        if (t.id === \"{\") {\n            block(true, true);\n            return;\n        }\n\n        // Parse the statement.\n\n        if (!noindent) {\n            indentation();\n        }\n        r = expression(0, true);\n\n        // Look for the final semicolon.\n\n        if (!t.block) {\n            if (!option.expr && (!r || !r.exps)) {\n                warning(\"Expected an assignment or function call and instead saw an expression.\",\n                    token);\n            } else if (option.nonew && r.id === \"(\" && r.left.id === \"new\") {\n                warning(\"Do not use 'new' for side effects.\", t);\n            }\n\n            if (nexttoken.id === \",\") {\n                return comma();\n            }\n\n            if (nexttoken.id !== \";\") {\n                if (!option.asi) {\n                    // If this is the last statement in a block that ends on\n                    // the same line *and* option lastsemic is on, ignore the warning.\n                    // Otherwise, complain about missing semicolon.\n                    if (!option.lastsemic || nexttoken.id !== \"}\" ||\n                            nexttoken.line !== token.line) {\n                        warningAt(\"Missing semicolon.\", token.line, token.character);\n                    }\n                }\n            } else {\n                adjacent(token, nexttoken);\n                advance(\";\");\n                nonadjacent(token, nexttoken);\n            }\n        }\n\n// Restore the indentation.\n\n        indent = i;\n        scope = s;\n        return r;\n    }\n\n\n    function statements(startLine) {\n        var a = [], p;\n\n        while (!nexttoken.reach && nexttoken.id !== \"(end)\") {\n            if (nexttoken.id === \";\") {\n                p = peek();\n                if (!p || p.id !== \"(\") {\n                    warning(\"Unnecessary semicolon.\");\n                }\n                advance(\";\");\n            } else {\n                a.push(statement(startLine === nexttoken.line));\n            }\n        }\n        return a;\n    }\n\n\n    /*\n     * read all directives\n     * recognizes a simple form of asi, but always\n     * warns, if it is used\n     */\n    function directives() {\n        var i, p, pn;\n\n        for (;;) {\n            if (nexttoken.id === \"(string)\") {\n                p = peek(0);\n                if (p.id === \"(endline)\") {\n                    i = 1;\n                    do {\n                        pn = peek(i);\n                        i = i + 1;\n                    } while (pn.id === \"(endline)\");\n\n                    if (pn.id !== \";\") {\n                        if (pn.id !== \"(string)\" && pn.id !== \"(number)\" &&\n                            pn.id !== \"(regexp)\" && pn.identifier !== true &&\n                            pn.id !== \"}\") {\n                            break;\n                        }\n                        warning(\"Missing semicolon.\", nexttoken);\n                    } else {\n                        p = pn;\n                    }\n                } else if (p.id === \"}\") {\n                    // directive with no other statements, warn about missing semicolon\n                    warning(\"Missing semicolon.\", p);\n                } else if (p.id !== \";\") {\n                    break;\n                }\n\n                indentation();\n                advance();\n                if (directive[token.value]) {\n                    warning(\"Unnecessary directive \\\"{a}\\\".\", token, token.value);\n                }\n\n                if (token.value === \"use strict\") {\n                    if (!option[\"(explicitNewcap)\"])\n                        option.newcap = true;\n                    option.undef = true;\n                }\n\n                // there's no directive negation, so always set to true\n                directive[token.value] = true;\n\n                if (p.id === \";\") {\n                    advance(\";\");\n                }\n                continue;\n            }\n            break;\n        }\n    }\n\n\n    /*\n     * Parses a single block. A block is a sequence of statements wrapped in\n     * braces.\n     *\n     * ordinary - true for everything but function bodies and try blocks.\n     * stmt     - true if block can be a single statement (e.g. in if/for/while).\n     * isfunc   - true if block is a function body\n     */\n    function block(ordinary, stmt, isfunc) {\n        var a,\n            b = inblock,\n            old_indent = indent,\n            m,\n            s = scope,\n            t,\n            line,\n            d;\n\n        inblock = ordinary;\n\n        if (!ordinary || !option.funcscope)\n            scope = Object.create(scope);\n\n        nonadjacent(token, nexttoken);\n        t = nexttoken;\n\n        var metrics = funct[\"(metrics)\"];\n        metrics.nestedBlockDepth += 1;\n        metrics.verifyMaxNestedBlockDepthPerFunction();\n\n        if (nexttoken.id === \"{\") {\n            advance(\"{\");\n            line = token.line;\n            if (nexttoken.id !== \"}\") {\n                indent += option.indent;\n                while (!ordinary && nexttoken.from > indent) {\n                    indent += option.indent;\n                }\n\n                if (isfunc) {\n                    m = {};\n                    for (d in directive) {\n                        if (is_own(directive, d)) {\n                            m[d] = directive[d];\n                        }\n                    }\n                    directives();\n\n                    if (option.strict && funct[\"(context)\"][\"(global)\"]) {\n                        if (!m[\"use strict\"] && !directive[\"use strict\"]) {\n                            warning(\"Missing \\\"use strict\\\" statement.\");\n                        }\n                    }\n                }\n\n                a = statements(line);\n\n                metrics.statementCount += a.length;\n\n                if (isfunc) {\n                    directive = m;\n                }\n\n                indent -= option.indent;\n                if (line !== nexttoken.line) {\n                    indentation();\n                }\n            } else if (line !== nexttoken.line) {\n                indentation();\n            }\n            advance(\"}\", t);\n            indent = old_indent;\n        } else if (!ordinary) {\n            error(\"Expected '{a}' and instead saw '{b}'.\",\n                  nexttoken, \"{\", nexttoken.value);\n        } else {\n            if (!stmt || option.curly)\n                warning(\"Expected '{a}' and instead saw '{b}'.\",\n                        nexttoken, \"{\", nexttoken.value);\n\n            noreach = true;\n            indent += option.indent;\n            // test indentation only if statement is in new line\n            a = [statement(nexttoken.line === token.line)];\n            indent -= option.indent;\n            noreach = false;\n        }\n        funct[\"(verb)\"] = null;\n        if (!ordinary || !option.funcscope) scope = s;\n        inblock = b;\n        if (ordinary && option.noempty && (!a || a.length === 0)) {\n            warning(\"Empty block.\");\n        }\n        metrics.nestedBlockDepth -= 1;\n        return a;\n    }\n\n\n    function countMember(m) {\n        if (membersOnly && typeof membersOnly[m] !== \"boolean\") {\n            warning(\"Unexpected /*member '{a}'.\", token, m);\n        }\n        if (typeof member[m] === \"number\") {\n            member[m] += 1;\n        } else {\n            member[m] = 1;\n        }\n    }\n\n\n    function note_implied(token) {\n        var name = token.value, line = token.line, a = implied[name];\n        if (typeof a === \"function\") {\n            a = false;\n        }\n\n        if (!a) {\n            a = [line];\n            implied[name] = a;\n        } else if (a[a.length - 1] !== line) {\n            a.push(line);\n        }\n    }\n\n\n    // Build the syntax table by declaring the syntactic elements of the language.\n\n    type(\"(number)\", function () {\n        return this;\n    });\n\n    type(\"(string)\", function () {\n        return this;\n    });\n\n    syntax[\"(identifier)\"] = {\n        type: \"(identifier)\",\n        lbp: 0,\n        identifier: true,\n        nud: function () {\n            var v = this.value,\n                s = scope[v],\n                f;\n\n            if (typeof s === \"function\") {\n                // Protection against accidental inheritance.\n                s = undefined;\n            } else if (typeof s === \"boolean\") {\n                f = funct;\n                funct = functions[0];\n                addlabel(v, \"var\");\n                s = funct;\n                funct = f;\n            }\n\n            // The name is in scope and defined in the current function.\n            if (funct === s) {\n                // Change 'unused' to 'var', and reject labels.\n                switch (funct[v]) {\n                case \"unused\":\n                    funct[v] = \"var\";\n                    break;\n                case \"unction\":\n                    funct[v] = \"function\";\n                    this[\"function\"] = true;\n                    break;\n                case \"function\":\n                    this[\"function\"] = true;\n                    break;\n                case \"label\":\n                    warning(\"'{a}' is a statement label.\", token, v);\n                    break;\n                }\n            } else if (funct[\"(global)\"]) {\n                // The name is not defined in the function.  If we are in the global\n                // scope, then we have an undefined variable.\n                //\n                // Operators typeof and delete do not raise runtime errors even if\n                // the base object of a reference is null so no need to display warning\n                // if we're inside of typeof or delete.\n\n                if (option.undef && typeof predefined[v] !== \"boolean\") {\n                    // Attempting to subscript a null reference will throw an\n                    // error, even within the typeof and delete operators\n                    if (!(anonname === \"typeof\" || anonname === \"delete\") ||\n                        (nexttoken && (nexttoken.value === \".\" || nexttoken.value === \"[\"))) {\n\n                        isundef(funct, \"'{a}' is not defined.\", token, v);\n                    }\n                }\n\n                note_implied(token);\n            } else {\n                // If the name is already defined in the current\n                // function, but not as outer, then there is a scope error.\n\n                switch (funct[v]) {\n                case \"closure\":\n                case \"function\":\n                case \"var\":\n                case \"unused\":\n                    warning(\"'{a}' used out of scope.\", token, v);\n                    break;\n                case \"label\":\n                    warning(\"'{a}' is a statement label.\", token, v);\n                    break;\n                case \"outer\":\n                case \"global\":\n                    break;\n                default:\n                    // If the name is defined in an outer function, make an outer entry,\n                    // and if it was unused, make it var.\n                    if (s === true) {\n                        funct[v] = true;\n                    } else if (s === null) {\n                        warning(\"'{a}' is not allowed.\", token, v);\n                        note_implied(token);\n                    } else if (typeof s !== \"object\") {\n                        // Operators typeof and delete do not raise runtime errors even\n                        // if the base object of a reference is null so no need to\n                        // display warning if we're inside of typeof or delete.\n                        if (option.undef) {\n                            // Attempting to subscript a null reference will throw an\n                            // error, even within the typeof and delete operators\n                            if (!(anonname === \"typeof\" || anonname === \"delete\") ||\n                                (nexttoken &&\n                                    (nexttoken.value === \".\" || nexttoken.value === \"[\"))) {\n\n                                isundef(funct, \"'{a}' is not defined.\", token, v);\n                            }\n                        }\n                        funct[v] = true;\n                        note_implied(token);\n                    } else {\n                        switch (s[v]) {\n                        case \"function\":\n                        case \"unction\":\n                            this[\"function\"] = true;\n                            s[v] = \"closure\";\n                            funct[v] = s[\"(global)\"] ? \"global\" : \"outer\";\n                            break;\n                        case \"var\":\n                        case \"unused\":\n                            s[v] = \"closure\";\n                            funct[v] = s[\"(global)\"] ? \"global\" : \"outer\";\n                            break;\n                        case \"closure\":\n                            funct[v] = s[\"(global)\"] ? \"global\" : \"outer\";\n                            break;\n                        case \"label\":\n                            warning(\"'{a}' is a statement label.\", token, v);\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        led: function () {\n            error(\"Expected an operator and instead saw '{a}'.\",\n                nexttoken, nexttoken.value);\n        }\n    };\n\n    type(\"(regexp)\", function () {\n        return this;\n    });\n\n\n// ECMAScript parser\n\n    delim(\"(endline)\");\n    delim(\"(begin)\");\n    delim(\"(end)\").reach = true;\n    delim(\"</\").reach = true;\n    delim(\"<!\");\n    delim(\"<!--\");\n    delim(\"-->\");\n    delim(\"(error)\").reach = true;\n    delim(\"}\").reach = true;\n    delim(\")\");\n    delim(\"]\");\n    delim(\"\\\"\").reach = true;\n    delim(\"'\").reach = true;\n    delim(\";\");\n    delim(\":\").reach = true;\n    delim(\",\");\n    delim(\"#\");\n    delim(\"@\");\n    reserve(\"else\");\n    reserve(\"case\").reach = true;\n    reserve(\"catch\");\n    reserve(\"default\").reach = true;\n    reserve(\"finally\");\n    reservevar(\"arguments\", function (x) {\n        if (directive[\"use strict\"] && funct[\"(global)\"]) {\n            warning(\"Strict violation.\", x);\n        }\n    });\n    reservevar(\"eval\");\n    reservevar(\"false\");\n    reservevar(\"Infinity\");\n    reservevar(\"null\");\n    reservevar(\"this\", function (x) {\n        if (directive[\"use strict\"] && !option.validthis && ((funct[\"(statement)\"] &&\n                funct[\"(name)\"].charAt(0) > \"Z\") || funct[\"(global)\"])) {\n            warning(\"Possible strict violation.\", x);\n        }\n    });\n    reservevar(\"true\");\n    reservevar(\"undefined\");\n    assignop(\"=\", \"assign\", 20);\n    assignop(\"+=\", \"assignadd\", 20);\n    assignop(\"-=\", \"assignsub\", 20);\n    assignop(\"*=\", \"assignmult\", 20);\n    assignop(\"/=\", \"assigndiv\", 20).nud = function () {\n        error(\"A regular expression literal can be confused with '/='.\");\n    };\n    assignop(\"%=\", \"assignmod\", 20);\n    bitwiseassignop(\"&=\", \"assignbitand\", 20);\n    bitwiseassignop(\"|=\", \"assignbitor\", 20);\n    bitwiseassignop(\"^=\", \"assignbitxor\", 20);\n    bitwiseassignop(\"<<=\", \"assignshiftleft\", 20);\n    bitwiseassignop(\">>=\", \"assignshiftright\", 20);\n    bitwiseassignop(\">>>=\", \"assignshiftrightunsigned\", 20);\n    infix(\"?\", function (left, that) {\n        that.left = left;\n        that.right = expression(10);\n        advance(\":\");\n        that[\"else\"] = expression(10);\n        return that;\n    }, 30);\n\n    infix(\"||\", \"or\", 40);\n    infix(\"&&\", \"and\", 50);\n    bitwise(\"|\", \"bitor\", 70);\n    bitwise(\"^\", \"bitxor\", 80);\n    bitwise(\"&\", \"bitand\", 90);\n    relation(\"==\", function (left, right) {\n        var eqnull = option.eqnull && (left.value === \"null\" || right.value === \"null\");\n\n        if (!eqnull && option.eqeqeq)\n            warning(\"Expected '{a}' and instead saw '{b}'.\", this, \"===\", \"==\");\n        else if (isPoorRelation(left))\n            warning(\"Use '{a}' to compare with '{b}'.\", this, \"===\", left.value);\n        else if (isPoorRelation(right))\n            warning(\"Use '{a}' to compare with '{b}'.\", this, \"===\", right.value);\n\n        return this;\n    });\n    relation(\"===\");\n    relation(\"!=\", function (left, right) {\n        var eqnull = option.eqnull &&\n                (left.value === \"null\" || right.value === \"null\");\n\n        if (!eqnull && option.eqeqeq) {\n            warning(\"Expected '{a}' and instead saw '{b}'.\",\n                    this, \"!==\", \"!=\");\n        } else if (isPoorRelation(left)) {\n            warning(\"Use '{a}' to compare with '{b}'.\",\n                    this, \"!==\", left.value);\n        } else if (isPoorRelation(right)) {\n            warning(\"Use '{a}' to compare with '{b}'.\",\n                    this, \"!==\", right.value);\n        }\n        return this;\n    });\n    relation(\"!==\");\n    relation(\"<\");\n    relation(\">\");\n    relation(\"<=\");\n    relation(\">=\");\n    bitwise(\"<<\", \"shiftleft\", 120);\n    bitwise(\">>\", \"shiftright\", 120);\n    bitwise(\">>>\", \"shiftrightunsigned\", 120);\n    infix(\"in\", \"in\", 120);\n    infix(\"instanceof\", \"instanceof\", 120);\n    infix(\"+\", function (left, that) {\n        var right = expression(130);\n        if (left && right && left.id === \"(string)\" && right.id === \"(string)\") {\n            left.value += right.value;\n            left.character = right.character;\n            if (!option.scripturl && jx.test(left.value)) {\n                warning(\"JavaScript URL.\", left);\n            }\n            return left;\n        }\n        that.left = left;\n        that.right = right;\n        return that;\n    }, 130);\n    prefix(\"+\", \"num\");\n    prefix(\"+++\", function () {\n        warning(\"Confusing pluses.\");\n        this.right = expression(150);\n        this.arity = \"unary\";\n        return this;\n    });\n    infix(\"+++\", function (left) {\n        warning(\"Confusing pluses.\");\n        this.left = left;\n        this.right = expression(130);\n        return this;\n    }, 130);\n    infix(\"-\", \"sub\", 130);\n    prefix(\"-\", \"neg\");\n    prefix(\"---\", function () {\n        warning(\"Confusing minuses.\");\n        this.right = expression(150);\n        this.arity = \"unary\";\n        return this;\n    });\n    infix(\"---\", function (left) {\n        warning(\"Confusing minuses.\");\n        this.left = left;\n        this.right = expression(130);\n        return this;\n    }, 130);\n    infix(\"*\", \"mult\", 140);\n    infix(\"/\", \"div\", 140);\n    infix(\"%\", \"mod\", 140);\n\n    suffix(\"++\", \"postinc\");\n    prefix(\"++\", \"preinc\");\n    syntax[\"++\"].exps = true;\n\n    suffix(\"--\", \"postdec\");\n    prefix(\"--\", \"predec\");\n    syntax[\"--\"].exps = true;\n    prefix(\"delete\", function () {\n        var p = expression(0);\n        if (!p || (p.id !== \".\" && p.id !== \"[\")) {\n            warning(\"Variables should not be deleted.\");\n        }\n        this.first = p;\n        return this;\n    }).exps = true;\n\n    prefix(\"~\", function () {\n        if (option.bitwise) {\n            warning(\"Unexpected '{a}'.\", this, \"~\");\n        }\n        expression(150);\n        return this;\n    });\n\n    prefix(\"!\", function () {\n        this.right = expression(150);\n        this.arity = \"unary\";\n        if (bang[this.right.id] === true) {\n            warning(\"Confusing use of '{a}'.\", this, \"!\");\n        }\n        return this;\n    });\n    prefix(\"typeof\", \"typeof\");\n    prefix(\"new\", function () {\n        var c = expression(155), i;\n        if (c && c.id !== \"function\") {\n            if (c.identifier) {\n                c[\"new\"] = true;\n                switch (c.value) {\n                case \"Number\":\n                case \"String\":\n                case \"Boolean\":\n                case \"Math\":\n                case \"JSON\":\n                    warning(\"Do not use {a} as a constructor.\", prevtoken, c.value);\n                    break;\n                case \"Function\":\n                    if (!option.evil) {\n                        warning(\"The Function constructor is eval.\");\n                    }\n                    break;\n                case \"Date\":\n                case \"RegExp\":\n                    break;\n                default:\n                    if (c.id !== \"function\") {\n                        i = c.value.substr(0, 1);\n                        if (option.newcap && (i < \"A\" || i > \"Z\") && !is_own(global, c.value)) {\n                            warning(\"A constructor name should start with an uppercase letter.\",\n                                token);\n                        }\n                    }\n                }\n            } else {\n                if (c.id !== \".\" && c.id !== \"[\" && c.id !== \"(\") {\n                    warning(\"Bad constructor.\", token);\n                }\n            }\n        } else {\n            if (!option.supernew)\n                warning(\"Weird construction. Delete 'new'.\", this);\n        }\n        adjacent(token, nexttoken);\n        if (nexttoken.id !== \"(\" && !option.supernew) {\n            warning(\"Missing '()' invoking a constructor.\",\n                token, token.value);\n        }\n        this.first = c;\n        return this;\n    });\n    syntax[\"new\"].exps = true;\n\n    prefix(\"void\").exps = true;\n\n    infix(\".\", function (left, that) {\n        adjacent(prevtoken, token);\n        nobreak();\n        var m = identifier();\n        if (typeof m === \"string\") {\n            countMember(m);\n        }\n        that.left = left;\n        that.right = m;\n        if (left && left.value === \"arguments\" && (m === \"callee\" || m === \"caller\")) {\n            if (option.noarg)\n                warning(\"Avoid arguments.{a}.\", left, m);\n            else if (directive[\"use strict\"])\n                error(\"Strict violation.\");\n        } else if (!option.evil && left && left.value === \"document\" &&\n                (m === \"write\" || m === \"writeln\")) {\n            warning(\"document.write can be a form of eval.\", left);\n        }\n        if (!option.evil && (m === \"eval\" || m === \"execScript\")) {\n            warning(\"eval is evil.\");\n        }\n        return that;\n    }, 160, true);\n\n    infix(\"(\", function (left, that) {\n        if (prevtoken.id !== \"}\" && prevtoken.id !== \")\") {\n            nobreak(prevtoken, token);\n        }\n        nospace();\n        if (option.immed && !left.immed && left.id === \"function\") {\n            warning(\"Wrap an immediate function invocation in parentheses \" +\n                \"to assist the reader in understanding that the expression \" +\n                \"is the result of a function, and not the function itself.\");\n        }\n        var n = 0,\n            p = [];\n        if (left) {\n            if (left.type === \"(identifier)\") {\n                if (left.value.match(/^[A-Z]([A-Z0-9_$]*[a-z][A-Za-z0-9_$]*)?$/)) {\n                    if (\"Number String Boolean Date Object\".indexOf(left.value) === -1) {\n                        if (left.value === \"Math\") {\n                            warning(\"Math is not a function.\", left);\n                        } else if (option.newcap) {\n                            warning(\"Missing 'new' prefix when invoking a constructor.\", left);\n                        }\n                    }\n                }\n            }\n        }\n        if (nexttoken.id !== \")\") {\n            for (;;) {\n                p[p.length] = expression(10);\n                n += 1;\n                if (nexttoken.id !== \",\") {\n                    break;\n                }\n                comma();\n            }\n        }\n        advance(\")\");\n        nospace(prevtoken, token);\n        if (typeof left === \"object\") {\n            if (left.value === \"parseInt\" && n === 1) {\n                warning(\"Missing radix parameter.\", token);\n            }\n            if (!option.evil) {\n                if (left.value === \"eval\" || left.value === \"Function\" ||\n                        left.value === \"execScript\") {\n                    warning(\"eval is evil.\", left);\n\n                    if (p[0] && [0].id === \"(string)\") {\n                        addInternalSrc(left, p[0].value);\n                    }\n                } else if (p[0] && p[0].id === \"(string)\" &&\n                       (left.value === \"setTimeout\" ||\n                        left.value === \"setInterval\")) {\n                    warning(\n    \"Implied eval is evil. Pass a function instead of a string.\", left);\n                    addInternalSrc(left, p[0].value);\n\n                // window.setTimeout/setInterval\n                } else if (p[0] && p[0].id === \"(string)\" &&\n                       left.value === \".\" &&\n                       left.left.value === \"window\" &&\n                       (left.right === \"setTimeout\" ||\n                        left.right === \"setInterval\")) {\n                    warning(\n    \"Implied eval is evil. Pass a function instead of a string.\", left);\n                    addInternalSrc(left, p[0].value);\n                }\n            }\n            if (!left.identifier && left.id !== \".\" && left.id !== \"[\" &&\n                    left.id !== \"(\" && left.id !== \"&&\" && left.id !== \"||\" &&\n                    left.id !== \"?\") {\n                warning(\"Bad invocation.\", left);\n            }\n        }\n        that.left = left;\n        return that;\n    }, 155, true).exps = true;\n\n    prefix(\"(\", function () {\n        nospace();\n        if (nexttoken.id === \"function\") {\n            nexttoken.immed = true;\n        }\n        var v = expression(0);\n        advance(\")\", this);\n        nospace(prevtoken, token);\n        if (option.immed && v.id === \"function\") {\n            if (nexttoken.id !== \"(\" &&\n              (nexttoken.id !== \".\" || (peek().value !== \"call\" && peek().value !== \"apply\"))) {\n                warning(\n\"Do not wrap function literals in parens unless they are to be immediately invoked.\",\n                        this);\n            }\n        }\n\n        return v;\n    });\n\n    infix(\"[\", function (left, that) {\n        nobreak(prevtoken, token);\n        nospace();\n        var e = expression(0), s;\n        if (e && e.type === \"(string)\") {\n            if (!option.evil && (e.value === \"eval\" || e.value === \"execScript\")) {\n                warning(\"eval is evil.\", that);\n            }\n            countMember(e.value);\n            if (!option.sub && ix.test(e.value)) {\n                s = syntax[e.value];\n                if (!s || !s.reserved) {\n                    warning(\"['{a}'] is better written in dot notation.\",\n                            prevtoken, e.value);\n                }\n            }\n        }\n        advance(\"]\", that);\n        nospace(prevtoken, token);\n        that.left = left;\n        that.right = e;\n        return that;\n    }, 160, true);\n\n    prefix(\"[\", function () {\n        var b = token.line !== nexttoken.line;\n        this.first = [];\n        if (b) {\n            indent += option.indent;\n            if (nexttoken.from === indent + option.indent) {\n                indent += option.indent;\n            }\n        }\n        while (nexttoken.id !== \"(end)\") {\n            while (nexttoken.id === \",\") {\n                if (!option.es5)\n                    warning(\"Extra comma.\");\n                advance(\",\");\n            }\n            if (nexttoken.id === \"]\") {\n                break;\n            }\n            if (b && token.line !== nexttoken.line) {\n                indentation();\n            }\n            this.first.push(expression(10));\n            if (nexttoken.id === \",\") {\n                comma();\n                if (nexttoken.id === \"]\" && !option.es5) {\n                    warning(\"Extra comma.\", token);\n                    break;\n                }\n            } else {\n                break;\n            }\n        }\n        if (b) {\n            indent -= option.indent;\n            indentation();\n        }\n        advance(\"]\", this);\n        return this;\n    }, 160);\n\n\n    function property_name() {\n        var id = optionalidentifier(true);\n        if (!id) {\n            if (nexttoken.id === \"(string)\") {\n                id = nexttoken.value;\n                advance();\n            } else if (nexttoken.id === \"(number)\") {\n                id = nexttoken.value.toString();\n                advance();\n            }\n        }\n        return id;\n    }\n\n\n    function functionparams() {\n        var next   = nexttoken;\n        var params = [];\n        var ident;\n\n        advance(\"(\");\n        nospace();\n\n        if (nexttoken.id === \")\") {\n            advance(\")\");\n            return;\n        }\n\n        for (;;) {\n            ident = identifier(true);\n            params.push(ident);\n            addlabel(ident, \"unused\", token);\n            if (nexttoken.id === \",\") {\n                comma();\n            } else {\n                advance(\")\", next);\n                nospace(prevtoken, token);\n                return params;\n            }\n        }\n    }\n\n\n    function doFunction(name, statement) {\n        var f;\n        var oldOption = option;\n        var oldScope  = scope;\n\n        option = Object.create(option);\n        scope  = Object.create(scope);\n\n        funct = {\n            \"(name)\"     : name || \"\\\"\" + anonname + \"\\\"\",\n            \"(line)\"     : nexttoken.line,\n            \"(character)\": nexttoken.character,\n            \"(context)\"  : funct,\n            \"(breakage)\" : 0,\n            \"(loopage)\"  : 0,\n            \"(metrics)\"  : createMetrics(nexttoken),\n            \"(scope)\"    : scope,\n            \"(statement)\": statement,\n            \"(tokens)\"   : {}\n        };\n\n        f = funct;\n        token.funct = funct;\n\n        functions.push(funct);\n\n        if (name) {\n            addlabel(name, \"function\");\n        }\n\n        funct[\"(params)\"] = functionparams();\n        funct[\"(metrics)\"].verifyMaxParametersPerFunction(funct[\"(params)\"]);\n\n        block(false, false, true);\n\n        funct[\"(metrics)\"].verifyMaxStatementsPerFunction();\n        funct[\"(metrics)\"].verifyMaxComplexityPerFunction();\n\n        scope = oldScope;\n        option = oldOption;\n        funct[\"(last)\"] = token.line;\n        funct[\"(lastcharacter)\"] = token.character;\n        funct = funct[\"(context)\"];\n\n        return f;\n    }\n\n    function createMetrics(functionStartToken) {\n        return {\n            statementCount: 0,\n            nestedBlockDepth: -1,\n            ComplexityCount: 1,\n            verifyMaxStatementsPerFunction: function () {\n                if (option.maxstatements &&\n                    this.statementCount > option.maxstatements) {\n                    var message = \"Too many statements per function (\" + this.statementCount + \").\";\n                    warning(message, functionStartToken);\n                }\n            },\n\n            verifyMaxParametersPerFunction: function (params) {\n                params = params || [];\n\n                if (option.maxparams && params.length > option.maxparams) {\n                    var message = \"Too many parameters per function (\" + params.length + \").\";\n                    warning(message, functionStartToken);\n                }\n            },\n\n            verifyMaxNestedBlockDepthPerFunction: function () {\n                if (option.maxdepth &&\n                    this.nestedBlockDepth > 0 &&\n                    this.nestedBlockDepth === option.maxdepth + 1) {\n                    var message = \"Blocks are nested too deeply (\" + this.nestedBlockDepth + \").\";\n                    warning(message);\n                }\n            },\n\n            verifyMaxComplexityPerFunction: function () {\n                var max = option.maxcomplexity;\n                var cc = this.ComplexityCount;\n                if (max && cc > max) {\n                    var message = \"Cyclomatic complexity is too high per function (\" + cc + \").\";\n                    warning(message, functionStartToken);\n                }\n            }\n        };\n    }\n\n    function increaseComplexityCount() {\n        funct[\"(metrics)\"].ComplexityCount += 1;\n    }\n\n\n    (function (x) {\n        x.nud = function () {\n            var b, f, i, p, t;\n            var props = {}; // All properties, including accessors\n\n            function saveProperty(name, token) {\n                if (props[name] && is_own(props, name))\n                    warning(\"Duplicate member '{a}'.\", nexttoken, i);\n                else\n                    props[name] = {};\n\n                props[name].basic = true;\n                props[name].basicToken = token;\n            }\n\n            function saveSetter(name, token) {\n                if (props[name] && is_own(props, name)) {\n                    if (props[name].basic || props[name].setter)\n                        warning(\"Duplicate member '{a}'.\", nexttoken, i);\n                } else {\n                    props[name] = {};\n                }\n\n                props[name].setter = true;\n                props[name].setterToken = token;\n            }\n\n            function saveGetter(name) {\n                if (props[name] && is_own(props, name)) {\n                    if (props[name].basic || props[name].getter)\n                        warning(\"Duplicate member '{a}'.\", nexttoken, i);\n                } else {\n                    props[name] = {};\n                }\n\n                props[name].getter = true;\n                props[name].getterToken = token;\n            }\n\n            b = token.line !== nexttoken.line;\n            if (b) {\n                indent += option.indent;\n                if (nexttoken.from === indent + option.indent) {\n                    indent += option.indent;\n                }\n            }\n            for (;;) {\n                if (nexttoken.id === \"}\") {\n                    break;\n                }\n                if (b) {\n                    indentation();\n                }\n                if (nexttoken.value === \"get\" && peek().id !== \":\") {\n                    advance(\"get\");\n                    if (!option.es5) {\n                        error(\"get/set are ES5 features.\");\n                    }\n                    i = property_name();\n                    if (!i) {\n                        error(\"Missing property name.\");\n                    }\n                    saveGetter(i);\n                    t = nexttoken;\n                    adjacent(token, nexttoken);\n                    f = doFunction();\n                    p = f[\"(params)\"];\n                    if (p) {\n                        warning(\"Unexpected parameter '{a}' in get {b} function.\", t, p[0], i);\n                    }\n                    adjacent(token, nexttoken);\n                } else if (nexttoken.value === \"set\" && peek().id !== \":\") {\n                    advance(\"set\");\n                    if (!option.es5) {\n                        error(\"get/set are ES5 features.\");\n                    }\n                    i = property_name();\n                    if (!i) {\n                        error(\"Missing property name.\");\n                    }\n                    saveSetter(i, nexttoken);\n                    t = nexttoken;\n                    adjacent(token, nexttoken);\n                    f = doFunction();\n                    p = f[\"(params)\"];\n                    if (!p || p.length !== 1) {\n                        warning(\"Expected a single parameter in set {a} function.\", t, i);\n                    }\n                } else {\n                    i = property_name();\n                    saveProperty(i, nexttoken);\n                    if (typeof i !== \"string\") {\n                        break;\n                    }\n                    advance(\":\");\n                    nonadjacent(token, nexttoken);\n                    expression(10);\n                }\n\n                countMember(i);\n                if (nexttoken.id === \",\") {\n                    comma();\n                    if (nexttoken.id === \",\") {\n                        warning(\"Extra comma.\", token);\n                    } else if (nexttoken.id === \"}\" && !option.es5) {\n                        warning(\"Extra comma.\", token);\n                    }\n                } else {\n                    break;\n                }\n            }\n            if (b) {\n                indent -= option.indent;\n                indentation();\n            }\n            advance(\"}\", this);\n\n            // Check for lonely setters if in the ES5 mode.\n            if (option.es5) {\n                for (var name in props) {\n                    if (is_own(props, name) && props[name].setter && !props[name].getter) {\n                        warning(\"Setter is defined without getter.\", props[name].setterToken);\n                    }\n                }\n            }\n            return this;\n        };\n        x.fud = function () {\n            error(\"Expected to see a statement and instead saw a block.\", token);\n        };\n    }(delim(\"{\")));\n\n// This Function is called when esnext option is set to true\n// it adds the `const` statement to JSHINT\n\n    useESNextSyntax = function () {\n        var conststatement = stmt(\"const\", function (prefix) {\n            var id, name, value;\n\n            this.first = [];\n            for (;;) {\n                nonadjacent(token, nexttoken);\n                id = identifier();\n                if (funct[id] === \"const\") {\n                    warning(\"const '\" + id + \"' has already been declared\");\n                }\n                if (funct[\"(global)\"] && predefined[id] === false) {\n                    warning(\"Redefinition of '{a}'.\", token, id);\n                }\n                addlabel(id, \"const\");\n                if (prefix) {\n                    break;\n                }\n                name = token;\n                this.first.push(token);\n\n                if (nexttoken.id !== \"=\") {\n                    warning(\"const \" +\n                      \"'{a}' is initialized to 'undefined'.\", token, id);\n                }\n\n                if (nexttoken.id === \"=\") {\n                    nonadjacent(token, nexttoken);\n                    advance(\"=\");\n                    nonadjacent(token, nexttoken);\n                    if (nexttoken.id === \"undefined\") {\n                        warning(\"It is not necessary to initialize \" +\n                          \"'{a}' to 'undefined'.\", token, id);\n                    }\n                    if (peek(0).id === \"=\" && nexttoken.identifier) {\n                        error(\"Constant {a} was not declared correctly.\",\n                                nexttoken, nexttoken.value);\n                    }\n                    value = expression(0);\n                    name.first = value;\n                }\n\n                if (nexttoken.id !== \",\") {\n                    break;\n                }\n                comma();\n            }\n            return this;\n        });\n        conststatement.exps = true;\n    };\n\n    var varstatement = stmt(\"var\", function (prefix) {\n        // JavaScript does not have block scope. It only has function scope. So,\n        // declaring a variable in a block can have unexpected consequences.\n        var id, name, value;\n\n        if (funct[\"(onevar)\"] && option.onevar) {\n            warning(\"Too many var statements.\");\n        } else if (!funct[\"(global)\"]) {\n            funct[\"(onevar)\"] = true;\n        }\n\n        this.first = [];\n\n        for (;;) {\n            nonadjacent(token, nexttoken);\n            id = identifier();\n\n            if (option.esnext && funct[id] === \"const\") {\n                warning(\"const '\" + id + \"' has already been declared\");\n            }\n\n            if (funct[\"(global)\"] && predefined[id] === false) {\n                warning(\"Redefinition of '{a}'.\", token, id);\n            }\n\n            addlabel(id, \"unused\", token);\n\n            if (prefix) {\n                break;\n            }\n\n            name = token;\n            this.first.push(token);\n\n            if (nexttoken.id === \"=\") {\n                nonadjacent(token, nexttoken);\n                advance(\"=\");\n                nonadjacent(token, nexttoken);\n                if (nexttoken.id === \"undefined\") {\n                    warning(\"It is not necessary to initialize '{a}' to 'undefined'.\", token, id);\n                }\n                if (peek(0).id === \"=\" && nexttoken.identifier) {\n                    error(\"Variable {a} was not declared correctly.\",\n                            nexttoken, nexttoken.value);\n                }\n                value = expression(0);\n                name.first = value;\n            }\n            if (nexttoken.id !== \",\") {\n                break;\n            }\n            comma();\n        }\n        return this;\n    });\n    varstatement.exps = true;\n\n    blockstmt(\"function\", function () {\n        if (inblock) {\n            warning(\"Function declarations should not be placed in blocks. \" +\n                \"Use a function expression or move the statement to the top of \" +\n                \"the outer function.\", token);\n\n        }\n        var i = identifier();\n        if (option.esnext && funct[i] === \"const\") {\n            warning(\"const '\" + i + \"' has already been declared\");\n        }\n        adjacent(token, nexttoken);\n        addlabel(i, \"unction\", token);\n\n        doFunction(i, { statement: true });\n        if (nexttoken.id === \"(\" && nexttoken.line === token.line) {\n            error(\n\"Function declarations are not invocable. Wrap the whole function invocation in parens.\");\n        }\n        return this;\n    });\n\n    prefix(\"function\", function () {\n        var i = optionalidentifier();\n        if (i) {\n            adjacent(token, nexttoken);\n        } else {\n            nonadjacent(token, nexttoken);\n        }\n        doFunction(i);\n        if (!option.loopfunc && funct[\"(loopage)\"]) {\n            warning(\"Don't make functions within a loop.\");\n        }\n        return this;\n    });\n\n    blockstmt(\"if\", function () {\n        var t = nexttoken;\n        increaseComplexityCount();\n        advance(\"(\");\n        nonadjacent(this, t);\n        nospace();\n        expression(20);\n        if (nexttoken.id === \"=\") {\n            if (!option.boss)\n                warning(\"Expected a conditional expression and instead saw an assignment.\");\n            advance(\"=\");\n            expression(20);\n        }\n        advance(\")\", t);\n        nospace(prevtoken, token);\n        block(true, true);\n        if (nexttoken.id === \"else\") {\n            nonadjacent(token, nexttoken);\n            advance(\"else\");\n            if (nexttoken.id === \"if\" || nexttoken.id === \"switch\") {\n                statement(true);\n            } else {\n                block(true, true);\n            }\n        }\n        return this;\n    });\n\n    blockstmt(\"try\", function () {\n        var b;\n\n        function doCatch() {\n            var oldScope = scope;\n            var e;\n\n            advance(\"catch\");\n            nonadjacent(token, nexttoken);\n            advance(\"(\");\n\n            scope = Object.create(oldScope);\n\n            e = nexttoken.value;\n            if (nexttoken.type !== \"(identifier)\") {\n                e = null;\n                warning(\"Expected an identifier and instead saw '{a}'.\", nexttoken, e);\n            }\n\n            advance();\n            advance(\")\");\n\n            funct = {\n                \"(name)\"     : \"(catch)\",\n                \"(line)\"     : nexttoken.line,\n                \"(character)\": nexttoken.character,\n                \"(context)\"  : funct,\n                \"(breakage)\" : funct[\"(breakage)\"],\n                \"(loopage)\"  : funct[\"(loopage)\"],\n                \"(scope)\"    : scope,\n                \"(statement)\": false,\n                \"(metrics)\"  : createMetrics(nexttoken),\n                \"(catch)\"    : true,\n                \"(tokens)\"   : {}\n            };\n\n            if (e) {\n                addlabel(e, \"exception\");\n            }\n\n            token.funct = funct;\n            functions.push(funct);\n\n            block(false);\n\n            scope = oldScope;\n\n            funct[\"(last)\"] = token.line;\n            funct[\"(lastcharacter)\"] = token.character;\n            funct = funct[\"(context)\"];\n        }\n\n        block(false);\n\n        if (nexttoken.id === \"catch\") {\n            increaseComplexityCount();\n            doCatch();\n            b = true;\n        }\n\n        if (nexttoken.id === \"finally\") {\n            advance(\"finally\");\n            block(false);\n            return;\n        } else if (!b) {\n            error(\"Expected '{a}' and instead saw '{b}'.\",\n                    nexttoken, \"catch\", nexttoken.value);\n        }\n\n        return this;\n    });\n\n    blockstmt(\"while\", function () {\n        var t = nexttoken;\n        funct[\"(breakage)\"] += 1;\n        funct[\"(loopage)\"] += 1;\n        increaseComplexityCount();\n        advance(\"(\");\n        nonadjacent(this, t);\n        nospace();\n        expression(20);\n        if (nexttoken.id === \"=\") {\n            if (!option.boss)\n                warning(\"Expected a conditional expression and instead saw an assignment.\");\n            advance(\"=\");\n            expression(20);\n        }\n        advance(\")\", t);\n        nospace(prevtoken, token);\n        block(true, true);\n        funct[\"(breakage)\"] -= 1;\n        funct[\"(loopage)\"] -= 1;\n        return this;\n    }).labelled = true;\n\n    blockstmt(\"with\", function () {\n        var t = nexttoken;\n        if (directive[\"use strict\"]) {\n            error(\"'with' is not allowed in strict mode.\", token);\n        } else if (!option.withstmt) {\n            warning(\"Don't use 'with'.\", token);\n        }\n\n        advance(\"(\");\n        nonadjacent(this, t);\n        nospace();\n        expression(0);\n        advance(\")\", t);\n        nospace(prevtoken, token);\n        block(true, true);\n\n        return this;\n    });\n\n    blockstmt(\"switch\", function () {\n        var t = nexttoken,\n            g = false;\n        funct[\"(breakage)\"] += 1;\n        advance(\"(\");\n        nonadjacent(this, t);\n        nospace();\n        this.condition = expression(20);\n        advance(\")\", t);\n        nospace(prevtoken, token);\n        nonadjacent(token, nexttoken);\n        t = nexttoken;\n        advance(\"{\");\n        nonadjacent(token, nexttoken);\n        indent += option.indent;\n        this.cases = [];\n        for (;;) {\n            switch (nexttoken.id) {\n            case \"case\":\n                switch (funct[\"(verb)\"]) {\n                case \"break\":\n                case \"case\":\n                case \"continue\":\n                case \"return\":\n                case \"switch\":\n                case \"throw\":\n                    break;\n                default:\n                    // You can tell JSHint that you don't use break intentionally by\n                    // adding a comment /* falls through */ on a line just before\n                    // the next `case`.\n                    if (!ft.test(lines[nexttoken.line - 2])) {\n                        warning(\n                            \"Expected a 'break' statement before 'case'.\",\n                            token);\n                    }\n                }\n                indentation(-option.indent);\n                advance(\"case\");\n                this.cases.push(expression(20));\n                increaseComplexityCount();\n                g = true;\n                advance(\":\");\n                funct[\"(verb)\"] = \"case\";\n                break;\n            case \"default\":\n                switch (funct[\"(verb)\"]) {\n                case \"break\":\n                case \"continue\":\n                case \"return\":\n                case \"throw\":\n                    break;\n                default:\n                    if (!ft.test(lines[nexttoken.line - 2])) {\n                        warning(\n                            \"Expected a 'break' statement before 'default'.\",\n                            token);\n                    }\n                }\n                indentation(-option.indent);\n                advance(\"default\");\n                g = true;\n                advance(\":\");\n                break;\n            case \"}\":\n                indent -= option.indent;\n                indentation();\n                advance(\"}\", t);\n                if (this.cases.length === 1 || this.condition.id === \"true\" ||\n                        this.condition.id === \"false\") {\n                    if (!option.onecase)\n                        warning(\"This 'switch' should be an 'if'.\", this);\n                }\n                funct[\"(breakage)\"] -= 1;\n                funct[\"(verb)\"] = undefined;\n                return;\n            case \"(end)\":\n                error(\"Missing '{a}'.\", nexttoken, \"}\");\n                return;\n            default:\n                if (g) {\n                    switch (token.id) {\n                    case \",\":\n                        error(\"Each value should have its own case label.\");\n                        return;\n                    case \":\":\n                        g = false;\n                        statements();\n                        break;\n                    default:\n                        error(\"Missing ':' on a case clause.\", token);\n                        return;\n                    }\n                } else {\n                    if (token.id === \":\") {\n                        advance(\":\");\n                        error(\"Unexpected '{a}'.\", token, \":\");\n                        statements();\n                    } else {\n                        error(\"Expected '{a}' and instead saw '{b}'.\",\n                            nexttoken, \"case\", nexttoken.value);\n                        return;\n                    }\n                }\n            }\n        }\n    }).labelled = true;\n\n    stmt(\"debugger\", function () {\n        if (!option.debug) {\n            warning(\"All 'debugger' statements should be removed.\");\n        }\n        return this;\n    }).exps = true;\n\n    (function () {\n        var x = stmt(\"do\", function () {\n            funct[\"(breakage)\"] += 1;\n            funct[\"(loopage)\"] += 1;\n            increaseComplexityCount();\n\n            this.first = block(true);\n            advance(\"while\");\n            var t = nexttoken;\n            nonadjacent(token, t);\n            advance(\"(\");\n            nospace();\n            expression(20);\n            if (nexttoken.id === \"=\") {\n                if (!option.boss)\n                    warning(\"Expected a conditional expression and instead saw an assignment.\");\n                advance(\"=\");\n                expression(20);\n            }\n            advance(\")\", t);\n            nospace(prevtoken, token);\n            funct[\"(breakage)\"] -= 1;\n            funct[\"(loopage)\"] -= 1;\n            return this;\n        });\n        x.labelled = true;\n        x.exps = true;\n    }());\n\n    blockstmt(\"for\", function () {\n        var s, t = nexttoken;\n        funct[\"(breakage)\"] += 1;\n        funct[\"(loopage)\"] += 1;\n        increaseComplexityCount();\n        advance(\"(\");\n        nonadjacent(this, t);\n        nospace();\n        if (peek(nexttoken.id === \"var\" ? 1 : 0).id === \"in\") {\n            if (nexttoken.id === \"var\") {\n                advance(\"var\");\n                varstatement.fud.call(varstatement, true);\n            } else {\n                switch (funct[nexttoken.value]) {\n                case \"unused\":\n                    funct[nexttoken.value] = \"var\";\n                    break;\n                case \"var\":\n                    break;\n                default:\n                    warning(\"Bad for in variable '{a}'.\",\n                            nexttoken, nexttoken.value);\n                }\n                advance();\n            }\n            advance(\"in\");\n            expression(20);\n            advance(\")\", t);\n            s = block(true, true);\n            if (option.forin && s && (s.length > 1 || typeof s[0] !== \"object\" ||\n                    s[0].value !== \"if\")) {\n                warning(\"The body of a for in should be wrapped in an if statement to filter \" +\n                        \"unwanted properties from the prototype.\", this);\n            }\n            funct[\"(breakage)\"] -= 1;\n            funct[\"(loopage)\"] -= 1;\n            return this;\n        } else {\n            if (nexttoken.id !== \";\") {\n                if (nexttoken.id === \"var\") {\n                    advance(\"var\");\n                    varstatement.fud.call(varstatement);\n                } else {\n                    for (;;) {\n                        expression(0, \"for\");\n                        if (nexttoken.id !== \",\") {\n                            break;\n                        }\n                        comma();\n                    }\n                }\n            }\n            nolinebreak(token);\n            advance(\";\");\n            if (nexttoken.id !== \";\") {\n                expression(20);\n                if (nexttoken.id === \"=\") {\n                    if (!option.boss)\n                        warning(\"Expected a conditional expression and instead saw an assignment.\");\n                    advance(\"=\");\n                    expression(20);\n                }\n            }\n            nolinebreak(token);\n            advance(\";\");\n            if (nexttoken.id === \";\") {\n                error(\"Expected '{a}' and instead saw '{b}'.\",\n                        nexttoken, \")\", \";\");\n            }\n            if (nexttoken.id !== \")\") {\n                for (;;) {\n                    expression(0, \"for\");\n                    if (nexttoken.id !== \",\") {\n                        break;\n                    }\n                    comma();\n                }\n            }\n            advance(\")\", t);\n            nospace(prevtoken, token);\n            block(true, true);\n            funct[\"(breakage)\"] -= 1;\n            funct[\"(loopage)\"] -= 1;\n            return this;\n        }\n    }).labelled = true;\n\n\n    stmt(\"break\", function () {\n        var v = nexttoken.value;\n\n        if (funct[\"(breakage)\"] === 0)\n            warning(\"Unexpected '{a}'.\", nexttoken, this.value);\n\n        if (!option.asi)\n            nolinebreak(this);\n\n        if (nexttoken.id !== \";\") {\n            if (token.line === nexttoken.line) {\n                if (funct[v] !== \"label\") {\n                    warning(\"'{a}' is not a statement label.\", nexttoken, v);\n                } else if (scope[v] !== funct) {\n                    warning(\"'{a}' is out of scope.\", nexttoken, v);\n                }\n                this.first = nexttoken;\n                advance();\n            }\n        }\n        reachable(\"break\");\n        return this;\n    }).exps = true;\n\n\n    stmt(\"continue\", function () {\n        var v = nexttoken.value;\n\n        if (funct[\"(breakage)\"] === 0)\n            warning(\"Unexpected '{a}'.\", nexttoken, this.value);\n\n        if (!option.asi)\n            nolinebreak(this);\n\n        if (nexttoken.id !== \";\") {\n            if (token.line === nexttoken.line) {\n                if (funct[v] !== \"label\") {\n                    warning(\"'{a}' is not a statement label.\", nexttoken, v);\n                } else if (scope[v] !== funct) {\n                    warning(\"'{a}' is out of scope.\", nexttoken, v);\n                }\n                this.first = nexttoken;\n                advance();\n            }\n        } else if (!funct[\"(loopage)\"]) {\n            warning(\"Unexpected '{a}'.\", nexttoken, this.value);\n        }\n        reachable(\"continue\");\n        return this;\n    }).exps = true;\n\n\n    stmt(\"return\", function () {\n        if (this.line === nexttoken.line) {\n            if (nexttoken.id === \"(regexp)\")\n                warning(\"Wrap the /regexp/ literal in parens to disambiguate the slash operator.\");\n\n            if (nexttoken.id !== \";\" && !nexttoken.reach) {\n                nonadjacent(token, nexttoken);\n                if (peek().value === \"=\" && !option.boss) {\n                    warningAt(\"Did you mean to return a conditional instead of an assignment?\",\n                              token.line, token.character + 1);\n                }\n                this.first = expression(0);\n            }\n        } else if (!option.asi) {\n            nolinebreak(this); // always warn (Line breaking error)\n        }\n        reachable(\"return\");\n        return this;\n    }).exps = true;\n\n\n    stmt(\"throw\", function () {\n        nolinebreak(this);\n        nonadjacent(token, nexttoken);\n        this.first = expression(20);\n        reachable(\"throw\");\n        return this;\n    }).exps = true;\n\n//  Superfluous reserved words\n\n    reserve(\"class\");\n    reserve(\"const\");\n    reserve(\"enum\");\n    reserve(\"export\");\n    reserve(\"extends\");\n    reserve(\"import\");\n    reserve(\"super\");\n\n    reserve(\"let\");\n    reserve(\"yield\");\n    reserve(\"implements\");\n    reserve(\"interface\");\n    reserve(\"package\");\n    reserve(\"private\");\n    reserve(\"protected\");\n    reserve(\"public\");\n    reserve(\"static\");\n\n\n// Parse JSON\n\n    function jsonValue() {\n\n        function jsonObject() {\n            var o = {}, t = nexttoken;\n            advance(\"{\");\n            if (nexttoken.id !== \"}\") {\n                for (;;) {\n                    if (nexttoken.id === \"(end)\") {\n                        error(\"Missing '}' to match '{' from line {a}.\",\n                                nexttoken, t.line);\n                    } else if (nexttoken.id === \"}\") {\n                        warning(\"Unexpected comma.\", token);\n                        break;\n                    } else if (nexttoken.id === \",\") {\n                        error(\"Unexpected comma.\", nexttoken);\n                    } else if (nexttoken.id !== \"(string)\") {\n                        warning(\"Expected a string and instead saw {a}.\",\n                                nexttoken, nexttoken.value);\n                    }\n                    if (o[nexttoken.value] === true) {\n                        warning(\"Duplicate key '{a}'.\",\n                                nexttoken, nexttoken.value);\n                    } else if ((nexttoken.value === \"__proto__\" &&\n                        !option.proto) || (nexttoken.value === \"__iterator__\" &&\n                        !option.iterator)) {\n                        warning(\"The '{a}' key may produce unexpected results.\",\n                            nexttoken, nexttoken.value);\n                    } else {\n                        o[nexttoken.value] = true;\n                    }\n                    advance();\n                    advance(\":\");\n                    jsonValue();\n                    if (nexttoken.id !== \",\") {\n                        break;\n                    }\n                    advance(\",\");\n                }\n            }\n            advance(\"}\");\n        }\n\n        function jsonArray() {\n            var t = nexttoken;\n            advance(\"[\");\n            if (nexttoken.id !== \"]\") {\n                for (;;) {\n                    if (nexttoken.id === \"(end)\") {\n                        error(\"Missing ']' to match '[' from line {a}.\",\n                                nexttoken, t.line);\n                    } else if (nexttoken.id === \"]\") {\n                        warning(\"Unexpected comma.\", token);\n                        break;\n                    } else if (nexttoken.id === \",\") {\n                        error(\"Unexpected comma.\", nexttoken);\n                    }\n                    jsonValue();\n                    if (nexttoken.id !== \",\") {\n                        break;\n                    }\n                    advance(\",\");\n                }\n            }\n            advance(\"]\");\n        }\n\n        switch (nexttoken.id) {\n        case \"{\":\n            jsonObject();\n            break;\n        case \"[\":\n            jsonArray();\n            break;\n        case \"true\":\n        case \"false\":\n        case \"null\":\n        case \"(number)\":\n        case \"(string)\":\n            advance();\n            break;\n        case \"-\":\n            advance(\"-\");\n            if (token.character !== nexttoken.from) {\n                warning(\"Unexpected space after '-'.\", token);\n            }\n            adjacent(token, nexttoken);\n            advance(\"(number)\");\n            break;\n        default:\n            error(\"Expected a JSON value.\", nexttoken);\n        }\n    }\n\n\n    // The actual JSHINT function itself.\n    var itself = function (s, o, g) {\n        var a, i, k, x;\n        var optionKeys;\n        var newOptionObj = {};\n\n        if (o && o.scope) {\n            JSHINT.scope = o.scope;\n        } else {\n            JSHINT.errors = [];\n            JSHINT.undefs = [];\n            JSHINT.internals = [];\n            JSHINT.blacklist = {};\n            JSHINT.scope = \"(main)\";\n        }\n\n        predefined = Object.create(standard);\n        declared = Object.create(null);\n        combine(predefined, g || {});\n\n        if (o) {\n            a = o.predef;\n            if (a) {\n                if (!Array.isArray(a) && typeof a === \"object\") {\n                    a = Object.keys(a);\n                }\n                a.forEach(function (item) {\n                    var slice;\n                    if (item[0] === \"-\") {\n                        slice = item.slice(1);\n                        JSHINT.blacklist[slice] = slice;\n                    } else {\n                        predefined[item] = true;\n                    }\n                });\n            }\n\n            optionKeys = Object.keys(o);\n            for (x = 0; x < optionKeys.length; x++) {\n                newOptionObj[optionKeys[x]] = o[optionKeys[x]];\n\n                if (optionKeys[x] === \"newcap\" && o[optionKeys[x]] === false)\n                    newOptionObj[\"(explicitNewcap)\"] = true;\n\n                if (optionKeys[x] === \"indent\")\n                    newOptionObj.white = true;\n            }\n        }\n\n        option = newOptionObj;\n\n        option.indent = option.indent || 4;\n        option.maxerr = option.maxerr || 50;\n\n        tab = \"\";\n        for (i = 0; i < option.indent; i += 1) {\n            tab += \" \";\n        }\n        indent = 1;\n        global = Object.create(predefined);\n        scope = global;\n        funct = {\n            \"(global)\":   true,\n            \"(name)\":     \"(global)\",\n            \"(scope)\":    scope,\n            \"(breakage)\": 0,\n            \"(loopage)\":  0,\n            \"(tokens)\":   {},\n            \"(metrics)\":   createMetrics(nexttoken)\n        };\n        functions = [funct];\n        urls = [];\n        stack = null;\n        member = {};\n        membersOnly = null;\n        implied = {};\n        inblock = false;\n        lookahead = [];\n        jsonmode = false;\n        warnings = 0;\n        lines = [];\n        unuseds = [];\n\n        if (!isString(s) && !Array.isArray(s)) {\n            errorAt(\"Input is neither a string nor an array of strings.\", 0);\n            return false;\n        }\n\n        if (isString(s) && /^\\s*$/g.test(s)) {\n            errorAt(\"Input is an empty string.\", 0);\n            return false;\n        }\n\n        if (s.length === 0) {\n            errorAt(\"Input is an empty array.\", 0);\n            return false;\n        }\n\n        lex.init(s);\n\n        prereg = true;\n        directive = {};\n\n        prevtoken = token = nexttoken = syntax[\"(begin)\"];\n\n        // Check options\n        for (var name in o) {\n            if (is_own(o, name)) {\n                checkOption(name, token);\n            }\n        }\n\n        assume();\n\n        // combine the passed globals after we've assumed all our options\n        combine(predefined, g || {});\n\n        //reset values\n        comma.first = true;\n        quotmark = undefined;\n\n        try {\n            advance();\n            switch (nexttoken.id) {\n            case \"{\":\n            case \"[\":\n                option.laxbreak = true;\n                jsonmode = true;\n                jsonValue();\n                break;\n            default:\n                directives();\n                if (directive[\"use strict\"] && !option.globalstrict) {\n                    warning(\"Use the function form of \\\"use strict\\\".\", prevtoken);\n                }\n\n                statements();\n            }\n            advance((nexttoken && nexttoken.value !== \".\")  ? \"(end)\" : undefined);\n\n            var markDefined = function (name, context) {\n                do {\n                    if (typeof context[name] === \"string\") {\n                        // JSHINT marks unused variables as 'unused' and\n                        // unused function declaration as 'unction'. This\n                        // code changes such instances back 'var' and\n                        // 'closure' so that the code in JSHINT.data()\n                        // doesn't think they're unused.\n\n                        if (context[name] === \"unused\")\n                            context[name] = \"var\";\n                        else if (context[name] === \"unction\")\n                            context[name] = \"closure\";\n\n                        return true;\n                    }\n\n                    context = context[\"(context)\"];\n                } while (context);\n\n                return false;\n            };\n\n            var clearImplied = function (name, line) {\n                if (!implied[name])\n                    return;\n\n                var newImplied = [];\n                for (var i = 0; i < implied[name].length; i += 1) {\n                    if (implied[name][i] !== line)\n                        newImplied.push(implied[name][i]);\n                }\n\n                if (newImplied.length === 0)\n                    delete implied[name];\n                else\n                    implied[name] = newImplied;\n            };\n\n            var warnUnused = function (name, token) {\n                var line = token.line;\n                var chr  = token.character;\n\n                if (option.unused)\n                    warningAt(\"'{a}' is defined but never used.\", line, chr, name);\n\n                unuseds.push({\n                    name: name,\n                    line: line,\n                    character: chr\n                });\n            };\n\n            var checkUnused = function (func, key) {\n                var type = func[key];\n                var token = func[\"(tokens)\"][key];\n\n                if (key.charAt(0) === \"(\")\n                    return;\n\n                if (type !== \"unused\" && type !== \"unction\")\n                    return;\n\n                // Params are checked separately from other variables.\n                if (func[\"(params)\"] && func[\"(params)\"].indexOf(key) !== -1)\n                    return;\n\n                warnUnused(key, token);\n            };\n\n            // Check queued 'x is not defined' instances to see if they're still undefined.\n            for (i = 0; i < JSHINT.undefs.length; i += 1) {\n                k = JSHINT.undefs[i].slice(0);\n\n                if (markDefined(k[2].value, k[0])) {\n                    clearImplied(k[2].value, k[2].line);\n                } else {\n                    warning.apply(warning, k.slice(1));\n                }\n            }\n\n            functions.forEach(function (func) {\n                for (var key in func) {\n                    if (is_own(func, key)) {\n                        checkUnused(func, key);\n                    }\n                }\n\n                if (!func[\"(params)\"])\n                    return;\n\n                var params = func[\"(params)\"].slice();\n                var param  = params.pop();\n                var type;\n\n                while (param) {\n                    type = func[param];\n\n                    // 'undefined' is a special case for (function (window, undefined) { ... })();\n                    // patterns.\n\n                    if (param === \"undefined\")\n                        return;\n\n                    if (type !== \"unused\" && type !== \"unction\")\n                        return;\n\n                    warnUnused(param, func[\"(tokens)\"][param]);\n                    param = params.pop();\n                }\n            });\n\n            for (var key in declared) {\n                if (is_own(declared, key) && !is_own(global, key)) {\n                    warnUnused(key, declared[key]);\n                }\n            }\n        } catch (e) {\n            if (e) {\n                var nt = nexttoken || {};\n                JSHINT.errors.push({\n                    raw       : e.raw,\n                    reason    : e.message,\n                    line      : e.line || nt.line,\n                    character : e.character || nt.from\n                }, null);\n            }\n        }\n\n        // Loop over the listed \"internals\", and check them as well.\n\n        if (JSHINT.scope === \"(main)\") {\n            o = o || {};\n\n            for (i = 0; i < JSHINT.internals.length; i += 1) {\n                k = JSHINT.internals[i];\n                o.scope = k.elem;\n                itself(k.value, o, g);\n            }\n        }\n\n        return JSHINT.errors.length === 0;\n    };\n\n    // Data summary.\n    itself.data = function () {\n        var data = {\n            functions: [],\n            options: option\n        };\n        var implieds = [];\n        var members = [];\n        var fu, f, i, j, n, globals;\n\n        if (itself.errors.length) {\n            data.errors = itself.errors;\n        }\n\n        if (jsonmode) {\n            data.json = true;\n        }\n\n        for (n in implied) {\n            if (is_own(implied, n)) {\n                implieds.push({\n                    name: n,\n                    line: implied[n]\n                });\n            }\n        }\n\n        if (implieds.length > 0) {\n            data.implieds = implieds;\n        }\n\n        if (urls.length > 0) {\n            data.urls = urls;\n        }\n\n        globals = Object.keys(scope);\n        if (globals.length > 0) {\n            data.globals = globals;\n        }\n\n        for (i = 1; i < functions.length; i += 1) {\n            f = functions[i];\n            fu = {};\n\n            for (j = 0; j < functionicity.length; j += 1) {\n                fu[functionicity[j]] = [];\n            }\n\n            for (j = 0; j < functionicity.length; j += 1) {\n                if (fu[functionicity[j]].length === 0) {\n                    delete fu[functionicity[j]];\n                }\n            }\n\n            fu.name = f[\"(name)\"];\n            fu.param = f[\"(params)\"];\n            fu.line = f[\"(line)\"];\n            fu.character = f[\"(character)\"];\n            fu.last = f[\"(last)\"];\n            fu.lastcharacter = f[\"(lastcharacter)\"];\n            data.functions.push(fu);\n        }\n\n        if (unuseds.length > 0) {\n            data.unused = unuseds;\n        }\n\n        members = [];\n        for (n in member) {\n            if (typeof member[n] === \"number\") {\n                data.member = member;\n                break;\n            }\n        }\n\n        return data;\n    };\n\n    itself.jshint = itself;\n\n    return itself;\n}());\n\n// Make JSHINT a Node module, if possible.\nif (typeof exports === \"object\" && exports) {\n    exports.JSHINT = JSHINT;\n}\n"]},"metadata":{},"sourceType":"script"}